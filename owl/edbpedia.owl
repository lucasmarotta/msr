Prefix(:=<http://dbpedia.org/ontology/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://dbpedia.org/ontology/>
Import(<http://www.semanticweb.org/matac93/ontology/fao>)
Import(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite>)
Annotation(owl:versionInfo "Version 3.8"@en)

Declaration(Class(:Abbey))
AnnotationAssertion(rdfs:comment :Abbey "An abbey is a Catholic monastery or convent, under the authority of an Abbot or an Abbess, who serves as the spiritual father or mother of the community."@en)
AnnotationAssertion(rdfs:comment :Abbey "Un'abbazia (detta anche abazia o badia a seconda se diretta da un abate o una badessa), è un particolare tipo di monastero, che per il diritto canonico è un ente autonomo."@it)
AnnotationAssertion(rdfs:label :Abbey "abdij"@nl)
AnnotationAssertion(rdfs:label :Abbey "abbey"@en)
AnnotationAssertion(rdfs:label :Abbey "abadía"@es)
AnnotationAssertion(rdfs:comment :Abbey "Une abbaye est un monastère ou un couvent catholique placé sous la direction d'un abbé, lequel sert de père spirituel à la communauté religieuse"@fr)
AnnotationAssertion(rdfs:label :Abbey "abbazia"@it)
AnnotationAssertion(rdfs:label :Abbey "abbaye"@fr)
SubClassOf(:Abbey :ReligiousBuilding)
Declaration(Class(:AcademicJournal))
AnnotationAssertion(rdfs:label :AcademicJournal "wetenschappelijk tijdschrift"@nl)
AnnotationAssertion(rdfs:label :AcademicJournal "journal académique"@fr)
AnnotationAssertion(rdfs:label :AcademicJournal "giornale accademico"@it)
AnnotationAssertion(rdfs:label :AcademicJournal "ακαδημαϊκό περιοδικό"@el)
AnnotationAssertion(rdfs:label :AcademicJournal "学術雑誌"@ja)
AnnotationAssertion(rdfs:label :AcademicJournal "academic journal"@en)
AnnotationAssertion(rdfs:label :AcademicJournal "학술지"@ko)
AnnotationAssertion(rdfs:comment :AcademicJournal "An academic journal is a mostly peer-reviewed periodical in which scholarship relating to a particular academic discipline is published. Academic journals serve as forums for the introduction and presentation for scrutiny of new research, and the critique of existing research. Content typically takes the form of articles presenting original research, review articles, and book reviews."@en)
AnnotationAssertion(rdfs:comment :AcademicJournal "Wissenschaftliche Fachzeitschriften sind regelmäßig verlegte Fachzeitschriften über Spezialthemen aus den verschiedensten wissenschaftlichen Disziplinen. Sie stellen neue Methoden, Techniken und aktuelle Trends aus den Wissenschaften dar."@de)
AnnotationAssertion(rdfs:label :AcademicJournal "Wissenschaftliche Fachzeitschrift"@de)
AnnotationAssertion(rdfs:comment :AcademicJournal "Ένα ακαδημαϊκό περιοδικό είναι ως επί το πλείστον περιοδικό για κριτικές οι οποίες σχετίζονται με έναν συγκεκριμένο ακαδημαϊκό τομέα. Τα ακαδημαϊκά περιοδικά χρησιμεύουν ως φόρουμ για την εισαγωγή και παρουσίαση του ελέγχου των νέων ερευνών και της κριτικής της υπάρχουσας έρευνας. Το περιεχόμενο έχει συνήθως την μορφή άρθρων παρουσίασης νέας έρευνας, ανασκόπησης υπάρχων άρθρων και κριτικές βιβλίων."@el)
SubClassOf(:AcademicJournal :PeriodicalLiterature)
Declaration(Class(:Activity))
AnnotationAssertion(rdfs:label :Activity "activity"@en)
AnnotationAssertion(rdfs:label :Activity "activiteit"@nl)
AnnotationAssertion(rdfs:label :Activity "Δραστηριότητα"@el)
AnnotationAssertion(rdfs:label :Activity "attività"@it)
AnnotationAssertion(rdfs:label :Activity "活動"@ja)
AnnotationAssertion(rdfs:label :Activity "Aktivität"@de)
AnnotationAssertion(rdfs:label :Activity "actividad"@es)
AnnotationAssertion(rdfs:label :Activity "activité"@fr)
AnnotationAssertion(rdfs:label :Activity "atividade"@pt)
SubClassOf(:Activity owl:Thing)
DisjointClasses(:Activity :Person)
Declaration(Class(:Actor))
AnnotationAssertion(rdfs:comment :Actor "Μια ηθοποιός ή ένας ηθοποιός είναι ένα άτομο που παίζει σε μια δραματική παραγωγή και που εργάζεται στο χώρο του κινηματογράφου, της τηλεόρασης, του θεάτρου, ή το ραδιόφωνο."@el)
AnnotationAssertion(rdfs:label :Actor "attore"@it)
AnnotationAssertion(rdfs:label :Actor "aktor"@pl)
AnnotationAssertion(rdfs:comment :Actor "Un attore o un attrice è una persona che recita in una produzione teatrale, televisiva, cinematografica o radiofonica."@it)
AnnotationAssertion(rdfs:comment :Actor "An actor or actress is a person who acts in a dramatic production and who works in film, television, theatre, or radio in that capacity."@en)
AnnotationAssertion(rdfs:label :Actor "actor"@es)
AnnotationAssertion(rdfs:label :Actor "영화인"@ko)
AnnotationAssertion(rdfs:label :Actor "acteur"@nl)
AnnotationAssertion(rdfs:label :Actor "俳優"@ja)
AnnotationAssertion(rdfs:label :Actor "actor"@en)
AnnotationAssertion(rdfs:label :Actor "Schauspieler"@de)
AnnotationAssertion(rdfs:label :Actor "ator"@pt)
AnnotationAssertion(rdfs:label :Actor "acteur"@fr)
AnnotationAssertion(rdfs:label :Actor "ηθοποιός"@el)
SubClassOf(:Actor :Artist)
Declaration(Class(:AdministrativeRegion))
AnnotationAssertion(rdfs:label :AdministrativeRegion "bestuurlijk gebied"@nl)
AnnotationAssertion(rdfs:label :AdministrativeRegion "行政区画"@ja)
AnnotationAssertion(rdfs:comment :AdministrativeRegion "A PopulatedPlace under the jurisdiction of an administrative body. This body may administer either a whole region or one or more adjacent Settlements (town administration)"@en)
AnnotationAssertion(rdfs:label :AdministrativeRegion "regione amministrativa"@it)
AnnotationAssertion(rdfs:label :AdministrativeRegion "région administrative"@fr)
AnnotationAssertion(rdfs:label :AdministrativeRegion "διοικητική περιφέρεια"@el)
AnnotationAssertion(rdfs:label :AdministrativeRegion "administrative region"@en)
EquivalentClasses(:AdministrativeRegion <http://schema.org/AdministrativeArea>)
SubClassOf(:AdministrativeRegion :Region)
Declaration(Class(:AdultActor))
AnnotationAssertion(rdfs:label :AdultActor "actor adulto"@es)
AnnotationAssertion(rdfs:label :AdultActor "ポルノ女優"@ja)
AnnotationAssertion(rdfs:label :AdultActor "pornographischer Schauspieler"@de)
AnnotationAssertion(rdfs:label :AdultActor "adult (pornographic) actor"@en)
AnnotationAssertion(rdfs:label :AdultActor "ator adulto"@pt)
AnnotationAssertion(rdfs:label :AdultActor "acteur adulte"@fr)
AnnotationAssertion(rdfs:label :AdultActor "ενήλικας (πορνογραφικός) ηθοποιός"@el)
AnnotationAssertion(rdfs:label :AdultActor "attore porno"@it)
AnnotationAssertion(rdfs:label :AdultActor "pornografisch acteur"@nl)
SubClassOf(:AdultActor :Actor)
Declaration(Class(:Agent))
AnnotationAssertion(rdfs:label :Agent "agente"@it)
AnnotationAssertion(rdfs:label :Agent "agent"@fr)
AnnotationAssertion(rdfs:label :Agent "agente"@es)
AnnotationAssertion(rdfs:label :Agent "πράκτορας"@el)
AnnotationAssertion(rdfs:label :Agent "エージェント"@ja)
AnnotationAssertion(rdfs:label :Agent "agent"@en)
AnnotationAssertion(rdfs:label :Agent "agent"@nl)
AnnotationAssertion(rdfs:comment :Agent "Analogous to a foaf:Agent, an agent is an entity that acts. This is intended to be the super class of Person and Organisation."@en)
AnnotationAssertion(rdfs:comment :Agent "Ανάλογα με την κλάση foaf:Agent, ένας πράκτορας είναι μια οντότητα που ενεργεί. Αυτό προορίζεται να είναι μια υπερκλάση της κλάσης Άτόμο και Οργανισμός."@el)
SubClassOf(:Agent owl:Thing)
Declaration(Class(:Aircraft))
AnnotationAssertion(rdfs:label :Aircraft "航空機"@ja)
AnnotationAssertion(rdfs:label :Aircraft "avion"@fr)
AnnotationAssertion(rdfs:label :Aircraft "aereo"@it)
AnnotationAssertion(rdfs:label :Aircraft "Flugzeug"@de)
AnnotationAssertion(rdfs:label :Aircraft "비행기"@ko)
AnnotationAssertion(rdfs:label :Aircraft "aircraft"@en)
AnnotationAssertion(rdfs:label :Aircraft "vliegtuig"@nl)
AnnotationAssertion(rdfs:label :Aircraft "αεροσκάφος"@el)
SubClassOf(:Aircraft :MeanOfTransportation)
SubClassOf(:Aircraft <http://schema.org/Product>)
Declaration(Class(:Airline))
AnnotationAssertion(rdfs:label :Airline "airline"@en)
AnnotationAssertion(rdfs:label :Airline "compagnie aérienne"@fr)
AnnotationAssertion(rdfs:label :Airline "航空会社"@ja)
AnnotationAssertion(rdfs:label :Airline "항공사"@ko)
AnnotationAssertion(rdfs:label :Airline "luchtvaartmaatschappij"@nl)
AnnotationAssertion(rdfs:label :Airline "αεροπορική εταιρεία"@el)
AnnotationAssertion(rdfs:label :Airline "compagnia aerea"@it)
AnnotationAssertion(rdfs:label :Airline "Fluggesellschaft"@de)
SubClassOf(:Airline :Company)
Declaration(Class(:Airport))
AnnotationAssertion(rdfs:label :Airport "空港"@ja)
AnnotationAssertion(rdfs:label :Airport "aéroport"@fr)
AnnotationAssertion(rdfs:label :Airport "aeroporto"@it)
AnnotationAssertion(rdfs:label :Airport "aeroporto"@pt)
AnnotationAssertion(rdfs:label :Airport "lotnisko"@pl)
AnnotationAssertion(rdfs:label :Airport "airport"@en)
AnnotationAssertion(rdfs:label :Airport "luchthaven"@nl)
AnnotationAssertion(rdfs:label :Airport "공항"@ko)
AnnotationAssertion(rdfs:label :Airport "αεροδρόμιο"@el)
AnnotationAssertion(rdfs:label :Airport "aeropuerto"@es)
AnnotationAssertion(rdfs:label :Airport "Flughafen"@de)
EquivalentClasses(:Airport <http://schema.org/Airport>)
SubClassOf(:Airport :Infrastructure)
Declaration(Class(:Album))
AnnotationAssertion(rdfs:label :Album "앨범"@ko)
AnnotationAssertion(rdfs:label :Album "album"@nl)
AnnotationAssertion(rdfs:label :Album "album"@fr)
AnnotationAssertion(rdfs:label :Album "アルバム"@ja)
AnnotationAssertion(rdfs:label :Album "album"@el)
AnnotationAssertion(rdfs:label :Album "album"@it)
AnnotationAssertion(rdfs:label :Album "Album"@de)
AnnotationAssertion(rdfs:label :Album "album"@en)
EquivalentClasses(:Album <http://schema.org/MusicAlbum>)
SubClassOf(:Album :MusicalWork)
Declaration(Class(:AmateurBoxer))
AnnotationAssertion(rdfs:label :AmateurBoxer "ερασιτέχνης μποξέρ"@el)
AnnotationAssertion(rdfs:label :AmateurBoxer "amateur boxer"@en)
AnnotationAssertion(rdfs:label :AmateurBoxer "pugile amatoriale"@it)
AnnotationAssertion(rdfs:label :AmateurBoxer "アマチュアボクサー"@ja)
AnnotationAssertion(rdfs:label :AmateurBoxer "boxeur amateur"@fr)
SubClassOf(:AmateurBoxer :Boxer)
Declaration(Class(:Ambassador))
AnnotationAssertion(rdfs:label :Ambassador "ambassadeur"@nl)
AnnotationAssertion(rdfs:label :Ambassador "ambassador"@en)
AnnotationAssertion(rdfs:label :Ambassador "Botschafter"@de)
AnnotationAssertion(rdfs:comment :Ambassador "An ambassador is the highest ranking diplomat that represents a nation and is usually accredited to a foreign sovereign or government, or to an international organization."@en)
AnnotationAssertion(rdfs:label :Ambassador "大使"@ja)
AnnotationAssertion(rdfs:label :Ambassador "ambasciatore"@it)
AnnotationAssertion(rdfs:label :Ambassador "ambassadeur"@fr)
AnnotationAssertion(rdfs:label :Ambassador "πρεσβευτής"@el)
SubClassOf(:Ambassador :Person)
Declaration(Class(:AmericanFootballLeague))
AnnotationAssertion(rdfs:label :AmericanFootballLeague "liga de futebol americano"@pt)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "アメリカン・フットボール・リーグ"@ja)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "Amerikaanse voetbal competitie"@nl)
AnnotationAssertion(rdfs:comment :AmericanFootballLeague "Ένα σύνολο αθλητικών ομάδων που ανταγωνίζονται μεταξύ τους στο αμερικάνικο ποδόσφαιρο."@el)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "aμερικανικό πρωτάθλημα ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "american football league"@fr)
AnnotationAssertion(rdfs:comment :AmericanFootballLeague "A group of sports teams that compete against each other in american football."@en)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "american football league"@en)
AnnotationAssertion(rdfs:label :AmericanFootballLeague "lega di football americano"@it)
SubClassOf(:AmericanFootballLeague :SportsLeague)
Declaration(Class(:AmericanFootballPlayer))
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "american football player"@en)
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "giocatore di football americano"@it)
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "joueur de football américain"@fr)
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "παίκτης αμερικανικού ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "American footballspeler"@nl)
AnnotationAssertion(rdfs:label :AmericanFootballPlayer "アメリカンフットボール選手"@ja)
SubClassOf(:AmericanFootballPlayer :GridironFootballPlayer)
Declaration(Class(:AmericanFootballTeam))
AnnotationAssertion(rdfs:label :AmericanFootballTeam "アメリカン・フットボール・チーム"@ja)
AnnotationAssertion(rdfs:label :AmericanFootballTeam "ομάδα αμερικανικού ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :AmericanFootballTeam "american football team"@en)
AnnotationAssertion(rdfs:label :AmericanFootballTeam "équipe américaine de football américain"@fr)
AnnotationAssertion(rdfs:label :AmericanFootballTeam "squadra di football americano"@it)
SubClassOf(:AmericanFootballTeam :SportsTeam)
Declaration(Class(:Amphibian))
AnnotationAssertion(rdfs:label :Amphibian "anfibio"@it)
AnnotationAssertion(rdfs:label :Amphibian "anfíbio"@pt)
AnnotationAssertion(rdfs:label :Amphibian "amphibian"@en)
AnnotationAssertion(rdfs:label :Amphibian "amphibien"@fr)
AnnotationAssertion(rdfs:label :Amphibian "αμφίβιο"@el)
AnnotationAssertion(rdfs:label :Amphibian "両生類"@ja)
AnnotationAssertion(rdfs:label :Amphibian "amfibie"@nl)
SubClassOf(:Amphibian :Animal)
Declaration(Class(:AnatomicalStructure))
AnnotationAssertion(rdfs:label :AnatomicalStructure "解剖構造"@ja)
AnnotationAssertion(rdfs:label :AnatomicalStructure "structure anatomique"@fr)
AnnotationAssertion(rdfs:label :AnatomicalStructure "struttura anatomica"@it)
AnnotationAssertion(rdfs:label :AnatomicalStructure "anatomska struktura"@sl)
AnnotationAssertion(rdfs:label :AnatomicalStructure "anatomical structure"@en)
AnnotationAssertion(rdfs:label :AnatomicalStructure "해부학"@ko)
AnnotationAssertion(rdfs:label :AnatomicalStructure "anatomische structuur"@nl)
AnnotationAssertion(rdfs:label :AnatomicalStructure "ανατομική δομή"@el)
SubClassOf(:AnatomicalStructure owl:Thing)
Declaration(Class(:Animal))
AnnotationAssertion(rdfs:label :Animal "Tier"@de)
AnnotationAssertion(rdfs:label :Animal "animal"@fr)
AnnotationAssertion(rdfs:label :Animal "žival"@sl)
AnnotationAssertion(rdfs:label :Animal "animale"@it)
AnnotationAssertion(rdfs:label :Animal "animal"@en)
AnnotationAssertion(rdfs:label :Animal "ζώο"@el)
AnnotationAssertion(rdfs:label :Animal "動物"@ja)
AnnotationAssertion(rdfs:label :Animal "동물"@ko)
AnnotationAssertion(rdfs:label :Animal "dier"@nl)
SubClassOf(:Animal :Eukaryote)
Declaration(Class(:AnimangaCharacter))
AnnotationAssertion(rdfs:comment :AnimangaCharacter "Anime/Manga character"@en)
AnnotationAssertion(rdfs:comment :AnimangaCharacter "Χαρακτήρας από Άνιμε/Μάνγκα"@el)
AnnotationAssertion(rdfs:label :AnimangaCharacter "キャラクター"@ja)
AnnotationAssertion(rdfs:label :AnimangaCharacter "χαρακτήρας ανιμάνγκα"@el)
AnnotationAssertion(rdfs:label :AnimangaCharacter "personaggio animanga"@it)
AnnotationAssertion(rdfs:label :AnimangaCharacter "animanga character"@en)
SubClassOf(:AnimangaCharacter :ComicsCharacter)
Declaration(Class(:Anime))
AnnotationAssertion(rdfs:label :Anime "άνιμε"@el)
AnnotationAssertion(rdfs:label :Anime "anime"@it)
AnnotationAssertion(rdfs:comment :Anime "Στυλ κινουμένων σχεδίων με καταγωγή την Ιαπωνία"@el)
AnnotationAssertion(rdfs:comment :Anime "A style of animation originating in Japan"@en)
AnnotationAssertion(rdfs:label :Anime "アニメ"@ja)
AnnotationAssertion(rdfs:label :Anime "anime"@en)
SubClassOf(:Anime :Cartoon)
Declaration(Class(:Arachnid))
AnnotationAssertion(rdfs:label :Arachnid "クモ綱"@ja)
AnnotationAssertion(rdfs:label :Arachnid "aracnide"@it)
AnnotationAssertion(rdfs:label :Arachnid "spinachtigen"@nl)
AnnotationAssertion(rdfs:label :Arachnid "arachnides"@fr)
AnnotationAssertion(rdfs:label :Arachnid "αραχνοειδές"@el)
AnnotationAssertion(rdfs:label :Arachnid "arachnid"@en)
AnnotationAssertion(rdfs:label :Arachnid "aracnídeos"@pt)
SubClassOf(:Arachnid :Animal)
Declaration(Class(:Archaea))
AnnotationAssertion(rdfs:label :Archaea "古細菌"@ja)
AnnotationAssertion(rdfs:label :Archaea "archei"@it)
AnnotationAssertion(rdfs:label :Archaea "archées"@fr)
AnnotationAssertion(rdfs:label :Archaea "αρχαία"@el)
AnnotationAssertion(rdfs:label :Archaea "archaea"@en)
SubClassOf(:Archaea :Species)
Declaration(Class(:Architect))
AnnotationAssertion(rdfs:label :Architect "architect"@en)
AnnotationAssertion(rdfs:label :Architect "建築士"@ja)
AnnotationAssertion(rdfs:label :Architect "architetto"@it)
AnnotationAssertion(rdfs:label :Architect "건축가"@ko)
AnnotationAssertion(rdfs:label :Architect "architecte"@fr)
AnnotationAssertion(rdfs:label :Architect "architect"@nl)
AnnotationAssertion(rdfs:label :Architect "αρχιτέκτονας"@el)
AnnotationAssertion(rdfs:label :Architect "arquitecto"@es)
AnnotationAssertion(rdfs:label :Architect "Architekt"@de)
SubClassOf(:Architect :Person)
Declaration(Class(:ArchitecturalStructure))
AnnotationAssertion(rdfs:label :ArchitecturalStructure "構造物"@ja)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "Bauwerk"@de)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "structure architecturale"@fr)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "αρχιτεκτονική κατασκευή"@el)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "bouwkundige structuur"@nl)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "struttura architettonica"@it)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "estructura arquitectural"@es)
AnnotationAssertion(rdfs:label :ArchitecturalStructure "architectural structure"@en)
SubClassOf(:ArchitecturalStructure :Place)
Declaration(Class(:Arena))
AnnotationAssertion(rdfs:label :Arena "stadio"@it)
AnnotationAssertion(rdfs:label :Arena "arena"@en)
AnnotationAssertion(rdfs:label :Arena "παλαίστρα"@el)
AnnotationAssertion(rdfs:label :Arena "arena"@pt)
AnnotationAssertion(rdfs:label :Arena "stadion"@nl)
AnnotationAssertion(rdfs:label :Arena "アリーナ"@ja)
AnnotationAssertion(rdfs:label :Arena "stadion"@de)
EquivalentClasses(:Arena <http://schema.org/StadiumOrArena>)
SubClassOf(:Arena :Building)
Declaration(Class(:Aristocrat))
AnnotationAssertion(rdfs:label :Aristocrat "architect"@en)
SubClassOf(:Aristocrat :Person)
Declaration(Class(:Artery))
AnnotationAssertion(rdfs:label :Artery "動脈"@ja)
AnnotationAssertion(rdfs:label :Artery "artère"@fr)
AnnotationAssertion(rdfs:label :Artery "αρτηρία"@el)
AnnotationAssertion(rdfs:label :Artery "arteria"@it)
AnnotationAssertion(rdfs:label :Artery "Arterie"@de)
AnnotationAssertion(rdfs:label :Artery "artery"@en)
SubClassOf(:Artery :AnatomicalStructure)
Declaration(Class(:Artist))
AnnotationAssertion(rdfs:label :Artist "芸術家"@ja)
AnnotationAssertion(rdfs:label :Artist "καλλιτέχνης"@el)
AnnotationAssertion(rdfs:label :Artist "Künstler"@de)
AnnotationAssertion(rdfs:label :Artist "artist"@en)
AnnotationAssertion(rdfs:label :Artist "artiste"@fr)
AnnotationAssertion(rdfs:label :Artist "kunstenaar"@nl)
AnnotationAssertion(rdfs:label :Artist "artista"@it)
AnnotationAssertion(rdfs:label :Artist "예술가"@ko)
SubClassOf(:Artist :Person)
Declaration(Class(:ArtistDiscography))
AnnotationAssertion(rdfs:label :ArtistDiscography "discographie de l'artiste"@fr)
AnnotationAssertion(rdfs:label :ArtistDiscography "discografia dell'artista"@it)
AnnotationAssertion(rdfs:label :ArtistDiscography "δισκογραφία καλλιτέχνη"@el)
AnnotationAssertion(rdfs:label :ArtistDiscography "ディスコグラフィ"@ja)
AnnotationAssertion(rdfs:label :ArtistDiscography "artist discography"@en)
SubClassOf(:ArtistDiscography :MusicalWork)
Declaration(Class(:Artwork))
AnnotationAssertion(rdfs:comment :Artwork "A work of art, artwork, art piece, or art object is an aesthetic item or artistic creation."@en)
AnnotationAssertion(rdfs:label :Artwork "œuvre d'art"@fr)
AnnotationAssertion(rdfs:label :Artwork "artwork"@en)
AnnotationAssertion(rdfs:label :Artwork "obra de arte"@es)
AnnotationAssertion(rdfs:label :Artwork "opera d'arte"@it)
AnnotationAssertion(rdfs:label :Artwork "kunstwerk"@nl)
AnnotationAssertion(rdfs:label :Artwork "作品"@ja)
AnnotationAssertion(rdfs:label :Artwork "έργο τέχνης"@el)
SubClassOf(:Artwork :Work)
Declaration(Class(:Asteroid))
AnnotationAssertion(rdfs:label :Asteroid "小惑星"@ja)
AnnotationAssertion(rdfs:label :Asteroid "asteroid"@en)
AnnotationAssertion(rdfs:label :Asteroid "asteroide"@it)
AnnotationAssertion(rdfs:label :Asteroid "asteróide"@pt)
AnnotationAssertion(rdfs:label :Asteroid "astéroïde"@fr)
AnnotationAssertion(rdfs:label :Asteroid "asteroide"@es)
AnnotationAssertion(rdfs:label :Asteroid "αστεροειδής"@el)
SubClassOf(:Asteroid :CelestialBody)
Declaration(Class(:Astronaut))
AnnotationAssertion(rdfs:label :Astronaut "우주인"@ko)
AnnotationAssertion(rdfs:label :Astronaut "ruimtevaarder"@nl)
AnnotationAssertion(rdfs:label :Astronaut "astronauta"@es)
AnnotationAssertion(rdfs:label :Astronaut "宇宙飛行士"@ja)
AnnotationAssertion(rdfs:label :Astronaut "astronauta"@it)
AnnotationAssertion(rdfs:label :Astronaut "astronaute"@fr)
AnnotationAssertion(rdfs:label :Astronaut "astronaut"@en)
AnnotationAssertion(rdfs:label :Astronaut "astronauta"@pt)
AnnotationAssertion(rdfs:label :Astronaut "Astronaut"@de)
AnnotationAssertion(rdfs:label :Astronaut "αστροναύτης"@el)
SubClassOf(:Astronaut :Person)
Declaration(Class(:Athlete))
AnnotationAssertion(rdfs:label :Athlete "athlete"@en)
AnnotationAssertion(rdfs:label :Athlete "atleet"@nl)
AnnotationAssertion(rdfs:label :Athlete "αθλητής"@el)
AnnotationAssertion(rdfs:label :Athlete "athlète"@fr)
AnnotationAssertion(rdfs:label :Athlete "atleta"@it)
AnnotationAssertion(rdfs:label :Athlete "アスリート"@ja)
AnnotationAssertion(rdfs:label :Athlete "Athlet"@de)
SubClassOf(:Athlete :Person)
Declaration(Class(:Atoll))
AnnotationAssertion(rdfs:label :Atoll "ατόλη"@el)
AnnotationAssertion(rdfs:label :Atoll "atoll"@en)
AnnotationAssertion(rdfs:label :Atoll "atoll"@fr)
AnnotationAssertion(rdfs:label :Atoll "atollo"@it)
AnnotationAssertion(rdfs:label :Atoll "環礁"@ja)
AnnotationAssertion(rdfs:label :Atoll "Atoll"@de)
SubClassOf(:Atoll :Island)
Declaration(Class(:AustralianFootballLeague))
AnnotationAssertion(rdfs:label :AustralianFootballLeague "オーストラリアン・フットボール・リーグ"@ja)
AnnotationAssertion(rdfs:label :AustralianFootballLeague "αυστραλιανό πρωτάθλημα ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :AustralianFootballLeague "australian football league"@en)
AnnotationAssertion(rdfs:comment :AustralianFootballLeague "Μια ομάδα αθλητικών ομάδων που ανταγωνίζονται μεταξύ τους σε αυστραλιανό ποδόσφαιρο."@el)
AnnotationAssertion(rdfs:comment :AustralianFootballLeague "A group of sports teams that compete against each other in australian football."@en)
AnnotationAssertion(rdfs:label :AustralianFootballLeague "australian football league"@fr)
AnnotationAssertion(rdfs:label :AustralianFootballLeague "liga de futebol australiano"@pt)
AnnotationAssertion(rdfs:label :AustralianFootballLeague "lega di football australiano"@it)
SubClassOf(:AustralianFootballLeague :SportsLeague)
Declaration(Class(:AustralianRulesFootballPlayer))
AnnotationAssertion(rdfs:label :AustralianRulesFootballPlayer "オージーフットボール選手"@ja)
AnnotationAssertion(rdfs:label :AustralianRulesFootballPlayer "αυστραλιανοί κανόνες ποδοσφαιριστή"@el)
AnnotationAssertion(rdfs:label :AustralianRulesFootballPlayer "giocatore di football australiano"@it)
AnnotationAssertion(rdfs:label :AustralianRulesFootballPlayer "Australian rules football player"@en)
SubClassOf(:AustralianRulesFootballPlayer :Athlete)
Declaration(Class(:AutoRacingLeague))
AnnotationAssertion(rdfs:label :AutoRacingLeague "自動車競技リーグ"@ja)
AnnotationAssertion(rdfs:label :AutoRacingLeague "πρωτάθλημα αγώνων αυτοκινήτων"@el)
AnnotationAssertion(rdfs:label :AutoRacingLeague "auto racing league"@en)
AnnotationAssertion(rdfs:comment :AutoRacingLeague "a group of sports teams or individual athletes that compete against each other in auto racing"@en)
AnnotationAssertion(rdfs:label :AutoRacingLeague "la ligue de course automobile"@fr)
AnnotationAssertion(rdfs:label :AutoRacingLeague "lega automobilistica"@it)
AnnotationAssertion(rdfs:comment :AutoRacingLeague "μια ομάδα αθλητικών ομάδων ή μεμονωμένων αθλητών που ανταγωνίζονται μεταξύ τους σε αγώνες αυτοκινήτων"@el)
SubClassOf(:AutoRacingLeague :SportsLeague)
Declaration(Class(:Automobile))
AnnotationAssertion(rdfs:label :Automobile "αυτοκίνητο"@el)
AnnotationAssertion(rdfs:label :Automobile "automovel"@pt)
AnnotationAssertion(rdfs:label :Automobile "automobile"@en)
AnnotationAssertion(rdfs:label :Automobile "automobile"@it)
AnnotationAssertion(rdfs:label :Automobile "automobile"@fr)
AnnotationAssertion(rdfs:label :Automobile "automóvil"@es)
AnnotationAssertion(rdfs:label :Automobile "avtomobil"@sl)
AnnotationAssertion(rdfs:label :Automobile "Automobil"@de)
AnnotationAssertion(rdfs:label :Automobile "自動車"@ja)
SubClassOf(:Automobile :MeanOfTransportation)
SubClassOf(:Automobile <http://schema.org/Product>)
Declaration(Class(:AutomobileEngine))
AnnotationAssertion(rdfs:label :AutomobileEngine "内燃機関"@ja)
AnnotationAssertion(rdfs:label :AutomobileEngine "Fahrzeugmotor"@de)
AnnotationAssertion(rdfs:label :AutomobileEngine "automobile engine"@en)
AnnotationAssertion(rdfs:label :AutomobileEngine "motore d'automobile"@it)
AnnotationAssertion(rdfs:label :AutomobileEngine "motor de automóvel"@pt)
AnnotationAssertion(rdfs:label :AutomobileEngine "κινητήρας αυτοκινήτου"@el)
AnnotationAssertion(rdfs:label :AutomobileEngine "moteur d'automobile"@fr)
SubClassOf(:AutomobileEngine :Device)
Declaration(Class(:Award))
AnnotationAssertion(rdfs:label :Award "nagroda"@pl)
AnnotationAssertion(rdfs:label :Award "award"@en)
AnnotationAssertion(rdfs:label :Award "premio"@it)
AnnotationAssertion(rdfs:label :Award "récompense"@fr)
AnnotationAssertion(rdfs:label :Award "βραβείο"@el)
AnnotationAssertion(rdfs:label :Award "賞"@ja)
AnnotationAssertion(rdfs:label :Award "Auszeichnung"@de)
AnnotationAssertion(rdfs:label :Award "상"@ko)
AnnotationAssertion(rdfs:label :Award "nagrada"@sl)
SubClassOf(:Award owl:Thing)
Declaration(Class(:Bacteria))
AnnotationAssertion(rdfs:label :Bacteria "bacteria"@es)
AnnotationAssertion(rdfs:label :Bacteria "bactérie"@fr)
AnnotationAssertion(rdfs:label :Bacteria "bakterium"@de)
AnnotationAssertion(rdfs:label :Bacteria "真正細菌"@ja)
AnnotationAssertion(rdfs:label :Bacteria "bacterie"@nl)
AnnotationAssertion(rdfs:label :Bacteria "bacteria"@en)
AnnotationAssertion(rdfs:label :Bacteria "batterio"@it)
AnnotationAssertion(rdfs:label :Bacteria "βακτήρια"@el)
SubClassOf(:Bacteria :Species)
Declaration(Class(:BadmintonPlayer))
AnnotationAssertion(rdfs:label :BadmintonPlayer "badminton player"@en)
AnnotationAssertion(rdfs:label :BadmintonPlayer "badmintonspeler"@nl)
AnnotationAssertion(rdfs:label :BadmintonPlayer "joueur de badminton"@fr)
AnnotationAssertion(rdfs:label :BadmintonPlayer "παίχτης του μπάντμιντον"@el)
AnnotationAssertion(rdfs:label :BadmintonPlayer "배드민턴 선수"@ko)
AnnotationAssertion(rdfs:label :BadmintonPlayer "バドミントン選手"@ja)
AnnotationAssertion(rdfs:label :BadmintonPlayer "jogador de badminton"@pt)
AnnotationAssertion(rdfs:label :BadmintonPlayer "giocatore di badminton"@it)
SubClassOf(:BadmintonPlayer :Athlete)
Declaration(Class(:Band))
AnnotationAssertion(rdfs:label :Band "음악 그룹"@ko)
AnnotationAssertion(rdfs:label :Band "gruppo musicale"@it)
AnnotationAssertion(rdfs:label :Band "banda"@pt)
AnnotationAssertion(rdfs:label :Band "Band"@en)
AnnotationAssertion(rdfs:label :Band "groupe de musique"@fr)
AnnotationAssertion(rdfs:label :Band "バンド_(音楽)"@ja)
AnnotationAssertion(rdfs:label :Band "band"@nl)
AnnotationAssertion(rdfs:label :Band "Musikgruppe"@de)
AnnotationAssertion(rdfs:label :Band "μουσικό συγκρότημα"@el)
AnnotationAssertion(rdfs:label :Band "banda"@es)
SubClassOf(:Band :Organisation)
SubClassOf(:Band <http://schema.org/MusicGroup>)
Declaration(Class(:BaseballLeague))
AnnotationAssertion(rdfs:comment :BaseballLeague "ένα σύνολο από ομάδες μπέιζμπολ οι οποίες συναγωνίζονται μεταξύ τους."@el)
AnnotationAssertion(rdfs:label :BaseballLeague "野球リーグ"@ja)
AnnotationAssertion(rdfs:label :BaseballLeague "lega di baseball"@it)
AnnotationAssertion(rdfs:label :BaseballLeague "πρωτάθλημα μπέιζμπολ"@el)
AnnotationAssertion(rdfs:label :BaseballLeague "ligue de baseball"@fr)
AnnotationAssertion(rdfs:label :BaseballLeague "baseball league"@en)
AnnotationAssertion(rdfs:comment :BaseballLeague "a group of sports teams that compete against each other in Baseball."@en)
SubClassOf(:BaseballLeague :SportsLeague)
Declaration(Class(:BaseballPlayer))
AnnotationAssertion(rdfs:label :BaseballPlayer "野球選手"@ja)
AnnotationAssertion(rdfs:label :BaseballPlayer "παίκτης μπέιζμπολ"@el)
AnnotationAssertion(rdfs:comment :BaseballPlayer "Ο αθλητής (άνδρας ή γυναίκα) που συμμετέχει σε μία ομάδα μπέιζμπολ."@el)
AnnotationAssertion(rdfs:label :BaseballPlayer "야구 선수"@ko)
AnnotationAssertion(rdfs:label :BaseballPlayer "joueur de baseball"@fr)
AnnotationAssertion(rdfs:label :BaseballPlayer "baseball player"@en)
AnnotationAssertion(rdfs:label :BaseballPlayer "jogador de basebol"@pt)
AnnotationAssertion(rdfs:label :BaseballPlayer "honkballer"@nl)
AnnotationAssertion(rdfs:label :BaseballPlayer "giocatore di baseball"@it)
SubClassOf(:BaseballPlayer :Athlete)
Declaration(Class(:BaseballTeam))
AnnotationAssertion(rdfs:label :BaseballTeam "squadra di baseball"@it)
AnnotationAssertion(rdfs:label :BaseballTeam "野球チーム"@ja)
AnnotationAssertion(rdfs:label :BaseballTeam "baseball team"@en)
AnnotationAssertion(rdfs:label :BaseballTeam "ομάδα μπέιζμπολ"@el)
AnnotationAssertion(rdfs:label :BaseballTeam "équipe de basket-ball"@fr)
AnnotationAssertion(rdfs:comment :BaseballTeam "Ένας αριθμός από άνδρες ή γυναίκες που αποτελούν ένα διακριτό σύνολο με συγκεκριμένους στόχους σχετικά με το άθλημα του μπέιζμπολ."@el)
SubClassOf(:BaseballTeam :SportsTeam)
Declaration(Class(:BasketballLeague))
AnnotationAssertion(rdfs:label :BasketballLeague "basketball league"@en)
AnnotationAssertion(rdfs:label :BasketballLeague "Ομοσπονδία Καλαθοσφαίρισης"@el)
AnnotationAssertion(rdfs:comment :BasketballLeague "a group of sports teams that compete against each other in Basketball"@en)
AnnotationAssertion(rdfs:label :BasketballLeague "lega di pallacanestro"@it)
AnnotationAssertion(rdfs:label :BasketballLeague "ligue de basketball"@fr)
AnnotationAssertion(rdfs:label :BasketballLeague "バスケットボールリーグ"@ja)
SubClassOf(:BasketballLeague :SportsLeague)
Declaration(Class(:BasketballPlayer))
AnnotationAssertion(rdfs:label :BasketballPlayer "joueur de basketball"@fr)
AnnotationAssertion(rdfs:label :BasketballPlayer "giocatore di pallacanestro"@it)
AnnotationAssertion(rdfs:label :BasketballPlayer "농구 선수"@ko)
AnnotationAssertion(rdfs:label :BasketballPlayer "Basquetbolista"@es)
AnnotationAssertion(rdfs:label :BasketballPlayer "παίκτης καλαθοσφαίρισης"@el)
AnnotationAssertion(rdfs:label :BasketballPlayer "basketball player"@en)
AnnotationAssertion(rdfs:comment :BasketballPlayer "Ένας αθλητής (άνδρας ή γυναίκα) που ασχολείται με το άθλημα της καλαθοσφαίρισης."@el)
AnnotationAssertion(rdfs:label :BasketballPlayer "バスケットボール選手"@ja)
SubClassOf(:BasketballPlayer :Athlete)
Declaration(Class(:BasketballTeam))
AnnotationAssertion(rdfs:label :BasketballTeam "basketball team"@en)
AnnotationAssertion(rdfs:label :BasketballTeam "équipe de basket-ball"@fr)
AnnotationAssertion(rdfs:label :BasketballTeam "time de basquete"@pt)
AnnotationAssertion(rdfs:label :BasketballTeam "squadra di pallacanestro"@it)
AnnotationAssertion(rdfs:label :BasketballTeam "Basketballmannschaft"@de)
AnnotationAssertion(rdfs:label :BasketballTeam "バスケットボールチーム"@ja)
AnnotationAssertion(rdfs:label :BasketballTeam "Κουτί πληροφοριών συλλόγου καλαθοσφαίρισης"@el)
SubClassOf(:BasketballTeam :SportsTeam)
Declaration(Class(:BeachVolleyballPlayer))
AnnotationAssertion(rdfs:label :BeachVolleyballPlayer "giocatore di beach volley"@it)
AnnotationAssertion(rdfs:label :BeachVolleyballPlayer "beach volleyball player"@en)
AnnotationAssertion(rdfs:comment :BeachVolleyballPlayer "Ένα άτομο (άνδρας ή γυναίκα) που ασχολείται με το άθλημα του μπίτς βόλλεϋ."@el)
AnnotationAssertion(rdfs:label :BeachVolleyballPlayer "παίκτης του beach volley"@el)
AnnotationAssertion(rdfs:label :BeachVolleyballPlayer "ビーチバレー選手"@ja)
SubClassOf(:BeachVolleyballPlayer :VolleyballPlayer)
Declaration(Class(:BeautyQueen))
AnnotationAssertion(rdfs:label :BeautyQueen "reginetta di bellezza"@it)
AnnotationAssertion(rdfs:label :BeautyQueen "βασίλισσα ομορφιάς"@el)
AnnotationAssertion(rdfs:comment :BeautyQueen "A beauty pageant titleholder"@en)
AnnotationAssertion(rdfs:comment :BeautyQueen "Τίτλος που αποδίδεται σε μία γυναίκα, τις περισσότερες φορές μετά από διαγωνισμό."@el)
AnnotationAssertion(rdfs:label :BeautyQueen "ミス"@ja)
AnnotationAssertion(rdfs:label :BeautyQueen "beauty queen"@en)
SubClassOf(:BeautyQueen :Person)
Declaration(Class(:Beer))
AnnotationAssertion(rdfs:label :Beer "cerveza"@es)
AnnotationAssertion(rdfs:label :Beer "ビール"@ja)
AnnotationAssertion(rdfs:label :Beer "beer"@en)
AnnotationAssertion(rdfs:label :Beer "Bier"@de)
AnnotationAssertion(rdfs:label :Beer "birra"@it)
AnnotationAssertion(rdfs:label :Beer "bier"@nl)
AnnotationAssertion(rdfs:label :Beer "bière"@fr)
SubClassOf(:Beer :Beverage)
Declaration(Class(:Beverage))
AnnotationAssertion(rdfs:comment :Beverage "A drink, or beverage, is a liquid which is specifically prepared for human consumption."@en)
AnnotationAssertion(rdfs:label :Beverage "beverage"@en)
AnnotationAssertion(rdfs:label :Beverage "boisson"@fr)
AnnotationAssertion(rdfs:label :Beverage "Getränk"@de)
AnnotationAssertion(rdfs:label :Beverage "drank"@nl)
AnnotationAssertion(rdfs:label :Beverage "飲料"@ja)
AnnotationAssertion(rdfs:comment :Beverage "Ένα πόσιμο υγρό ρόφημα, συνήθως με μηδενική ή ελάχιστη περιεκτικότητα αλκοόλης."@el)
AnnotationAssertion(rdfs:label :Beverage "αναψυκτικό"@el)
AnnotationAssertion(rdfs:comment :Beverage "Ein Getränk ist eine zum Trinken zubereitete Flüssigkeit. Getränke werden entweder zum Stillen von Durst und damit zur Wasseraufnahme des Körpers, als Nahrungsmittel oder auch als reine Genussmittel aufgenommen."@de)
AnnotationAssertion(rdfs:label :Beverage "bevanda"@it)
AnnotationAssertion(rdfs:label :Beverage "음료"@ko)
AnnotationAssertion(rdfs:label :Beverage "bebida"@es)
SubClassOf(:Beverage :Food)
Declaration(Class(:BiologicalDatabase))
AnnotationAssertion(rdfs:label :BiologicalDatabase "バイオデータベース"@ja)
AnnotationAssertion(rdfs:label :BiologicalDatabase "Biological database"@en)
AnnotationAssertion(rdfs:label :BiologicalDatabase "Banco de dados biológico"@pt)
AnnotationAssertion(rdfs:label :BiologicalDatabase "biologische databank"@nl)
AnnotationAssertion(rdfs:label :BiologicalDatabase "Βάση Δεδομένων Βιολογικών Χαρακτηριστικών"@el)
AnnotationAssertion(rdfs:comment :BiologicalDatabase "Διάφορες βάσεις δεδομένων οι οποίες περιέχουν πληροφορίες που ταυτοποιούν τα βασικά βιολογικά χαρακτηριστικά των οργανισμών. Οι πληροφορίες αυτές συγκροτούνται σε σύνολα βιβλιοθηκών των βασικών δομών των κυττάρων των οργανισμών, όπως οι βιλβιοθήκες νουκλεϊνικών οξέων (genomics) και πρωτεϊνών (proteomics)."@el)
AnnotationAssertion(rdfs:label :BiologicalDatabase "database biologico"@it)
AnnotationAssertion(rdfs:label :BiologicalDatabase "Base de données biologiques"@fr)
SubClassOf(:BiologicalDatabase :Database)
Declaration(Class(:Biomolecule))
AnnotationAssertion(rdfs:label :Biomolecule "βιομόριο"@el)
AnnotationAssertion(rdfs:comment :Biomolecule "Κάθε μόριο που παράγεται σε έναν ζωντανό οργανισμό. Συνήθως μεγαλομοριακές ενώσεις που χρησιμεύουν στην δομή και στο μεταβολισμό του κυττάρου. Πρωτεΐνες, νουκλεϊνικά οξέα, υδατάνθρακες και λιπίδια."@el)
AnnotationAssertion(rdfs:label :Biomolecule "biomolecola"@it)
AnnotationAssertion(rdfs:label :Biomolecule "生体物質"@ja)
AnnotationAssertion(rdfs:comment :Biomolecule "equivalent to http://ccdb.ucsd.edu/NIF/BIRNLex-OBO-UBO.owl#birnlex_22."@en)
AnnotationAssertion(rdfs:label :Biomolecule "Biomolecule"@en)
SubClassOf(:Biomolecule owl:Thing)
Declaration(Class(:Bird))
AnnotationAssertion(rdfs:label :Bird "oiseau"@fr)
AnnotationAssertion(rdfs:label :Bird "Vogel"@de)
AnnotationAssertion(rdfs:label :Bird "鳥類"@ja)
AnnotationAssertion(rdfs:label :Bird "vogel"@nl)
AnnotationAssertion(rdfs:label :Bird "bird"@en)
AnnotationAssertion(rdfs:label :Bird "πτηνό"@el)
AnnotationAssertion(rdfs:label :Bird "uccello"@it)
AnnotationAssertion(rdfs:label :Bird "새"@ko)
SubClassOf(:Bird :Animal)
Declaration(Class(:Blazon))
AnnotationAssertion(rdfs:label :Blazon "Blazon"@en)
SubClassOf(:Blazon owl:Thing)
Declaration(Class(:BloodType))
AnnotationAssertion(rdfs:label :BloodType "tipo sanguíneo"@pt)
AnnotationAssertion(rdfs:label :BloodType "bloedgroep"@nl)
AnnotationAssertion(rdfs:label :BloodType "ομάδα αίματος"@el)
AnnotationAssertion(rdfs:label :BloodType "academic journal"@en)
AnnotationAssertion(rdfs:label :BloodType "Blutgruppe"@de)
AnnotationAssertion(rdfs:label :BloodType "血液型"@ja)
SubClassOf(:BloodType owl:Thing)
Declaration(Class(:BoardGame))
AnnotationAssertion(rdfs:label :BoardGame "bordspel"@nl)
AnnotationAssertion(rdfs:label :BoardGame "ボードゲーム"@ja)
AnnotationAssertion(rdfs:label :BoardGame "board game"@en)
AnnotationAssertion(rdfs:comment :BoardGame "Un gioco da tavolo è un gioco che richiede una ben definita superficie di gioco, che viene detta di solito tabellone o plancia."@it)
AnnotationAssertion(rdfs:label :BoardGame "jeu de société"@fr)
AnnotationAssertion(rdfs:comment :BoardGame "come from http://en.wikipedia.org/wiki/Category:Board_games"@en)
AnnotationAssertion(rdfs:label :BoardGame "gioco da tavolo"@it)
SubClassOf(:BoardGame :Game)
Declaration(Class(:BodyOfWater))
AnnotationAssertion(rdfs:label :BodyOfWater "body of water"@en)
AnnotationAssertion(rdfs:label :BodyOfWater "distesa d'acqua"@it)
AnnotationAssertion(rdfs:comment :BodyOfWater "Συγκεντρωμένες, συνήθως μεγάλες ποσότητες νερού (π.χ. ωκεανοί) που βρίσκονται στη Γη ή σε οποιονδήποτε άλλο πλανήτη. Ο όρος χρησιμοποιείται και για υδάτινους σχηματισμούς όπου υπάρχει κίνηση του νερού, όπως ποταμοί, ρεύματα ή κανάλια."@el)
AnnotationAssertion(rdfs:label :BodyOfWater "水域"@ja)
AnnotationAssertion(rdfs:label :BodyOfWater "ύδατα"@el)
AnnotationAssertion(rdfs:label :BodyOfWater "étendue d'eau"@fr)
AnnotationAssertion(rdfs:label :BodyOfWater "Cuerpo de agua"@es)
EquivalentClasses(:BodyOfWater <http://schema.org/BodyOfWater>)
SubClassOf(:BodyOfWater :NaturalPlace)
Declaration(Class(:Bodybuilder))
AnnotationAssertion(rdfs:label :Bodybuilder "culturista"@it)
AnnotationAssertion(rdfs:label :Bodybuilder "bodybuilder"@en)
AnnotationAssertion(rdfs:label :Bodybuilder "bodybuilder"@nl)
SubClassOf(:Bodybuilder :Athlete)
Declaration(Class(:Bone))
AnnotationAssertion(rdfs:comment :Bone "Η βασική μονάδα του συστήματος στήριξης των σπονδυλωτών οργανισμών."@el)
AnnotationAssertion(rdfs:label :Bone "os"@fr)
AnnotationAssertion(rdfs:label :Bone "osso"@it)
AnnotationAssertion(rdfs:label :Bone "osso"@pt)
AnnotationAssertion(rdfs:label :Bone "bot"@nl)
AnnotationAssertion(rdfs:label :Bone "οστό"@el)
AnnotationAssertion(rdfs:label :Bone "骨"@ja)
AnnotationAssertion(rdfs:label :Bone "bone"@en)
AnnotationAssertion(rdfs:label :Bone "Knochen"@de)
SubClassOf(:Bone :AnatomicalStructure)
Declaration(Class(:Book))
AnnotationAssertion(rdfs:label :Book "책"@ko)
AnnotationAssertion(rdfs:label :Book "livre"@fr)
AnnotationAssertion(rdfs:label :Book "boek"@nl)
AnnotationAssertion(rdfs:label :Book "book"@en)
AnnotationAssertion(rdfs:label :Book "llibre"@ca)
AnnotationAssertion(rdfs:label :Book "książka"@pl)
AnnotationAssertion(rdfs:label :Book "libro"@it)
AnnotationAssertion(rdfs:label :Book "βιβλίο"@el)
AnnotationAssertion(rdfs:label :Book "Buch"@de)
AnnotationAssertion(rdfs:label :Book "বই"@bn)
AnnotationAssertion(rdfs:label :Book "本"@ja)
EquivalentClasses(:Book <http://purl.org/ontology/bibo/Book>)
EquivalentClasses(:Book <http://schema.org/Book>)
SubClassOf(:Book :WrittenWork)
Declaration(Class(:BowlingLeague))
AnnotationAssertion(rdfs:comment :BowlingLeague "a group of sports teams or players that compete against each other in Bowling"@en)
AnnotationAssertion(rdfs:label :BowlingLeague "ボーリングリーグ"@ja)
AnnotationAssertion(rdfs:comment :BowlingLeague "Μία διοργάνωση ομάδες ανθρώπων ή μεμονομένα άτομα συναγωνίζονται στο άθλημα του μπόουλινγκ, συνήθως με ένα έπαθλο στους πρωταθλητές."@el)
AnnotationAssertion(rdfs:label :BowlingLeague "ligue de bowling"@fr)
AnnotationAssertion(rdfs:label :BowlingLeague "πρωτάθλημα μπόουλινγκ"@el)
AnnotationAssertion(rdfs:label :BowlingLeague "bowling league"@en)
AnnotationAssertion(rdfs:label :BowlingLeague "lega di bowling"@it)
SubClassOf(:BowlingLeague :SportsLeague)
Declaration(Class(:Boxer))
AnnotationAssertion(rdfs:label :Boxer "boxer"@en)
AnnotationAssertion(rdfs:label :Boxer "bokser"@nl)
AnnotationAssertion(rdfs:label :Boxer "권투 선수"@ko)
AnnotationAssertion(rdfs:label :Boxer "boxeador"@pt)
AnnotationAssertion(rdfs:label :Boxer "pugile"@it)
AnnotationAssertion(rdfs:label :Boxer "πυγμάχος"@el)
AnnotationAssertion(rdfs:label :Boxer "boxeur"@fr)
AnnotationAssertion(rdfs:label :Boxer "ボクサー"@ja)
SubClassOf(:Boxer :Athlete)
Declaration(Class(:BoxingLeague))
AnnotationAssertion(rdfs:label :BoxingLeague "ligue de boxe"@fr)
AnnotationAssertion(rdfs:label :BoxingLeague "lega di pugilato"@it)
AnnotationAssertion(rdfs:label :BoxingLeague "ボクシングリーグ"@ja)
AnnotationAssertion(rdfs:comment :BoxingLeague "Μία διοργάνωση στην οποία μεμονωμένοι πυγμάχοι είτε ομάδες πυγμάχων συναγωνίζονται μεταξύ τους με σκοπό την νίκη."@el)
AnnotationAssertion(rdfs:label :BoxingLeague "πρωτάθλημα πυγμαχίας"@el)
AnnotationAssertion(rdfs:comment :BoxingLeague "A group of sports teams or fighters that compete against each other in Boxing"@en)
AnnotationAssertion(rdfs:label :BoxingLeague "boxing league"@en)
SubClassOf(:BoxingLeague :SportsLeague)
Declaration(Class(:Brain))
AnnotationAssertion(rdfs:label :Brain "εγκέφαλος"@el)
AnnotationAssertion(rdfs:label :Brain "cervello"@it)
AnnotationAssertion(rdfs:comment :Brain "Το βασικό όργανο του νευρικού συστήματος των ζώων, το οποίο καθορίζει ασυνείδητες και συνειδητές λειτουργίες. Ο όρος χρησιμοποιείται πλέον και για τον χαρακτηρισμό των καθοριστικότερων στοιχείων μίας μηχανής ή ενός συνόλου πραγμάτων."@el)
AnnotationAssertion(rdfs:label :Brain "cerveau"@fr)
AnnotationAssertion(rdfs:label :Brain "Gehirn"@de)
AnnotationAssertion(rdfs:label :Brain "brain"@en)
AnnotationAssertion(rdfs:label :Brain "cerebro"@es)
AnnotationAssertion(rdfs:label :Brain "脳"@ja)
SubClassOf(:Brain :AnatomicalStructure)
Declaration(Class(:Bridge))
AnnotationAssertion(rdfs:label :Bridge "γέφυρα"@el)
AnnotationAssertion(rdfs:label :Bridge "橋"@ja)
AnnotationAssertion(rdfs:label :Bridge "bridge"@en)
AnnotationAssertion(rdfs:label :Bridge "brug"@nl)
AnnotationAssertion(rdfs:label :Bridge "ponte"@it)
AnnotationAssertion(rdfs:label :Bridge "most"@sl)
AnnotationAssertion(rdfs:label :Bridge "সেতু"@bn)
AnnotationAssertion(rdfs:label :Bridge "다리"@ko)
AnnotationAssertion(rdfs:label :Bridge "pont"@fr)
AnnotationAssertion(rdfs:label :Bridge "Brücke"@de)
AnnotationAssertion(rdfs:label :Bridge "ponte"@pt)
SubClassOf(:Bridge :RouteOfTransportation)
Declaration(Class(:BritishRoyalty))
AnnotationAssertion(rdfs:label :BritishRoyalty "royauté Britannique"@fr)
AnnotationAssertion(rdfs:label :BritishRoyalty "reali britannici"@it)
AnnotationAssertion(rdfs:label :BritishRoyalty "Βρετανική μοναρχία"@el)
AnnotationAssertion(rdfs:label :BritishRoyalty "イギリス王室"@ja)
AnnotationAssertion(rdfs:label :BritishRoyalty "Britanska kraljevska oseba"@sl)
AnnotationAssertion(rdfs:label :BritishRoyalty "British royalty"@en)
SubClassOf(:BritishRoyalty :Royalty)
Declaration(Class(:BroadcastNetwork))
AnnotationAssertion(rdfs:label :BroadcastNetwork "omroeporganisatie"@nl)
AnnotationAssertion(rdfs:label :BroadcastNetwork "chaîne de télévision généraliste"@fr)
AnnotationAssertion(rdfs:label :BroadcastNetwork "Sendergruppe"@de)
AnnotationAssertion(rdfs:label :BroadcastNetwork "broadcast network"@en)
AnnotationAssertion(rdfs:comment :BroadcastNetwork "Ένα δίκτυο μετάδοσης είναι μια οργάνωση, όπως μια εταιρεία ή άλλη ένωση, που παρέχει ζωντανό ή μαγνητοσκοπημένο περιεχόμενο, όπως ταινίες, δελτία ειδήσεων, αθλητικά, και τα προγράμματα δημοσίων υποθέσεων για την εκπομπή πάνω από μια ομάδα ραδιοφωνικών ή τηλεοπτικών σταθμών"@el)
AnnotationAssertion(rdfs:label :BroadcastNetwork "ネットワーク_(放送)"@ja)
AnnotationAssertion(rdfs:label :BroadcastNetwork "δίκτυο ραδιοφωνικής μετάδοσης"@el)
AnnotationAssertion(rdfs:label :BroadcastNetwork "emittente"@it)
SubClassOf(:BroadcastNetwork :Broadcaster)
Declaration(Class(:Broadcaster))
AnnotationAssertion(rdfs:label :Broadcaster "Rundfunkveranstalter"@de)
AnnotationAssertion(rdfs:label :Broadcaster "εκφωνητής"@el)
AnnotationAssertion(rdfs:label :Broadcaster "放送事業者"@ja)
AnnotationAssertion(rdfs:label :Broadcaster "broadcaster"@en)
AnnotationAssertion(rdfs:comment :Broadcaster "Ο ραδιοτηλεοπτικός φορέας  είναι ένας οργανισμός που είναι υπεύθυνος για την παραγωγή ραδιοφωνικών ή τηλεοπτικών προγραμμάτων και / ή τη διαβίβασή τους"@el)
AnnotationAssertion(rdfs:label :Broadcaster "emittente"@it)
SubClassOf(:Broadcaster :Organisation)
Declaration(Class(:Building))
AnnotationAssertion(rdfs:label :Building "gebouw"@nl)
AnnotationAssertion(rdfs:label :Building "stavba"@sl)
AnnotationAssertion(rdfs:label :Building "建築部"@ja)
AnnotationAssertion(rdfs:label :Building "bâtiment"@fr)
AnnotationAssertion(rdfs:label :Building "Gebäude"@de)
AnnotationAssertion(rdfs:label :Building "edificio"@it)
AnnotationAssertion(rdfs:label :Building "edificio"@es)
AnnotationAssertion(rdfs:label :Building "building"@en)
AnnotationAssertion(rdfs:label :Building "κτίριο"@el)
SubClassOf(:Building :ArchitecturalStructure)
DisjointClasses(:Building :Person)
Declaration(Class(:BullFighter))
AnnotationAssertion(rdfs:label :BullFighter "stierenvechter"@nl)
AnnotationAssertion(rdfs:label :BullFighter "torero"@es)
AnnotationAssertion(rdfs:label :BullFighter "bullfighter"@en)
AnnotationAssertion(rdfs:label :BullFighter "torero"@fr)
AnnotationAssertion(rdfs:label :BullFighter "闘牛士"@ja)
AnnotationAssertion(rdfs:label :BullFighter "torero"@it)
AnnotationAssertion(rdfs:label :BullFighter "ταυρομάχος"@el)
SubClassOf(:BullFighter :Athlete)
Declaration(Class(:Camera))
AnnotationAssertion(rdfs:label :Camera "camera"@nl)
AnnotationAssertion(rdfs:comment :Camera "Una fotocamera (in lingua italiana nota tradizionalmente come macchina fotografica) è uno strumento utilizzato per la ripresa fotografica e per ottenere immagini di oggetti reali stampabili su supporti materiali cartacei o archiviabili su supporti elettronici."@it)
AnnotationAssertion(rdfs:label :Camera "camera"@en)
AnnotationAssertion(rdfs:label :Camera "fotocamera"@it)
AnnotationAssertion(rdfs:label :Camera "appareil photographique"@fr)
AnnotationAssertion(rdfs:label :Camera "カメラ"@ja)
SubClassOf(:Camera :Device)
Declaration(Class(:CanadianFootballLeague))
AnnotationAssertion(rdfs:label :CanadianFootballLeague "lega di football canadese"@it)
AnnotationAssertion(rdfs:label :CanadianFootballLeague "カナディアン・フットボール・リーグ"@ja)
AnnotationAssertion(rdfs:label :CanadianFootballLeague "canadian football league"@fr)
AnnotationAssertion(rdfs:comment :CanadianFootballLeague "ένα σύνολο αθλητικών ομάδων που ανταγωνίζονται μεταξύ τους στην Καναδική ένωση ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :CanadianFootballLeague "καναδική ένωση ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :CanadianFootballLeague "canadian football league"@en)
AnnotationAssertion(rdfs:comment :CanadianFootballLeague "A group of sports teams that compete against each other in canadian football league."@en)
SubClassOf(:CanadianFootballLeague :SportsLeague)
Declaration(Class(:CanadianFootballPlayer))
AnnotationAssertion(rdfs:label :CanadianFootballPlayer "καναδός παίκτης ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :CanadianFootballPlayer "jogador de futebol canadense"@pt)
AnnotationAssertion(rdfs:label :CanadianFootballPlayer "giocatore di football canadese"@it)
AnnotationAssertion(rdfs:label :CanadianFootballPlayer "canadian football player"@en)
AnnotationAssertion(rdfs:label :CanadianFootballPlayer "joueur de football canadien"@fr)
SubClassOf(:CanadianFootballPlayer :GridironFootballPlayer)
Declaration(Class(:CanadianFootballTeam))
AnnotationAssertion(rdfs:label :CanadianFootballTeam "canadian football team"@en)
AnnotationAssertion(rdfs:label :CanadianFootballTeam "καναδέζικη ομάδα ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :CanadianFootballTeam "squadra di football canadese"@it)
AnnotationAssertion(rdfs:label :CanadianFootballTeam "équipe canadienne de football américain"@fr)
SubClassOf(:CanadianFootballTeam :SportsTeam)
Declaration(Class(:Canal))
AnnotationAssertion(rdfs:label :Canal "kanal"@de)
AnnotationAssertion(rdfs:label :Canal "canal"@en)
AnnotationAssertion(rdfs:comment :Canal "a man-made channel for water"@en)
AnnotationAssertion(rdfs:label :Canal "canal"@fr)
AnnotationAssertion(rdfs:label :Canal "運河"@ja)
AnnotationAssertion(rdfs:label :Canal "canale"@it)
AnnotationAssertion(rdfs:comment :Canal "ένα κανάλι για νερό φτιαγμένο από άνθρωπο"@el)
AnnotationAssertion(rdfs:label :Canal "kanaal"@nl)
AnnotationAssertion(rdfs:label :Canal "κανάλι"@el)
EquivalentClasses(:Canal <http://schema.org/Canal>)
SubClassOf(:Canal :Stream)
Declaration(Class(:Cardinal))
AnnotationAssertion(rdfs:label :Cardinal "kardinaal"@nl)
AnnotationAssertion(rdfs:label :Cardinal "cardinale"@it)
AnnotationAssertion(rdfs:label :Cardinal "cardinal"@fr)
AnnotationAssertion(rdfs:label :Cardinal "cardeal"@pt)
AnnotationAssertion(rdfs:label :Cardinal "cardinal"@en)
AnnotationAssertion(rdfs:label :Cardinal "καρδινάλιος"@el)
SubClassOf(:Cardinal :Cleric)
Declaration(Class(:CareerStation))
AnnotationAssertion(rdfs:label :CareerStation "career station"@en)
AnnotationAssertion(rdfs:comment :CareerStation "this class marks a career step in the life of a person, e.g. a soccer player, holding information on the time span, matches and goals he or she achieved at a certain club"@en)
AnnotationAssertion(rdfs:label :CareerStation "Karrierestation"@de)
SubClassOf(:CareerStation owl:Thing)
Declaration(Class(:Cartoon))
AnnotationAssertion(rdfs:label :Cartoon "dessin animé"@fr)
AnnotationAssertion(rdfs:label :Cartoon "カートゥーン"@ja)
AnnotationAssertion(rdfs:label :Cartoon "cartoon"@en)
AnnotationAssertion(rdfs:label :Cartoon "cartone animato"@it)
AnnotationAssertion(rdfs:label :Cartoon "σατυρικό σκίτσο"@el)
SubClassOf(:Cartoon :Work)
Declaration(Class(:Case))
AnnotationAssertion(rdfs:label :Case "Sache"@de)
AnnotationAssertion(rdfs:label :Case "zaak"@nl)
AnnotationAssertion(rdfs:label :Case "dossier"@fr)
AnnotationAssertion(rdfs:comment :Case "A case is the total of work done to prepare for an administrative or business decision. As a rule, a case is reflected in a set of documents."@en)
AnnotationAssertion(rdfs:comment :Case "Een zaak is het geheel aan werk gedaan om tot een bestuurlijke of zakelijke beslissing te komen. Een zaak slaat doorgaans neer in een verzameling documenten."@de)
AnnotationAssertion(rdfs:label :Case "case"@en)
SubClassOf(:Case :UnitOfWork)
Declaration(Class(:Casino))
AnnotationAssertion(rdfs:comment :Casino "In modern English, a casino is a facility which houses and accommodates certain types of gambling activities."@en)
AnnotationAssertion(rdfs:label :Casino "casinò"@it)
AnnotationAssertion(rdfs:label :Casino "casino"@fr)
AnnotationAssertion(rdfs:comment :Casino "Un casino est un lieu proposant des jeux d'argent et de hasard ou jeux de casino."@fr)
AnnotationAssertion(rdfs:label :Casino "casino"@en)
SubClassOf(:Casino :Building)
Declaration(Class(:Castle))
AnnotationAssertion(rdfs:comment :Castle "Castles often are, but need not be a military structure. They can serve for status, pleasure and hunt as well."@en)
AnnotationAssertion(rdfs:label :Castle "burg"@de)
AnnotationAssertion(rdfs:label :Castle "castello"@it)
AnnotationAssertion(rdfs:label :Castle "kasteel"@nl)
AnnotationAssertion(rdfs:label :Castle "château"@fr)
AnnotationAssertion(rdfs:label :Castle "κάστρο"@el)
AnnotationAssertion(rdfs:label :Castle "castle"@en)
SubClassOf(:Castle :Building)
Declaration(Class(:Cave))
AnnotationAssertion(rdfs:label :Cave "grotta"@it)
AnnotationAssertion(rdfs:label :Cave "洞窟"@ja)
AnnotationAssertion(rdfs:label :Cave "σπηλιά"@el)
AnnotationAssertion(rdfs:label :Cave "grotte"@fr)
AnnotationAssertion(rdfs:label :Cave "Höhle"@de)
AnnotationAssertion(rdfs:label :Cave "grot"@nl)
AnnotationAssertion(rdfs:label :Cave "cave"@en)
SubClassOf(:Cave :NaturalPlace)
Declaration(Class(:Celebrity))
AnnotationAssertion(rdfs:label :Celebrity "celebrità"@it)
AnnotationAssertion(rdfs:label :Celebrity "célébrité"@fr)
AnnotationAssertion(rdfs:label :Celebrity "celebrity"@en)
AnnotationAssertion(rdfs:label :Celebrity "beroemdheid"@nl)
AnnotationAssertion(rdfs:label :Celebrity "διασημότητα"@el)
SubClassOf(:Celebrity :Person)
Declaration(Class(:CelestialBody))
AnnotationAssertion(rdfs:label :CelestialBody "cuerpo celeste"@es)
AnnotationAssertion(rdfs:label :CelestialBody "celestial body"@en)
AnnotationAssertion(rdfs:label :CelestialBody "corpo celeste"@it)
AnnotationAssertion(rdfs:label :CelestialBody "corps celeste"@fr)
AnnotationAssertion(rdfs:label :CelestialBody "hemellichaam"@nl)
AnnotationAssertion(rdfs:label :CelestialBody "天体"@ja)
AnnotationAssertion(rdfs:label :CelestialBody "ουράνιο σώμα"@el)
SubClassOf(:CelestialBody owl:Thing)
Declaration(Class(:Chancellor))
AnnotationAssertion(rdfs:label :Chancellor "chancellor"@en)
AnnotationAssertion(rdfs:label :Chancellor "cancelliere"@it)
AnnotationAssertion(rdfs:label :Chancellor "chancelier"@fr)
AnnotationAssertion(rdfs:label :Chancellor "Kanzler"@de)
AnnotationAssertion(rdfs:label :Chancellor "chanceler"@pt)
AnnotationAssertion(rdfs:label :Chancellor "kanselier"@nl)
AnnotationAssertion(rdfs:label :Chancellor "καγκελάριος"@el)
SubClassOf(:Chancellor :Politician)
Declaration(Class(:Cheese))
AnnotationAssertion(rdfs:label :Cheese "fromage"@fr)
AnnotationAssertion(rdfs:label :Cheese "formaggio"@it)
AnnotationAssertion(rdfs:label :Cheese "cheese"@en)
AnnotationAssertion(rdfs:label :Cheese "Käse"@de)
AnnotationAssertion(rdfs:label :Cheese "kaas"@nl)
AnnotationAssertion(rdfs:comment :Cheese "A milk product prepared for human consumption"@en)
SubClassOf(:Cheese :Food)
Declaration(Class(:Chef))
AnnotationAssertion(rdfs:label :Chef "chef"@en)
AnnotationAssertion(rdfs:label :Chef "αρχιμάγειρος"@el)
AnnotationAssertion(rdfs:label :Chef "Koch"@de)
AnnotationAssertion(rdfs:label :Chef "kok"@nl)
AnnotationAssertion(rdfs:label :Chef "chef"@it)
AnnotationAssertion(rdfs:comment :Chef "a person who cooks professionally for other people"@en)
AnnotationAssertion(rdfs:label :Chef "chef"@fr)
SubClassOf(:Chef :Person)
Declaration(Class(:ChemicalCompound))
AnnotationAssertion(rdfs:label :ChemicalCompound "χημική ένωση"@el)
AnnotationAssertion(rdfs:label :ChemicalCompound "composto químico"@pt)
AnnotationAssertion(rdfs:label :ChemicalCompound "produit chimique"@fr)
AnnotationAssertion(rdfs:label :ChemicalCompound "composto chimico"@it)
AnnotationAssertion(rdfs:label :ChemicalCompound "化合物"@ja)
AnnotationAssertion(rdfs:label :ChemicalCompound "chemical compound"@en)
SubClassOf(:ChemicalCompound :ChemicalSubstance)
Declaration(Class(:ChemicalElement))
AnnotationAssertion(rdfs:label :ChemicalElement "élément chimique"@fr)
AnnotationAssertion(rdfs:label :ChemicalElement "chemisch element"@nl)
AnnotationAssertion(rdfs:label :ChemicalElement "elemento chimico"@it)
AnnotationAssertion(rdfs:label :ChemicalElement "χημικό στοιχείο"@el)
AnnotationAssertion(rdfs:label :ChemicalElement "元素"@ja)
AnnotationAssertion(rdfs:label :ChemicalElement "chemical element"@en)
SubClassOf(:ChemicalElement :ChemicalSubstance)
Declaration(Class(:ChemicalSubstance))
AnnotationAssertion(rdfs:label :ChemicalSubstance "substance chimique"@fr)
AnnotationAssertion(rdfs:label :ChemicalSubstance "sostanza chimica"@it)
AnnotationAssertion(rdfs:label :ChemicalSubstance "chemical substance"@en)
AnnotationAssertion(rdfs:label :ChemicalSubstance "化学物質"@ja)
AnnotationAssertion(rdfs:label :ChemicalSubstance "χημική ουσία"@el)
AnnotationAssertion(rdfs:label :ChemicalSubstance "substância química"@pt)
SubClassOf(:ChemicalSubstance owl:Thing)
Declaration(Class(:ChessPlayer))
AnnotationAssertion(rdfs:label :ChessPlayer "giocatore di scacchi"@it)
AnnotationAssertion(rdfs:label :ChessPlayer "szachista"@pl)
AnnotationAssertion(rdfs:label :ChessPlayer "chess player"@en)
AnnotationAssertion(rdfs:label :ChessPlayer "Schachspieler"@de)
AnnotationAssertion(rdfs:label :ChessPlayer "παίκτης σκάκι"@el)
AnnotationAssertion(rdfs:label :ChessPlayer "schaker"@nl)
SubClassOf(:ChessPlayer :Athlete)
Declaration(Class(:ChristianBishop))
AnnotationAssertion(rdfs:label :ChristianBishop "Πληροφορίες Επισκόπου"@el)
AnnotationAssertion(rdfs:label :ChristianBishop "Christelijk bisschop"@nl)
AnnotationAssertion(rdfs:label :ChristianBishop "biskup chrześcijański"@pl)
AnnotationAssertion(rdfs:label :ChristianBishop "évêque chrétien"@fr)
AnnotationAssertion(rdfs:label :ChristianBishop "Christian Bishop"@en)
AnnotationAssertion(rdfs:label :ChristianBishop "vescovo cristiano"@it)
SubClassOf(:ChristianBishop :Cleric)
Declaration(Class(:ChristianDoctrine))
AnnotationAssertion(rdfs:label :ChristianDoctrine "Christelijke leer"@nl)
AnnotationAssertion(rdfs:label :ChristianDoctrine "Christian Doctrine"@en)
AnnotationAssertion(rdfs:label :ChristianDoctrine "dottrina cristiana"@it)
AnnotationAssertion(rdfs:label :ChristianDoctrine "Χριστιανικό Δόγμα"@el)
SubClassOf(:ChristianDoctrine :TopicalConcept)
Declaration(Class(:ChristianPatriarch))
AnnotationAssertion(rdfs:label :ChristianPatriarch "patriarcha chrześcijański"@pl)
AnnotationAssertion(rdfs:label :ChristianPatriarch "patriarca cristiano"@it)
AnnotationAssertion(rdfs:label :ChristianPatriarch "christelijk patriarch"@nl)
AnnotationAssertion(rdfs:label :ChristianPatriarch "Christian Patriarch"@en)
AnnotationAssertion(rdfs:label :ChristianPatriarch "χριστιανός πατριάρχης"@el)
SubClassOf(:ChristianPatriarch :Cleric)
Declaration(Class(:Church))
AnnotationAssertion(rdfs:label :Church "church"@en)
AnnotationAssertion(rdfs:label :Church "εκκλησία"@el)
AnnotationAssertion(rdfs:label :Church "église"@fr)
AnnotationAssertion(rdfs:label :Church "iglesia"@es)
AnnotationAssertion(rdfs:label :Church "教会"@ja)
AnnotationAssertion(rdfs:label :Church "kerk"@nl)
AnnotationAssertion(rdfs:label :Church "chiesa"@it)
AnnotationAssertion(rdfs:label :Church "igreja"@pt)
AnnotationAssertion(rdfs:label :Church "Kirche"@de)
SubClassOf(:Church :ReligiousBuilding)
Declaration(Class(:City))
AnnotationAssertion(rdfs:label :City "도시"@ko)
AnnotationAssertion(rdfs:label :City "πόλη"@el)
AnnotationAssertion(rdfs:label :City "città"@it)
AnnotationAssertion(rdfs:label :City "市"@ja)
AnnotationAssertion(rdfs:label :City "city"@en)
AnnotationAssertion(rdfs:label :City "cité"@fr)
AnnotationAssertion(rdfs:label :City "Stadt"@de)
AnnotationAssertion(rdfs:label :City "stad"@nl)
AnnotationAssertion(rdfs:label :City "cidade"@pt)
AnnotationAssertion(rdfs:comment :City "a relatively large and permanent settlement, particularly a large urban settlement"@en)
EquivalentClasses(:City <http://schema.org/City>)
SubClassOf(:City :Settlement)
Declaration(Class(:CityDistrict))
AnnotationAssertion(rdfs:label :CityDistrict "stadswijk"@nl)
AnnotationAssertion(rdfs:comment :CityDistrict "District, borough, area or neighbourhood in a city or town"@en)
AnnotationAssertion(rdfs:label :CityDistrict "quartier"@fr)
AnnotationAssertion(rdfs:label :CityDistrict "Stadtviertel"@de)
AnnotationAssertion(rdfs:label :CityDistrict "city district"@en)
SubClassOf(:CityDistrict :Settlement)
Declaration(Class(:Cleric))
AnnotationAssertion(rdfs:label :Cleric "ecclesiastico"@it)
AnnotationAssertion(rdfs:label :Cleric "ecclésiastique"@fr)
AnnotationAssertion(rdfs:label :Cleric "聖職者"@ja)
AnnotationAssertion(rdfs:label :Cleric "Κλήρος"@el)
AnnotationAssertion(rdfs:label :Cleric "geestelijke"@nl)
AnnotationAssertion(rdfs:label :Cleric "geistlicher"@de)
AnnotationAssertion(rdfs:label :Cleric "cleric"@en)
SubClassOf(:Cleric :Person)
Declaration(Class(:ClericalAdministrativeRegion))
AnnotationAssertion(rdfs:label :ClericalAdministrativeRegion "région administrative dans une église"@fr)
AnnotationAssertion(rdfs:label :ClericalAdministrativeRegion "kerkelijk bestuurlijk gebied"@nl)
AnnotationAssertion(rdfs:comment :ClericalAdministrativeRegion "An administrative body governing some territorial unity, in this case a clerical administrative body"@en)
AnnotationAssertion(rdfs:label :ClericalAdministrativeRegion "clerical administrative region"@en)
SubClassOf(:ClericalAdministrativeRegion :AdministrativeRegion)
Declaration(Class(:ClericalOrder))
AnnotationAssertion(rdfs:label :ClericalOrder "ordre religieux"@fr)
AnnotationAssertion(rdfs:comment :ClericalOrder "Een kloosterorde is een orde van religieuzen, mannen of vrouwen, die zich verenigd hebben omtrent een gemeenschappelijke geloofsopvatting en kloosterregel waaraan zij gebonden zijn, en op een permanente wijze samenleven binnen één en dezelfde plaatselijke gemeenschap, een klooster of een tempel. Meerdere kloosters van gelijkgezinde religieuzen vormen samen een kloosterorde."@nl)
AnnotationAssertion(rdfs:label :ClericalOrder "ordine clericale"@it)
AnnotationAssertion(rdfs:label :ClericalOrder "clerical order"@en)
AnnotationAssertion(rdfs:label :ClericalOrder "kloosterorde"@nl)
AnnotationAssertion(rdfs:label :ClericalOrder "κληρική τάξη"@el)
SubClassOf(:ClericalOrder :Organisation)
Declaration(Class(:ClubMoss))
AnnotationAssertion(rdfs:label :ClubMoss "lycopodiopsida"@fr)
AnnotationAssertion(rdfs:label :ClubMoss "Μούσκλια"@el)
AnnotationAssertion(rdfs:label :ClubMoss "club moss"@en)
AnnotationAssertion(rdfs:label :ClubMoss "ヒカゲノカズラ綱"@ja)
SubClassOf(:ClubMoss :Plant)
Declaration(Class(:CollectionOfValuables))
AnnotationAssertion(rdfs:label :CollectionOfValuables "Kunst- und Wertsachenversammlung"@de)
AnnotationAssertion(rdfs:comment :CollectionOfValuables "Collection of valuables is a collection considered to be a work in itself)"@en)
AnnotationAssertion(rdfs:label :CollectionOfValuables "verzameling van kostbaarheden"@nl)
AnnotationAssertion(rdfs:label :CollectionOfValuables "collection d'objets"@fr)
AnnotationAssertion(rdfs:comment :CollectionOfValuables "Een verzameling van kostbaarheden, die als een werk beschouwd wordt )."@nl)
AnnotationAssertion(rdfs:label :CollectionOfValuables "collection of valuables"@en)
SubClassOf(:CollectionOfValuables :Work)
Declaration(Class(:College))
AnnotationAssertion(rdfs:label :College "単科大学"@ja)
AnnotationAssertion(rdfs:label :College "κολέγιο"@el)
AnnotationAssertion(rdfs:label :College "université"@fr)
AnnotationAssertion(rdfs:label :College "college"@en)
AnnotationAssertion(rdfs:label :College "faculdade"@pt)
EquivalentClasses(:College <http://schema.org/CollegeOrUniversity>)
SubClassOf(:College :EducationalInstitution)
Declaration(Class(:CollegeCoach))
AnnotationAssertion(rdfs:label :CollegeCoach "college coach"@en)
AnnotationAssertion(rdfs:label :CollegeCoach "προπονητής κολεγίου"@el)
AnnotationAssertion(rdfs:label :CollegeCoach "entraîneur universitaire"@fr)
SubClassOf(:CollegeCoach :Person)
Declaration(Class(:Colour))
AnnotationAssertion(rdfs:label :Colour "χρώμα"@el)
AnnotationAssertion(rdfs:label :Colour "kleur"@nl)
AnnotationAssertion(rdfs:comment :Colour "Color or colour is the visual perceptual property corresponding in humans to the categories called red, yellow, blue and others. Color derives from the spectrum of light (distribution of light energy versus wavelength) interacting in the eye with the spectral sensitivities of the light receptors."@en)
AnnotationAssertion(rdfs:label :Colour "색"@ko)
AnnotationAssertion(rdfs:label :Colour "couleur"@fr)
AnnotationAssertion(rdfs:label :Colour "Farbe"@de)
AnnotationAssertion(rdfs:label :Colour "色"@ja)
AnnotationAssertion(rdfs:label :Colour "colour"@en)
SubClassOf(:Colour owl:Thing)
Declaration(Class(:Comedian))
AnnotationAssertion(rdfs:label :Comedian "comédien"@fr)
AnnotationAssertion(rdfs:label :Comedian "comediante"@pt)
AnnotationAssertion(rdfs:label :Comedian "κωμικός"@el)
AnnotationAssertion(rdfs:label :Comedian "comedian"@en)
AnnotationAssertion(rdfs:label :Comedian "お笑い芸人"@ja)
SubClassOf(:Comedian :Artist)
Declaration(Class(:ComedyGroup))
AnnotationAssertion(rdfs:label :ComedyGroup "Comedy Group"@en)
SubClassOf(:ComedyGroup :Organisation)
Declaration(Class(:Comic))
AnnotationAssertion(rdfs:label :Comic "comic"@en)
SubClassOf(:Comic :WrittenWork)
Declaration(Class(:Comics))
AnnotationAssertion(rdfs:label :Comics "bande dessinée"@fr)
AnnotationAssertion(rdfs:label :Comics "κινούμενα σχέδια"@el)
AnnotationAssertion(rdfs:label :Comics "comics"@en)
AnnotationAssertion(rdfs:label :Comics "漫画"@ja)
AnnotationAssertion(rdfs:label :Comics "fumetto"@it)
AnnotationAssertion(rdfs:label :Comics "stripverhaal"@nl)
AnnotationAssertion(rdfs:label :Comics "historieta"@es)
SubClassOf(:Comics :WrittenWork)
Declaration(Class(:ComicsCharacter))
AnnotationAssertion(rdfs:label :ComicsCharacter "personagem de quadrinhos"@pt)
AnnotationAssertion(rdfs:label :ComicsCharacter "χαρακτήρας κινούμενων σχεδίων"@el)
AnnotationAssertion(rdfs:label :ComicsCharacter "personnage de bandes dessinées"@fr)
AnnotationAssertion(rdfs:label :ComicsCharacter "만화애니 등장인물"@ko)
AnnotationAssertion(rdfs:label :ComicsCharacter "コミックスのキャラクター"@ja)
AnnotationAssertion(rdfs:label :ComicsCharacter "comics character"@en)
SubClassOf(:ComicsCharacter :FictionalCharacter)
Declaration(Class(:ComicsCreator))
AnnotationAssertion(rdfs:label :ComicsCreator "만화가"@ko)
AnnotationAssertion(rdfs:label :ComicsCreator "漫画家"@ja)
AnnotationAssertion(rdfs:label :ComicsCreator "créateur de bandes dessinées"@fr)
AnnotationAssertion(rdfs:label :ComicsCreator "δημιουργός κόμιξ"@el)
AnnotationAssertion(rdfs:label :ComicsCreator "comics creator"@en)
SubClassOf(:ComicsCreator :Artist)
Declaration(Class(:Community))
AnnotationAssertion(rdfs:label :Community "Community"@en)
SubClassOf(:Community :Place)
Declaration(Class(:Company))
AnnotationAssertion(rdfs:label :Company "Unternehmen"@de)
AnnotationAssertion(rdfs:label :Company "empresa"@pt)
AnnotationAssertion(rdfs:label :Company "entreprise"@fr)
AnnotationAssertion(rdfs:label :Company "회사"@ko)
AnnotationAssertion(rdfs:label :Company "company"@en)
AnnotationAssertion(rdfs:label :Company "bedrijf"@nl)
AnnotationAssertion(rdfs:label :Company "εταιρία"@el)
AnnotationAssertion(rdfs:label :Company "会社"@ja)
SubClassOf(:Company :Organisation)
Declaration(Class(:Congressman))
AnnotationAssertion(rdfs:label :Congressman "Abgeordneter"@de)
AnnotationAssertion(rdfs:label :Congressman "congressman"@en)
AnnotationAssertion(rdfs:label :Congressman "membre du Congrès"@fr)
AnnotationAssertion(rdfs:label :Congressman "βουλευτής"@el)
SubClassOf(:Congressman :Politician)
Declaration(Class(:Conifer))
AnnotationAssertion(rdfs:label :Conifer "conifere"@fr)
AnnotationAssertion(rdfs:comment :Conifer "Le conifere sono piante vascolari, con semi contenuti in un cono. Sono piante legnose, perlopiù sono alberi e solo poche sono arbusti."@it)
AnnotationAssertion(rdfs:label :Conifer "球果植物門"@ja)
AnnotationAssertion(rdfs:label :Conifer "κωνοφόρο"@el)
AnnotationAssertion(rdfs:label :Conifer "conifeer"@nl)
AnnotationAssertion(rdfs:label :Conifer "conifer"@en)
SubClassOf(:Conifer :Plant)
Declaration(Class(:Constellation))
AnnotationAssertion(rdfs:label :Constellation "αστερισμός"@el)
AnnotationAssertion(rdfs:label :Constellation "samenstel"@nl)
AnnotationAssertion(rdfs:label :Constellation "costellazione"@it)
AnnotationAssertion(rdfs:label :Constellation "constellation"@en)
AnnotationAssertion(rdfs:comment :Constellation "Una costellazione è ognuna delle 88 parti in cui la sfera celeste è convenzionalmente suddivisa allo scopo di mappare le stelle."@it)
AnnotationAssertion(rdfs:label :Constellation "takımyıldızı"@tr)
SubClassOf(:Constellation :CelestialBody)
Declaration(Class(:Continent))
AnnotationAssertion(rdfs:comment :Continent "Un continente è una grande area di terra emersa della crosta terrestre, è anzi la più vasta delle ripartizioni con le quali si suddividono le terre emerse."@it)
AnnotationAssertion(rdfs:label :Continent "Kontinent"@de)
AnnotationAssertion(rdfs:label :Continent "continent"@en)
AnnotationAssertion(rdfs:label :Continent "大陸"@ja)
AnnotationAssertion(rdfs:label :Continent "ήπειρος"@el)
AnnotationAssertion(rdfs:label :Continent "continente"@it)
AnnotationAssertion(rdfs:label :Continent "continent"@fr)
AnnotationAssertion(rdfs:label :Continent "대륙"@ko)
EquivalentClasses(:Continent <http://schema.org/Continent>)
SubClassOf(:Continent :PopulatedPlace)
Declaration(Class(:ControlledDesignationOfOriginWine))
AnnotationAssertion(rdfs:comment :ControlledDesignationOfOriginWine "A quality assurance label for wines"@en)
AnnotationAssertion(rdfs:label :ControlledDesignationOfOriginWine "Controlled designation of origin wine"@en)
AnnotationAssertion(rdfs:label :ControlledDesignationOfOriginWine "Ελεγμένη ονομασία προέλευσης κρασιού"@el)
AnnotationAssertion(rdfs:label :ControlledDesignationOfOriginWine "vino D.O.C."@it)
AnnotationAssertion(rdfs:comment :ControlledDesignationOfOriginWine "Μια ετικέτα διασφάλισης της ποιότητας των οίνων"@el)
AnnotationAssertion(rdfs:label :ControlledDesignationOfOriginWine "vin A.O.C."@fr)
SubClassOf(:ControlledDesignationOfOriginWine :Wine)
Declaration(Class(:Convention))
AnnotationAssertion(rdfs:label :Convention "convention"@en)
AnnotationAssertion(rdfs:label :Convention "congrès"@fr)
AnnotationAssertion(rdfs:label :Convention "συνέδριο"@el)
AnnotationAssertion(rdfs:label :Convention "컨벤션"@ko)
SubClassOf(:Convention :Event)
Declaration(Class(:Country))
AnnotationAssertion(rdfs:label :Country "나라"@ko)
AnnotationAssertion(rdfs:label :Country "država"@sl)
AnnotationAssertion(rdfs:label :Country "国"@ja)
AnnotationAssertion(rdfs:label :Country "χώρα"@el)
AnnotationAssertion(rdfs:label :Country "Staat"@de)
AnnotationAssertion(rdfs:label :Country "pays"@fr)
AnnotationAssertion(rdfs:label :Country "Государство"@ru)
AnnotationAssertion(rdfs:label :Country "land"@nl)
AnnotationAssertion(rdfs:label :Country "country"@en)
EquivalentClasses(:Country <http://schema.org/Country>)
SubClassOf(:Country :PopulatedPlace)
Declaration(Class(:CricketLeague))
AnnotationAssertion(rdfs:comment :CricketLeague "a group of sports teams that compete against each other in Cricket"@en)
AnnotationAssertion(rdfs:label :CricketLeague "cricket league"@en)
AnnotationAssertion(rdfs:label :CricketLeague "κύπελλο κρικετ"@el)
AnnotationAssertion(rdfs:label :CricketLeague "ligue de cricket"@fr)
SubClassOf(:CricketLeague :SportsLeague)
Declaration(Class(:Cricketer))
AnnotationAssertion(rdfs:label :Cricketer "joueur de cricket"@fr)
AnnotationAssertion(rdfs:label :Cricketer "cricketer"@en)
AnnotationAssertion(rdfs:label :Cricketer "cricketspeler"@nl)
AnnotationAssertion(rdfs:label :Cricketer "παίκτης του κρίκετ"@el)
SubClassOf(:Cricketer :Athlete)
Declaration(Class(:Criminal))
AnnotationAssertion(rdfs:label :Criminal "범죄인"@ko)
AnnotationAssertion(rdfs:label :Criminal "εγκληματίας"@el)
AnnotationAssertion(rdfs:label :Criminal "delinquente"@it)
AnnotationAssertion(rdfs:label :Criminal "criminel"@fr)
AnnotationAssertion(rdfs:label :Criminal "criminal"@en)
AnnotationAssertion(rdfs:label :Criminal "crimineel"@nl)
AnnotationAssertion(rdfs:label :Criminal "criminoso"@pt)
AnnotationAssertion(rdfs:label :Criminal "Verbrecher"@de)
SubClassOf(:Criminal :Person)
Declaration(Class(:Crustacean))
AnnotationAssertion(rdfs:label :Crustacean "甲殻類"@ja)
AnnotationAssertion(rdfs:label :Crustacean "crustacean"@en)
AnnotationAssertion(rdfs:label :Crustacean "αστρακόδερμο"@el)
AnnotationAssertion(rdfs:label :Crustacean "crustacés"@fr)
AnnotationAssertion(rdfs:label :Crustacean "schaaldier"@nl)
SubClassOf(:Crustacean :Animal)
Declaration(Class(:CultivatedVariety))
AnnotationAssertion(rdfs:label :CultivatedVariety "καλλιεργούμενη ποικιλία"@el)
AnnotationAssertion(rdfs:label :CultivatedVariety "cultivar (cultivated variety)"@en)
AnnotationAssertion(rdfs:comment :CultivatedVariety "A cultivar is a plant or grouping of plants selected for desirable characteristics that can be maintained by propagation. A plant whose origin or selection is primarily due to intentional human activity."@en)
SubClassOf(:CultivatedVariety :Plant)
Declaration(Class(:Curler))
AnnotationAssertion(rdfs:label :Curler "curlingspeler"@nl)
AnnotationAssertion(rdfs:label :Curler "μπικουτί"@el)
AnnotationAssertion(rdfs:label :Curler "curler"@en)
SubClassOf(:Curler :Athlete)
Declaration(Class(:CurlingLeague))
AnnotationAssertion(rdfs:label :CurlingLeague "ligue de curling"@fr)
AnnotationAssertion(rdfs:comment :CurlingLeague "a group of sports teams that compete against each other in Curling"@en)
AnnotationAssertion(rdfs:label :CurlingLeague "curling league"@en)
AnnotationAssertion(rdfs:label :CurlingLeague "πρωτάθλημα curling"@el)
SubClassOf(:CurlingLeague :SportsLeague)
Declaration(Class(:Currency))
AnnotationAssertion(rdfs:label :Currency "devise"@fr)
AnnotationAssertion(rdfs:label :Currency "muntsoort"@nl)
AnnotationAssertion(rdfs:label :Currency "통화"@ko)
AnnotationAssertion(rdfs:label :Currency "Währung"@de)
AnnotationAssertion(rdfs:label :Currency "currency"@en)
AnnotationAssertion(rdfs:label :Currency "νόμισμα"@el)
SubClassOf(:Currency owl:Thing)
Declaration(Class(:Cycad))
AnnotationAssertion(rdfs:label :Cycad "ソテツ門"@pt)
AnnotationAssertion(rdfs:label :Cycad "φοινικόθαμνος"@el)
AnnotationAssertion(rdfs:label :Cycad "cycadophytes"@fr)
AnnotationAssertion(rdfs:label :Cycad "cycad"@en)
SubClassOf(:Cycad :Plant)
Declaration(Class(:CyclingCompetition))
AnnotationAssertion(rdfs:label :CyclingCompetition "διαγωνισμός ποδηλασίας"@el)
AnnotationAssertion(rdfs:label :CyclingCompetition "gara ciclistica"@it)
AnnotationAssertion(rdfs:label :CyclingCompetition "cycling competition"@en)
AnnotationAssertion(rdfs:label :CyclingCompetition "wielercompetitie"@nl)
SubClassOf(:CyclingCompetition :SportsEvent)
Declaration(Class(:CyclingLeague))
AnnotationAssertion(rdfs:comment :CyclingLeague "a group of sports teams that compete against each other in Cycling"@en)
AnnotationAssertion(rdfs:label :CyclingLeague "cycling league"@en)
AnnotationAssertion(rdfs:label :CyclingLeague "ligue de cyclisme"@fr)
AnnotationAssertion(rdfs:label :CyclingLeague "Ομοσπονδία Ποδηλασίας"@el)
SubClassOf(:CyclingLeague :SportsLeague)
Declaration(Class(:CyclingTeam))
AnnotationAssertion(rdfs:label :CyclingTeam "squadra di ciclismo"@it)
AnnotationAssertion(rdfs:label :CyclingTeam "cycling team"@en)
SubClassOf(:CyclingTeam :SportsTeam)
Declaration(Class(:Cyclist))
AnnotationAssertion(rdfs:label :Cyclist "ποδηλάτης"@el)
AnnotationAssertion(rdfs:label :Cyclist "cyclist"@en)
AnnotationAssertion(rdfs:label :Cyclist "cycliste"@fr)
AnnotationAssertion(rdfs:label :Cyclist "wielrenner"@nl)
AnnotationAssertion(rdfs:label :Cyclist "ciclista"@pt)
AnnotationAssertion(rdfs:label :Cyclist "ciclista"@es)
SubClassOf(:Cyclist :Athlete)
Declaration(Class(:DartsPlayer))
AnnotationAssertion(rdfs:label :DartsPlayer "παίκτης βελάκιων"@el)
AnnotationAssertion(rdfs:label :DartsPlayer "darts player"@en)
AnnotationAssertion(rdfs:label :DartsPlayer "darter"@nl)
SubClassOf(:DartsPlayer :Athlete)
Declaration(Class(:Database))
AnnotationAssertion(rdfs:label :Database "Banco de dados"@pt)
AnnotationAssertion(rdfs:label :Database "Datenbank"@de)
AnnotationAssertion(rdfs:label :Database "database"@nl)
AnnotationAssertion(rdfs:label :Database "Database"@en)
AnnotationAssertion(rdfs:label :Database "Base de données"@fr)
AnnotationAssertion(rdfs:label :Database "βάση δεδομένων"@el)
AnnotationAssertion(rdfs:label :Database "データベース"@ja)
SubClassOf(:Database owl:Thing)
Declaration(Class(:Deanery))
AnnotationAssertion(rdfs:label :Deanery "deanery"@en)
AnnotationAssertion(rdfs:comment :Deanery "The intermediate level of a clerical administrative body between parish and diocese"@en)
AnnotationAssertion(rdfs:label :Deanery "proosdij"@nl)
SubClassOf(:Deanery :ClericalAdministrativeRegion)
Declaration(Class(:Decoration))
AnnotationAssertion(rdfs:label :Decoration "onderscheiding"@nl)
AnnotationAssertion(rdfs:label :Decoration "condecoración"@es)
AnnotationAssertion(rdfs:comment :Decoration "An object, such as a medal or an order, that is awarded to honor the recipient ostentatiously."@en)
AnnotationAssertion(rdfs:label :Decoration "decoration"@en)
AnnotationAssertion(rdfs:label :Decoration "décoration"@fr)
AnnotationAssertion(rdfs:label :Decoration "onorificenza"@it)
AnnotationAssertion(rdfs:comment :Decoration "Une distinction honorifique en reconnaissance d'un service civil ou militaire ."@fr)
AnnotationAssertion(rdfs:label :Decoration "διακόσμηση"@el)
AnnotationAssertion(rdfs:comment :Decoration "Per onorificenza si intende un segno di onore che viene concesso da un'autorità in riconoscimento di particolari atti benemeriti."@it)
SubClassOf(:Decoration :Award)
Declaration(Class(:Deity))
AnnotationAssertion(rdfs:label :Deity "神"@ja)
AnnotationAssertion(rdfs:label :Deity "godheid"@nl)
AnnotationAssertion(rdfs:label :Deity "deity"@en)
AnnotationAssertion(rdfs:label :Deity "gottheit"@de)
SubClassOf(:Deity :Agent)
Declaration(Class(:Department))
AnnotationAssertion(rdfs:label :Department "department"@en)
SubClassOf(:Department :PopulatedPlace)
Declaration(Class(:Deputy))
AnnotationAssertion(rdfs:label :Deputy "deputy"@en)
AnnotationAssertion(rdfs:label :Deputy "député"@fr)
AnnotationAssertion(rdfs:label :Deputy "αναπληρωτής"@el)
SubClassOf(:Deputy :Politician)
Declaration(Class(:Device))
AnnotationAssertion(rdfs:label :Device "Gerät"@de)
AnnotationAssertion(rdfs:label :Device "デバイス"@ja)
AnnotationAssertion(rdfs:label :Device "apparaat"@nl)
AnnotationAssertion(rdfs:label :Device "device"@en)
AnnotationAssertion(rdfs:label :Device "appareil"@fr)
AnnotationAssertion(rdfs:label :Device "συσκευη"@el)
SubClassOf(:Device owl:Thing)
Declaration(Class(:DigitalCamera))
AnnotationAssertion(rdfs:label :DigitalCamera "digital camera"@en)
AnnotationAssertion(rdfs:label :DigitalCamera "digitale camera"@nl)
AnnotationAssertion(rdfs:label :DigitalCamera "appareil photo numérique"@fr)
SubClassOf(:DigitalCamera :Camera)
Declaration(Class(:Diocese))
AnnotationAssertion(rdfs:label :Diocese "επισκοπή"@el)
AnnotationAssertion(rdfs:comment :Diocese "District or see under the supervision of a bishop."@en)
AnnotationAssertion(rdfs:label :Diocese "diocese"@en)
SubClassOf(:Diocese :ClericalAdministrativeRegion)
Declaration(Class(:Disease))
AnnotationAssertion(rdfs:label :Disease "病気"@ja)
AnnotationAssertion(rdfs:label :Disease "질병"@ko)
AnnotationAssertion(rdfs:label :Disease "disease"@en)
AnnotationAssertion(rdfs:label :Disease "ziekte"@nl)
AnnotationAssertion(rdfs:label :Disease "ασθένεια"@el)
AnnotationAssertion(rdfs:label :Disease "Krankheit"@de)
AnnotationAssertion(rdfs:label :Disease "maladie"@fr)
SubClassOf(:Disease owl:Thing)
Declaration(Class(:District))
AnnotationAssertion(rdfs:comment :District "bagian wilayah administratif dibawah kabupaten"@id)
AnnotationAssertion(rdfs:label :District "kecamatan"@id)
AnnotationAssertion(rdfs:label :District "district"@en)
SubClassOf(:District :GovernmentalAdministrativeRegion)
Declaration(Class(:DistrictWaterBoard))
AnnotationAssertion(rdfs:label :DistrictWaterBoard "district water board"@en)
AnnotationAssertion(rdfs:comment :DistrictWaterBoard "Conservancy, governmental agency dedicated to surface water management"@en)
AnnotationAssertion(rdfs:label :DistrictWaterBoard "waterschap"@nl)
SubClassOf(:DistrictWaterBoard :GovernmentalAdministrativeRegion)
Declaration(Class(:Dog))
AnnotationAssertion(rdfs:label :Dog "Hund"@de)
AnnotationAssertion(rdfs:label :Dog "dog"@en)
AnnotationAssertion(rdfs:label :Dog "chien"@fr)
AnnotationAssertion(rdfs:label :Dog "hond"@nl)
SubClassOf(:Dog :Mammal)
DisjointClasses(:Dog :Fish)
Declaration(Class(:Drama))
AnnotationAssertion(rdfs:label :Drama "drama"@en)
SubClassOf(:Drama :WrittenWork)
Declaration(Class(:Drug))
AnnotationAssertion(rdfs:label :Drug "약"@ko)
AnnotationAssertion(rdfs:label :Drug "Droge"@de)
AnnotationAssertion(rdfs:label :Drug "médicament"@fr)
AnnotationAssertion(rdfs:label :Drug "薬物"@ja)
AnnotationAssertion(rdfs:label :Drug "drug"@en)
AnnotationAssertion(rdfs:label :Drug "geneesmiddel"@nl)
AnnotationAssertion(rdfs:label :Drug "φάρμακο"@el)
SubClassOf(:Drug owl:Thing)
Declaration(Class(:Economist))
AnnotationAssertion(rdfs:label :Economist "économiste"@fr)
AnnotationAssertion(rdfs:label :Economist "economist"@en)
AnnotationAssertion(rdfs:label :Economist "econoom"@nl)
AnnotationAssertion(rdfs:comment :Economist "An economist is a professional in the social science discipline of economics."@en)
AnnotationAssertion(rdfs:comment :Economist "Un economista es un profesional de las ciencias sociales experto en economía teórica o aplicada."@es)
AnnotationAssertion(rdfs:label :Economist "economista"@es)
AnnotationAssertion(rdfs:comment :Economist "Le terme d’économiste désigne une personne experte en science économique."@fr)
AnnotationAssertion(rdfs:label :Economist "οικονομολόγος"@el)
SubClassOf(:Economist :Person)
Declaration(Class(:EducationalInstitution))
AnnotationAssertion(rdfs:label :EducationalInstitution "onderwijsinstelling"@nl)
AnnotationAssertion(rdfs:label :EducationalInstitution "établissement d'enseignement"@fr)
AnnotationAssertion(rdfs:label :EducationalInstitution "εκπαιδευτικό ίδρυμα"@el)
AnnotationAssertion(rdfs:label :EducationalInstitution "Bildungseinrichtung"@de)
AnnotationAssertion(rdfs:label :EducationalInstitution "educational institution"@en)
EquivalentClasses(:EducationalInstitution <http://schema.org/EducationalOrganization>)
SubClassOf(:EducationalInstitution :Organisation)
Declaration(Class(:Election))
AnnotationAssertion(rdfs:label :Election "verkiezing"@nl)
AnnotationAssertion(rdfs:label :Election "εκλογή"@el)
AnnotationAssertion(rdfs:label :Election "Election"@en)
AnnotationAssertion(rdfs:label :Election "élection"@fr)
AnnotationAssertion(rdfs:label :Election "Wahl"@de)
SubClassOf(:Election :Event)
Declaration(Class(:Embryology))
AnnotationAssertion(rdfs:label :Embryology "embryologie"@fr)
AnnotationAssertion(rdfs:label :Embryology "εμβρυολογία"@el)
AnnotationAssertion(rdfs:label :Embryology "embryology"@en)
SubClassOf(:Embryology :AnatomicalStructure)
Declaration(Class(:Engineer))
AnnotationAssertion(rdfs:label :Engineer "μηχανικός"@el)
AnnotationAssertion(rdfs:label :Engineer "ingenieur"@nl)
AnnotationAssertion(rdfs:label :Engineer "ingeniere"@it)
AnnotationAssertion(rdfs:label :Engineer "ingénieur"@fr)
AnnotationAssertion(rdfs:label :Engineer "技術者"@ja)
AnnotationAssertion(rdfs:label :Engineer "engineer"@en)
AnnotationAssertion(rdfs:label :Engineer "Ingenieur"@de)
AnnotationAssertion(rdfs:label :Engineer "ingeniero"@es)
SubClassOf(:Engineer :Person)
Declaration(Class(:Enzyme))
AnnotationAssertion(rdfs:label :Enzyme "酵素"@ja)
AnnotationAssertion(rdfs:label :Enzyme "enzym"@de)
AnnotationAssertion(rdfs:label :Enzyme "ένζυμο"@el)
AnnotationAssertion(rdfs:label :Enzyme "enzima"@it)
AnnotationAssertion(rdfs:label :Enzyme "enzyme"@en)
AnnotationAssertion(rdfs:label :Enzyme "enzym"@nl)
SubClassOf(:Enzyme :Biomolecule)
Declaration(Class(:EthnicGroup))
AnnotationAssertion(rdfs:label :EthnicGroup "민족"@ko)
AnnotationAssertion(rdfs:label :EthnicGroup "εθνική ομάδα"@el)
AnnotationAssertion(rdfs:label :EthnicGroup "groupe ethnique"@fr)
AnnotationAssertion(rdfs:label :EthnicGroup "ethnic group"@en)
AnnotationAssertion(rdfs:label :EthnicGroup "ethnie"@de)
AnnotationAssertion(rdfs:label :EthnicGroup "etnia"@it)
SubClassOf(:EthnicGroup owl:Thing)
Declaration(Class(:Eukaryote))
AnnotationAssertion(rdfs:label :Eukaryote "ευκαρυωτικό"@el)
AnnotationAssertion(rdfs:label :Eukaryote "eucaryote"@fr)
AnnotationAssertion(rdfs:label :Eukaryote "eukaryote"@en)
AnnotationAssertion(rdfs:label :Eukaryote "真核生物"@ja)
SubClassOf(:Eukaryote :Species)
Declaration(Class(:EurovisionSongContestEntry))
AnnotationAssertion(rdfs:label :EurovisionSongContestEntry "concours Eurovision de la chanson"@fr)
AnnotationAssertion(rdfs:label :EurovisionSongContestEntry "Eurovision song contest entry"@en)
AnnotationAssertion(rdfs:label :EurovisionSongContestEntry "Διαγωνισμός τραγουδιού της Eurovision"@el)
SubClassOf(:EurovisionSongContestEntry :Song)
Declaration(Class(:Event))
AnnotationAssertion(rdfs:label :Event "gebeurtenis"@nl)
AnnotationAssertion(rdfs:label :Event "Ereignis"@de)
AnnotationAssertion(rdfs:label :Event "γεγονός"@el)
AnnotationAssertion(rdfs:label :Event "évènement"@fr)
AnnotationAssertion(rdfs:label :Event "イベント"@ja)
AnnotationAssertion(rdfs:label :Event "event"@en)
AnnotationAssertion(rdfs:label :Event "evento"@pt)
EquivalentClasses(:Event <http://schema.org/Event>)
SubClassOf(:Event owl:Thing)
DisjointClasses(:Event :Person)
Declaration(Class(:Factory))
AnnotationAssertion(rdfs:comment :Factory "A factory (previously manufactory) or manufacturing plant is an industrial site, usually consisting of buildings and machinery, or more commonly a complex having several buildings, where workers manufacture goods or operate machines processing one product into another."@en)
AnnotationAssertion(rdfs:label :Factory "fabbrica"@it)
AnnotationAssertion(rdfs:label :Factory "factory"@en)
AnnotationAssertion(rdfs:comment :Factory "Une usine est un bâtiment ou un ensemble de bâtiments destinés à la production industrielle."@fr)
AnnotationAssertion(rdfs:label :Factory "usine"@fr)
SubClassOf(:Factory :Building)
Declaration(Class(:Family))
AnnotationAssertion(rdfs:label :Family "family"@en)
AnnotationAssertion(rdfs:label :Family "familie"@nl)
AnnotationAssertion(rdfs:comment :Family "A group of people related by common descent, a lineage."@en)
SubClassOf(:Family :Agent)
Declaration(Class(:Fashion))
AnnotationAssertion(rdfs:label :Fashion "mode"@nl)
AnnotationAssertion(rdfs:comment :Fashion "Een stijl of code voor kleding, bepaald door de voorkeursstijl van een tijdperk of door individuele ontwerpers."@nl)
AnnotationAssertion(rdfs:label :Fashion "mode"@fr)
AnnotationAssertion(rdfs:comment :Fashion "A type or code of dressing, according to the standards of the time or individual design."@en)
AnnotationAssertion(rdfs:label :Fashion "fashion"@en)
SubClassOf(:Fashion :TopicalConcept)
Declaration(Class(:FashionDesigner))
AnnotationAssertion(rdfs:label :FashionDesigner "σχεδιαστής μόδας"@el)
AnnotationAssertion(rdfs:label :FashionDesigner "fashion designer"@en)
SubClassOf(:FashionDesigner :Artist)
Declaration(Class(:Fern))
AnnotationAssertion(rdfs:label :Fern "fern"@en)
AnnotationAssertion(rdfs:label :Fern "samambaia"@pt)
AnnotationAssertion(rdfs:label :Fern "farn"@de)
AnnotationAssertion(rdfs:label :Fern "φτέρη"@el)
AnnotationAssertion(rdfs:label :Fern "シダ植物門"@ja)
AnnotationAssertion(rdfs:label :Fern "felce"@it)
AnnotationAssertion(rdfs:label :Fern "fougères"@fr)
SubClassOf(:Fern :Plant)
Declaration(Class(:FictionalCharacter))
AnnotationAssertion(rdfs:label :FictionalCharacter "fictional character"@en)
AnnotationAssertion(rdfs:label :FictionalCharacter "キャラクター"@ja)
AnnotationAssertion(rdfs:label :FictionalCharacter "personnage de fiction"@fr)
AnnotationAssertion(rdfs:label :FictionalCharacter "personage (fictie)"@nl)
AnnotationAssertion(rdfs:label :FictionalCharacter "πλασματικός χαρακτήρας"@el)
SubClassOf(:FictionalCharacter :Person)
Declaration(Class(:FieldHockeyLeague))
AnnotationAssertion(rdfs:comment :FieldHockeyLeague "a group of sports teams that compete against each other in Field Hockey"@en)
AnnotationAssertion(rdfs:label :FieldHockeyLeague "ligue d'hockey sur gazon"@fr)
AnnotationAssertion(rdfs:label :FieldHockeyLeague "field hockey league"@en)
AnnotationAssertion(rdfs:comment :FieldHockeyLeague "ένα γκρουπ αθλητικών ομάδων που διαγωνίζονται η μια εναντίον της άλλης στο χόκεϊ επί χόρτου"@el)
AnnotationAssertion(rdfs:label :FieldHockeyLeague "πρωτάθλημα χόκεϊ επί χόρτου"@el)
SubClassOf(:FieldHockeyLeague :SportsLeague)
Declaration(Class(:FigureSkater))
AnnotationAssertion(rdfs:label :FigureSkater "patinador artístico"@pt)
AnnotationAssertion(rdfs:label :FigureSkater "kunstschaatser"@nl)
AnnotationAssertion(rdfs:label :FigureSkater "patineur artistique"@fr)
AnnotationAssertion(rdfs:label :FigureSkater "αθλητής του καλλιτεχνικού πατινάζ"@el)
AnnotationAssertion(rdfs:label :FigureSkater "figure skater"@en)
AnnotationAssertion(rdfs:label :FigureSkater "フィギュアスケート選手"@ja)
SubClassOf(:FigureSkater :Athlete)
Declaration(Class(:Film))
AnnotationAssertion(rdfs:label :Film "Film"@de)
AnnotationAssertion(rdfs:label :Film "film"@nl)
AnnotationAssertion(rdfs:label :Film "movie"@en)
AnnotationAssertion(rdfs:label :Film "映画"@ja)
AnnotationAssertion(rdfs:label :Film "فيلم"@ar)
AnnotationAssertion(rdfs:label :Film "film"@fr)
AnnotationAssertion(rdfs:label :Film "영화"@ko)
AnnotationAssertion(rdfs:label :Film "ταινία"@el)
EquivalentClasses(:Film <http://schema.org/Movie>)
SubClassOf(:Film :Work)
Declaration(Class(:FilmFestival))
AnnotationAssertion(rdfs:label :FilmFestival "filmfestival"@nl)
AnnotationAssertion(rdfs:label :FilmFestival "영화제"@ko)
AnnotationAssertion(rdfs:label :FilmFestival "festival du film"@fr)
AnnotationAssertion(rdfs:label :FilmFestival "φεστιβάλ κινηματογράφου"@el)
AnnotationAssertion(rdfs:label :FilmFestival "film festival"@en)
AnnotationAssertion(rdfs:label :FilmFestival "映画祭"@ja)
SubClassOf(:FilmFestival :Event)
SubClassOf(:FilmFestival <http://schema.org/Festival>)
Declaration(Class(:Fish))
AnnotationAssertion(rdfs:label :Fish "poisson"@fr)
AnnotationAssertion(rdfs:label :Fish "fish"@en)
AnnotationAssertion(rdfs:label :Fish "peixe"@pt)
AnnotationAssertion(rdfs:label :Fish "Fisch"@de)
AnnotationAssertion(rdfs:label :Fish "魚類"@ja)
AnnotationAssertion(rdfs:label :Fish "ψάρι"@el)
AnnotationAssertion(rdfs:label :Fish "vis"@nl)
SubClassOf(:Fish :Animal)
DisjointClasses(:Fish :Dog)
DisjointClasses(:Fish :Mammal)
Declaration(Class(:Flag))
AnnotationAssertion(rdfs:label :Flag "σημαία"@el)
AnnotationAssertion(rdfs:label :Flag "Flagge"@de)
AnnotationAssertion(rdfs:label :Flag "bayrak"@tr)
AnnotationAssertion(rdfs:label :Flag "flag"@en)
AnnotationAssertion(rdfs:label :Flag "vlag"@nl)
AnnotationAssertion(rdfs:label :Flag "旗"@ja)
AnnotationAssertion(rdfs:label :Flag "drapeau"@fr)
SubClassOf(:Flag owl:Thing)
Declaration(Class(:FloweringPlant))
AnnotationAssertion(rdfs:label :FloweringPlant "flowering plant"@en)
AnnotationAssertion(rdfs:label :FloweringPlant "ανθοφόρο φυτό"@el)
AnnotationAssertion(rdfs:label :FloweringPlant "bedecktsamige Pflanze"@de)
AnnotationAssertion(rdfs:label :FloweringPlant "被子植物"@ja)
AnnotationAssertion(rdfs:label :FloweringPlant "angiospermes"@fr)
AnnotationAssertion(rdfs:label :FloweringPlant "magnoliofita"@it)
SubClassOf(:FloweringPlant :Plant)
Declaration(Class(:Food))
AnnotationAssertion(rdfs:comment :Food "Φαγητό είναι οποιαδήποτε φαγώσιμη ή πόσιμη ουσία που καταναλώνεται κανονικά από ανθρώπους."@el)
AnnotationAssertion(rdfs:label :Food "alimento"@es)
AnnotationAssertion(rdfs:label :Food "nourriture"@fr)
AnnotationAssertion(rdfs:label :Food "Lebensmittel"@de)
AnnotationAssertion(rdfs:label :Food "φαγητό"@el)
AnnotationAssertion(rdfs:label :Food "Food"@en)
AnnotationAssertion(rdfs:label :Food "voedsel"@nl)
AnnotationAssertion(rdfs:label :Food "음식"@ko)
AnnotationAssertion(rdfs:label :Food "食品"@ja)
AnnotationAssertion(rdfs:comment :Food "Food is any eatable or drinkable substance that is normally consumed by humans."@en)
AnnotationAssertion(rdfs:comment :Food "Lebensmittel umfasst als Oberbegriff sowohl Getränke als auch die Nahrungsmittel und Genussmittel."@de)
SubClassOf(:Food owl:Thing)
Declaration(Class(:FootballLeagueSeason))
AnnotationAssertion(rdfs:label :FootballLeagueSeason "αγωνιστική περίοδος πρωταθλήματος ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :FootballLeagueSeason "football league season"@en)
SubClassOf(:FootballLeagueSeason :SportsTeamSeason)
Declaration(Class(:FootballMatch))
AnnotationAssertion(rdfs:label :FootballMatch "αγώνας ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :FootballMatch "partido de fútbol"@es)
AnnotationAssertion(rdfs:label :FootballMatch "mecz piłki nożnej"@pl)
AnnotationAssertion(rdfs:comment :FootballMatch "a competition between two football teams"@en)
AnnotationAssertion(rdfs:label :FootballMatch "football match"@en)
SubClassOf(:FootballMatch :SportsEvent)
Declaration(Class(:FormulaOneRacer))
AnnotationAssertion(rdfs:label :FormulaOneRacer "Formula One racer"@en)
AnnotationAssertion(rdfs:label :FormulaOneRacer "πιλότος της φόρμουλας ένα"@el)
AnnotationAssertion(rdfs:label :FormulaOneRacer "pilote de formule 1"@fr)
SubClassOf(:FormulaOneRacer :RacingDriver)
Declaration(Class(:FormulaOneRacing))
AnnotationAssertion(rdfs:label :FormulaOneRacing "φόρμουλα ένας αγώνας"@el)
AnnotationAssertion(rdfs:label :FormulaOneRacing "formula one racing"@en)
AnnotationAssertion(rdfs:label :FormulaOneRacing "Formule 1-coureur‎"@nl)
SubClassOf(:FormulaOneRacing :SportsLeague)
Declaration(Class(:FrenchLocality))
AnnotationAssertion(rdfs:label :FrenchLocality "french locality"@en)
SubClassOf(:FrenchLocality :Locality)
Declaration(Class(:Fungus))
AnnotationAssertion(rdfs:label :Fungus "fungus"@en)
AnnotationAssertion(rdfs:label :Fungus "fungi"@fr)
AnnotationAssertion(rdfs:label :Fungus "schimmel"@nl)
AnnotationAssertion(rdfs:label :Fungus "μύκητας"@el)
AnnotationAssertion(rdfs:label :Fungus "菌類"@ja)
SubClassOf(:Fungus :Eukaryote)
Declaration(Class(:GaelicGamesPlayer))
AnnotationAssertion(rdfs:label :GaelicGamesPlayer "Gaelic games player"@en)
AnnotationAssertion(rdfs:label :GaelicGamesPlayer "Γαελικός παίκτης παιχνιδιών"@el)
AnnotationAssertion(rdfs:label :GaelicGamesPlayer "joueur de sports gaéliques"@fr)
SubClassOf(:GaelicGamesPlayer :Athlete)
Declaration(Class(:Galaxy))
AnnotationAssertion(rdfs:label :Galaxy "galaksi"@tr)
AnnotationAssertion(rdfs:label :Galaxy "galáxia"@pt)
AnnotationAssertion(rdfs:label :Galaxy "galaxie"@fr)
AnnotationAssertion(rdfs:label :Galaxy "galaxy"@en)
AnnotationAssertion(rdfs:label :Galaxy "γαλαξίας"@el)
AnnotationAssertion(rdfs:label :Galaxy "銀河"@ja)
SubClassOf(:Galaxy :CelestialBody)
Declaration(Class(:Game))
AnnotationAssertion(rdfs:label :Game "jogo"@pt)
AnnotationAssertion(rdfs:label :Game "ゲーム"@ja)
AnnotationAssertion(rdfs:label :Game "game"@en)
AnnotationAssertion(rdfs:label :Game "spel"@nl)
AnnotationAssertion(rdfs:label :Game "Spiel"@de)
AnnotationAssertion(rdfs:comment :Game "a structured activity, usually undertaken for enjoyment and sometimes used as an educational tool"@en)
AnnotationAssertion(rdfs:label :Game "jeu"@fr)
AnnotationAssertion(rdfs:label :Game "Πληροφορίες παιχνιδιού"@el)
SubClassOf(:Game :Activity)
Declaration(Class(:Gene))
AnnotationAssertion(rdfs:label :Gene "遺伝子"@ja)
AnnotationAssertion(rdfs:label :Gene "Gen"@de)
AnnotationAssertion(rdfs:label :Gene "gene"@en)
AnnotationAssertion(rdfs:label :Gene "gène"@fr)
AnnotationAssertion(rdfs:label :Gene "gene"@pt)
AnnotationAssertion(rdfs:label :Gene "gen"@nl)
AnnotationAssertion(rdfs:label :Gene "γονίδιο"@el)
SubClassOf(:Gene :Biomolecule)
Declaration(Class(:GeneLocation))
AnnotationAssertion(rdfs:label :GeneLocation "GeneLocation"@en)
AnnotationAssertion(rdfs:label :GeneLocation "遺伝子座"@ja)
AnnotationAssertion(rdfs:label :GeneLocation "θέση γονιδίων"@el)
SubClassOf(:GeneLocation owl:Thing)
Declaration(Class(:Genre))
AnnotationAssertion(rdfs:label :Genre "Genre"@de)
AnnotationAssertion(rdfs:label :Genre "genre"@en)
AnnotationAssertion(rdfs:label :Genre "ύφος"@el)
AnnotationAssertion(rdfs:label :Genre "genre"@nl)
SubClassOf(:Genre :TopicalConcept)
Declaration(Class(:GeologicalPeriod))
AnnotationAssertion(rdfs:label :GeologicalPeriod "geologische periode"@nl)
AnnotationAssertion(rdfs:label :GeologicalPeriod "geological period"@en)
SubClassOf(:GeologicalPeriod :TimePeriod)
DisjointClasses(:GeologicalPeriod :Person)
Declaration(Class(:GeopoliticalOrganisation))
AnnotationAssertion(rdfs:label :GeopoliticalOrganisation "geopolitical organisation"@en)
AnnotationAssertion(rdfs:label :GeopoliticalOrganisation "γεωπολιτική οργάνωση"@el)
AnnotationAssertion(rdfs:label :GeopoliticalOrganisation "organisation géopolitique"@fr)
SubClassOf(:GeopoliticalOrganisation :Organisation)
Declaration(Class(:Ginkgo))
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo"@de)
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo"@fr)
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo biloba"@it)
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo"@pt)
AnnotationAssertion(rdfs:label :Ginkgo "銀杏属"@ja)
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo"@en)
AnnotationAssertion(rdfs:label :Ginkgo "ginkgo"@el)
SubClassOf(:Ginkgo :Plant)
Declaration(Class(:GivenName))
AnnotationAssertion(rdfs:label :GivenName "όνομα"@el)
AnnotationAssertion(rdfs:label :GivenName "imię"@pl)
AnnotationAssertion(rdfs:label :GivenName "voornaam"@nl)
AnnotationAssertion(rdfs:label :GivenName "Vorname"@de)
AnnotationAssertion(rdfs:label :GivenName "prénom"@fr)
AnnotationAssertion(rdfs:label :GivenName "名"@ja)
AnnotationAssertion(rdfs:label :GivenName "given name"@en)
SubClassOf(:GivenName :Name)
Declaration(Class(:Globularswarm))
AnnotationAssertion(rdfs:label :Globularswarm "Globular Swarm"@en)
AnnotationAssertion(rdfs:label :Globularswarm "Σφαιρωτό σμήνος"@el)
SubClassOf(:Globularswarm :Swarm)
Declaration(Class(:Gnetophytes))
AnnotationAssertion(rdfs:label :Gnetophytes "Gnetophytes"@el)
AnnotationAssertion(rdfs:label :Gnetophytes "gnétophytes"@fr)
AnnotationAssertion(rdfs:label :Gnetophytes "グネツム綱"@ja)
AnnotationAssertion(rdfs:label :Gnetophytes "Gnetophytes"@en)
SubClassOf(:Gnetophytes :Plant)
Declaration(Class(:GolfLeague))
AnnotationAssertion(rdfs:comment :GolfLeague "Golfplayer that compete against each other in Golf"@en)
AnnotationAssertion(rdfs:label :GolfLeague "liga de golfe"@pt)
AnnotationAssertion(rdfs:label :GolfLeague "ένωση γκολφ"@el)
AnnotationAssertion(rdfs:label :GolfLeague "golf league"@en)
AnnotationAssertion(rdfs:label :GolfLeague "ligue de golf"@fr)
SubClassOf(:GolfLeague :SportsLeague)
Declaration(Class(:GolfPlayer))
AnnotationAssertion(rdfs:label :GolfPlayer "golfspeler"@nl)
AnnotationAssertion(rdfs:label :GolfPlayer "golfeur"@fr)
AnnotationAssertion(rdfs:label :GolfPlayer "παίκτης γκολφ"@el)
AnnotationAssertion(rdfs:label :GolfPlayer "golf player"@en)
SubClassOf(:GolfPlayer :Athlete)
Declaration(Class(:GovernmentAgency))
AnnotationAssertion(rdfs:label :GovernmentAgency "orgaan openbaar bestuur"@nl)
AnnotationAssertion(rdfs:comment :GovernmentAgency "Eine Behörde ist eine staatliche Einrichtung, die im weitesten Sinne für die Erfüllung von Aufgaben der Verwaltung des Staates und dabei insbesondere für Dienstleistungen des Staates gegenüber seinen Bürgern zuständig ist. Eine Behörde erhält ihren Auftrag aus den Gesetzen des Staates, in dem und für den sie tätig ist."@de)
AnnotationAssertion(rdfs:comment :GovernmentAgency "A government agency is a permanent or semi-permanent organization in the machinery of government that is responsible for the oversight and administration of specific functions, such as an intelligence agency."@en)
AnnotationAssertion(rdfs:label :GovernmentAgency "Behörde"@de)
AnnotationAssertion(rdfs:label :GovernmentAgency "κυβερνητική υπηρεσία"@el)
AnnotationAssertion(rdfs:label :GovernmentAgency "government agency"@en)
AnnotationAssertion(rdfs:comment :GovernmentAgency "Μια κυβερνητική υπηρεσία είναι μόνιμη ή ημι-μόνιμη οργάνωση στο μηχανισμό της κυβέρνησης, η οποία είναι υπεύθυνη για την εποπτεία και διαχείριση συγκεκριμένων λειτουργιών, όπως η υπηρεσία πληροφοριών."@el)
EquivalentClasses(:GovernmentAgency <http://schema.org/GovernmentOrganization>)
SubClassOf(:GovernmentAgency :Organisation)
Declaration(Class(:GovernmentType))
AnnotationAssertion(rdfs:label :GovernmentType "Government Type"@en)
AnnotationAssertion(rdfs:comment :GovernmentType "regeringsvorm"@nl)
AnnotationAssertion(rdfs:label :GovernmentType "régime politique"@fr)
AnnotationAssertion(rdfs:label :GovernmentType "Είδη Διακυβέρνησης"@el)
AnnotationAssertion(rdfs:comment :GovernmentType "a form of government"@en)
SubClassOf(:GovernmentType :TopicalConcept)
Declaration(Class(:GovernmentalAdministrativeRegion))
AnnotationAssertion(rdfs:label :GovernmentalAdministrativeRegion "governmental administrative region"@en)
AnnotationAssertion(rdfs:comment :GovernmentalAdministrativeRegion "An administrative body governing some territorial unity, in this case a governmental administrative body"@en)
AnnotationAssertion(rdfs:label :GovernmentalAdministrativeRegion "région administrative d'état"@fr)
AnnotationAssertion(rdfs:label :GovernmentalAdministrativeRegion "gebied onder overheidsbestuur"@nl)
SubClassOf(:GovernmentalAdministrativeRegion :AdministrativeRegion)
Declaration(Class(:Governor))
AnnotationAssertion(rdfs:label :Governor "governor"@en)
AnnotationAssertion(rdfs:label :Governor "知事"@ja)
AnnotationAssertion(rdfs:label :Governor "gouverneur"@fr)
AnnotationAssertion(rdfs:label :Governor "κυβερνήτης"@el)
SubClassOf(:Governor :Politician)
Declaration(Class(:GrandPrix))
AnnotationAssertion(rdfs:label :GrandPrix "γκραν πρι"@el)
AnnotationAssertion(rdfs:label :GrandPrix "Grand Prix"@en)
AnnotationAssertion(rdfs:label :GrandPrix "グランプリ"@ja)
AnnotationAssertion(rdfs:label :GrandPrix "grand prix"@fr)
AnnotationAssertion(rdfs:label :GrandPrix "grosser Preis"@de)
AnnotationAssertion(rdfs:label :GrandPrix "gran premio"@it)
SubClassOf(:GrandPrix :SportsEvent)
Declaration(Class(:Grape))
AnnotationAssertion(rdfs:label :Grape "uva"@it)
AnnotationAssertion(rdfs:label :Grape "σταφύλι"@el)
AnnotationAssertion(rdfs:label :Grape "grape"@en)
AnnotationAssertion(rdfs:label :Grape "raisin"@fr)
AnnotationAssertion(rdfs:label :Grape "Weintraube"@de)
AnnotationAssertion(rdfs:label :Grape "ブドウ"@ja)
AnnotationAssertion(rdfs:label :Grape "druif"@nl)
SubClassOf(:Grape :FloweringPlant)
Declaration(Class(:GreenAlga))
AnnotationAssertion(rdfs:label :GreenAlga "緑藻"@ja)
AnnotationAssertion(rdfs:label :GreenAlga "algue verte"@fr)
AnnotationAssertion(rdfs:label :GreenAlga "green alga"@en)
SubClassOf(:GreenAlga :Plant)
Declaration(Class(:GridironFootballPlayer))
AnnotationAssertion(rdfs:label :GridironFootballPlayer "gridiron football player"@en)
AnnotationAssertion(rdfs:label :GridironFootballPlayer "joueur de football américain gridiron"@fr)
SubClassOf(:GridironFootballPlayer :Athlete)
Declaration(Class(:Group))
AnnotationAssertion(rdfs:comment :Group "An (informal) group of people."@en)
AnnotationAssertion(rdfs:label :Group "groep"@nl)
AnnotationAssertion(rdfs:label :Group "gruppo"@it)
AnnotationAssertion(rdfs:comment :Group "Μια συνήθως άτυπη ομάδα ανθρώπων."@el)
AnnotationAssertion(rdfs:comment :Group "un groupe (informel) de personnes."@fr)
AnnotationAssertion(rdfs:label :Group "ομάδα"@el)
AnnotationAssertion(rdfs:label :Group "集団"@ja)
AnnotationAssertion(rdfs:label :Group "Gruppe"@de)
AnnotationAssertion(rdfs:label :Group "group"@en)
AnnotationAssertion(rdfs:label :Group "groupe"@fr)
SubClassOf(:Group :Organisation)
SubClassOf(:Group <http://schema.org/Organization>)
Declaration(Class(:Guitar))
AnnotationAssertion(rdfs:comment :Guitar "Décrit la guitare"@fr)
AnnotationAssertion(rdfs:comment :Guitar "Describe la guitarra"@es)
AnnotationAssertion(rdfs:label :Guitar "Guitare"@fr)
AnnotationAssertion(rdfs:label :Guitar "Guitar"@en)
AnnotationAssertion(rdfs:label :Guitar "Guitarra"@es)
AnnotationAssertion(rdfs:comment :Guitar "Describes the guitar"@en)
SubClassOf(:Guitar :Instrument)
Declaration(Class(:Gymnast))
AnnotationAssertion(rdfs:comment :Gymnast "Ένας γυμναστής είναι ένας που εκτελεί γυμναστικές ασκήσεις"@el)
AnnotationAssertion(rdfs:comment :Gymnast "A gymnast is one who performs gymnastics"@en)
AnnotationAssertion(rdfs:label :Gymnast "gymnast"@en)
AnnotationAssertion(rdfs:label :Gymnast "γυμναστής"@el)
SubClassOf(:Gymnast :Athlete)
Declaration(Class(:HandballLeague))
AnnotationAssertion(rdfs:label :HandballLeague "ligue de handball"@fr)
AnnotationAssertion(rdfs:comment :HandballLeague "a group of sports teams that compete against each other in Handball"@en)
AnnotationAssertion(rdfs:label :HandballLeague "Ομοσπονδία Χειροσφαίρισης"@el)
AnnotationAssertion(rdfs:label :HandballLeague "handball league"@en)
SubClassOf(:HandballLeague :SportsLeague)
Declaration(Class(:HandballPlayer))
AnnotationAssertion(rdfs:label :HandballPlayer "handballer"@nl)
AnnotationAssertion(rdfs:label :HandballPlayer "handball player"@en)
AnnotationAssertion(rdfs:label :HandballPlayer "παίκτης του handball"@el)
AnnotationAssertion(rdfs:label :HandballPlayer "joueur de handball"@fr)
SubClassOf(:HandballPlayer :Athlete)
Declaration(Class(:HistoricBuilding))
AnnotationAssertion(rdfs:label :HistoricBuilding "ιστορικό κτίριο"@el)
AnnotationAssertion(rdfs:label :HistoricBuilding "historisch gebouw"@nl)
AnnotationAssertion(rdfs:label :HistoricBuilding "bâtiment historique"@fr)
AnnotationAssertion(rdfs:label :HistoricBuilding "歴史的建造物"@ja)
AnnotationAssertion(rdfs:label :HistoricBuilding "historic building"@en)
EquivalentClasses(:HistoricBuilding <http://schema.org/LandmarksOrHistoricalBuildings>)
SubClassOf(:HistoricBuilding :Building)
Declaration(Class(:HistoricPlace))
AnnotationAssertion(rdfs:label :HistoricPlace "ιστορικός χώρος"@el)
AnnotationAssertion(rdfs:label :HistoricPlace "historic place"@en)
AnnotationAssertion(rdfs:label :HistoricPlace "site historique"@fr)
EquivalentClasses(:HistoricPlace <http://schema.org/LandmarksOrHistoricalBuildings>)
SubClassOf(:HistoricPlace :Place)
Declaration(Class(:HistoricalPeriod))
AnnotationAssertion(rdfs:comment :HistoricalPeriod "A historical Period should be linked to a Place by way of the property dct:spatial (already defined)"@en)
AnnotationAssertion(rdfs:label :HistoricalPeriod "historical period"@en)
AnnotationAssertion(rdfs:label :HistoricalPeriod "ιστορική περίοδος"@el)
AnnotationAssertion(rdfs:label :HistoricalPeriod "historische periode"@nl)
EquivalentClasses(:HistoricalPeriod <http://dbpedia.org/ontology/cidoccrm:E4_Period>)
SubClassOf(:HistoricalPeriod :TimePeriod)
DisjointClasses(:HistoricalPeriod :Person)
DisjointClasses(:HistoricalPeriod :PrehistoricalPeriod)
Declaration(Class(:HockeyTeam))
AnnotationAssertion(rdfs:label :HockeyTeam "hockey team"@en)
AnnotationAssertion(rdfs:label :HockeyTeam "ομάδα χόκεϊ"@el)
AnnotationAssertion(rdfs:label :HockeyTeam "équipe de hockey"@fr)
AnnotationAssertion(rdfs:label :HockeyTeam "Hokejska ekipa"@sl)
SubClassOf(:HockeyTeam :SportsTeam)
Declaration(Class(:Holiday))
AnnotationAssertion(rdfs:label :Holiday "holiday"@en)
AnnotationAssertion(rdfs:label :Holiday "祝日"@ja)
AnnotationAssertion(rdfs:label :Holiday "feiertag"@de)
AnnotationAssertion(rdfs:label :Holiday "giorno festivo"@it)
AnnotationAssertion(rdfs:label :Holiday "αργία"@el)
SubClassOf(:Holiday owl:Thing)
Declaration(Class(:HollywoodCartoon))
AnnotationAssertion(rdfs:label :HollywoodCartoon "hollywood cartoon"@en)
AnnotationAssertion(rdfs:label :HollywoodCartoon "κινούμενα σχέδια του Hollywood"@el)
SubClassOf(:HollywoodCartoon :Cartoon)
Declaration(Class(:HorseTrainer))
AnnotationAssertion(rdfs:label :HorseTrainer "horse trainer"@en)
AnnotationAssertion(rdfs:label :HorseTrainer "調教師"@ja)
AnnotationAssertion(rdfs:label :HorseTrainer "εκπαιδευτής αλόγων"@el)
SubClassOf(:HorseTrainer :Person)
Declaration(Class(:Hospital))
AnnotationAssertion(rdfs:label :Hospital "νοσοκομείο"@el)
AnnotationAssertion(rdfs:label :Hospital "ziekenhuis"@nl)
AnnotationAssertion(rdfs:label :Hospital "hôpital"@fr)
AnnotationAssertion(rdfs:label :Hospital "病院"@ja)
AnnotationAssertion(rdfs:label :Hospital "hospital"@en)
AnnotationAssertion(rdfs:label :Hospital "병원"@ko)
AnnotationAssertion(rdfs:label :Hospital "Krankenhaus"@de)
AnnotationAssertion(rdfs:label :Hospital "hospital"@pt)
EquivalentClasses(:Hospital <http://schema.org/Hospital>)
SubClassOf(:Hospital :Building)
Declaration(Class(:Host))
AnnotationAssertion(rdfs:label :Host "host"@en)
SubClassOf(:Host :Person)
Declaration(Class(:HotSpring))
AnnotationAssertion(rdfs:label :HotSpring "hot spring"@en)
AnnotationAssertion(rdfs:label :HotSpring "温泉"@ja)
SubClassOf(:HotSpring :Place)
Declaration(Class(:Hotel))
AnnotationAssertion(rdfs:label :Hotel "albergo"@it)
AnnotationAssertion(rdfs:label :Hotel "hotel"@en)
AnnotationAssertion(rdfs:label :Hotel "ホテル"@ja)
AnnotationAssertion(rdfs:label :Hotel "hôtel"@fr)
AnnotationAssertion(rdfs:label :Hotel "hotel"@nl)
AnnotationAssertion(rdfs:label :Hotel "호텔"@ko)
AnnotationAssertion(rdfs:label :Hotel "ξενοδοχείο"@el)
AnnotationAssertion(rdfs:label :Hotel "Hotel"@de)
EquivalentClasses(:Hotel <http://schema.org/Hotel>)
SubClassOf(:Hotel :Building)
Declaration(Class(:HumanGene))
AnnotationAssertion(rdfs:label :HumanGene "ανθρώπινο γονίδιο"@el)
AnnotationAssertion(rdfs:label :HumanGene "ヒト遺伝子"@ja)
AnnotationAssertion(rdfs:label :HumanGene "HumanGene"@en)
SubClassOf(:HumanGene :Gene)
Declaration(Class(:HumanGeneLocation))
AnnotationAssertion(rdfs:label :HumanGeneLocation "ヒト遺伝子座"@ja)
AnnotationAssertion(rdfs:label :HumanGeneLocation "τοποθεσία του ανθρώπινου γονιδίου"@el)
AnnotationAssertion(rdfs:label :HumanGeneLocation "HumanGeneLocation"@en)
SubClassOf(:HumanGeneLocation :GeneLocation)
Declaration(Class(:IceHockeyLeague))
AnnotationAssertion(rdfs:comment :IceHockeyLeague "a group of sports teams that compete against each other in Ice Hockey."@en)
AnnotationAssertion(rdfs:label :IceHockeyLeague "πρωτάθλημα χόκεϋ"@el)
AnnotationAssertion(rdfs:label :IceHockeyLeague "ice hockey league"@en)
AnnotationAssertion(rdfs:label :IceHockeyLeague "ligue d'hockey sur glace"@fr)
SubClassOf(:IceHockeyLeague :SportsLeague)
Declaration(Class(:IceHockeyPlayer))
AnnotationAssertion(rdfs:label :IceHockeyPlayer "ice hockey player"@en)
AnnotationAssertion(rdfs:label :IceHockeyPlayer "joueur de hockey sur glace"@fr)
AnnotationAssertion(rdfs:label :IceHockeyPlayer "ijshockeyspeler"@nl)
AnnotationAssertion(rdfs:label :IceHockeyPlayer "παίκτης χόκεϋ"@el)
SubClassOf(:IceHockeyPlayer :Athlete)
Declaration(Class(:Ideology))
AnnotationAssertion(rdfs:label :Ideology "ιδεολογία"@el)
AnnotationAssertion(rdfs:label :Ideology "idéologie"@fr)
AnnotationAssertion(rdfs:label :Ideology "Ideologie"@de)
AnnotationAssertion(rdfs:label :Ideology "ideology"@en)
AnnotationAssertion(rdfs:comment :Ideology "για παραδειγμα: Προοδευτισμός στις ΗΠΑ, κλασικός φιλελευθερισμός"@el)
AnnotationAssertion(rdfs:label :Ideology "ideologie"@nl)
AnnotationAssertion(rdfs:comment :Ideology "for example: Progressivism_in_the_United_States, Classical_liberalism"@en)
AnnotationAssertion(rdfs:label :Ideology "ideologia"@pt)
SubClassOf(:Ideology :TopicalConcept)
Declaration(Class(:Imdb))
AnnotationAssertion(rdfs:label :Imdb "Imdb"@en)
AnnotationAssertion(rdfs:label :Imdb "Imdb"@fr)
AnnotationAssertion(rdfs:label :Imdb "Imdb"@el)
AnnotationAssertion(rdfs:label :Imdb "Imdb"@nl)
SubClassOf(:Imdb owl:Thing)
Declaration(Class(:InformationAppliance))
AnnotationAssertion(rdfs:label :InformationAppliance "information appliance"@en)
AnnotationAssertion(rdfs:comment :InformationAppliance "An information device such as PDAs or Video game consoles, etc."@en)
AnnotationAssertion(rdfs:label :InformationAppliance "συσκευή πληροφορικής"@el)
SubClassOf(:InformationAppliance :Device)
Declaration(Class(:Infrastructure))
AnnotationAssertion(rdfs:label :Infrastructure "Υποδομή"@el)
AnnotationAssertion(rdfs:label :Infrastructure "infrastructure"@en)
AnnotationAssertion(rdfs:label :Infrastructure "infrastructure"@fr)
SubClassOf(:Infrastructure :ArchitecturalStructure)
Declaration(Class(:InlineHockeyLeague))
AnnotationAssertion(rdfs:label :InlineHockeyLeague "inline hockey league"@en)
AnnotationAssertion(rdfs:comment :InlineHockeyLeague "group of sports teams that compete against each other in Inline Hockey."@en)
AnnotationAssertion(rdfs:label :InlineHockeyLeague "πρωτάθλημα χόκεϋ inline"@el)
SubClassOf(:InlineHockeyLeague :SportsLeague)
Declaration(Class(:Insect))
AnnotationAssertion(rdfs:label :Insect "έντομο"@el)
AnnotationAssertion(rdfs:label :Insect "insecte"@fr)
AnnotationAssertion(rdfs:label :Insect "insect"@nl)
AnnotationAssertion(rdfs:label :Insect "昆虫"@ja)
AnnotationAssertion(rdfs:label :Insect "insect"@en)
SubClassOf(:Insect :Animal)
Declaration(Class(:Installment))
AnnotationAssertion(rdfs:label :Installment "Installment"@en)
AnnotationAssertion(rdfs:label :Installment "δόση"@el)
AnnotationAssertion(rdfs:label :Installment "Versement"@fr)
AnnotationAssertion(rdfs:label :Installment "Deel (van werk)"@nl)
SubClassOf(:Installment :WrittenWork)
Declaration(Class(:Instrument))
AnnotationAssertion(rdfs:label :Instrument "악기"@ko)
AnnotationAssertion(rdfs:label :Instrument "Μουσικό Όργανο"@el)
AnnotationAssertion(rdfs:label :Instrument "Glasbilo"@sl)
AnnotationAssertion(rdfs:label :Instrument "musikinstrument"@de)
AnnotationAssertion(rdfs:label :Instrument "Instrument"@en)
AnnotationAssertion(rdfs:label :Instrument "Instrumento"@es)
AnnotationAssertion(rdfs:label :Instrument "muziekinstrument"@nl)
AnnotationAssertion(rdfs:label :Instrument "strumento musicale"@it)
AnnotationAssertion(rdfs:comment :Instrument "Describes all musical instrument"@en)
AnnotationAssertion(rdfs:label :Instrument "instrument de musique"@fr)
SubClassOf(:Instrument <http://schema.org/Product>)
Declaration(Class(:Intercommunality))
AnnotationAssertion(rdfs:label :Intercommunality "Intercommunality"@en)
SubClassOf(:Intercommunality :PopulatedPlace)
Declaration(Class(:IranSettlement))
AnnotationAssertion(rdfs:label :IranSettlement "iran municipality"@en)
SubClassOf(:IranSettlement :Settlement)
Declaration(Class(:Island))
AnnotationAssertion(rdfs:label :Island "섬"@ko)
AnnotationAssertion(rdfs:label :Island "Insel"@de)
AnnotationAssertion(rdfs:label :Island "wyspa"@pl)
AnnotationAssertion(rdfs:label :Island "ilha"@pt)
AnnotationAssertion(rdfs:label :Island "eiland"@nl)
AnnotationAssertion(rdfs:label :Island "island"@en)
AnnotationAssertion(rdfs:label :Island "νησί"@el)
AnnotationAssertion(rdfs:label :Island "島"@ja)
AnnotationAssertion(rdfs:label :Island "île"@fr)
SubClassOf(:Island :PopulatedPlace)
Declaration(Class(:Jockey))
AnnotationAssertion(rdfs:label :Jockey "αναβάτης αλόγου αγώνων"@el)
AnnotationAssertion(rdfs:label :Jockey "jockey (horse racer)"@en)
AnnotationAssertion(rdfs:label :Jockey "騎手"@ja)
SubClassOf(:Jockey :Athlete)
Declaration(Class(:Journalist))
AnnotationAssertion(rdfs:label :Journalist "giornalista"@it)
AnnotationAssertion(rdfs:label :Journalist "journalist"@en)
AnnotationAssertion(rdfs:label :Journalist "ジャーナリスト"@ja)
AnnotationAssertion(rdfs:label :Journalist "journalist"@de)
AnnotationAssertion(rdfs:label :Journalist "δημοσιογράφος"@el)
AnnotationAssertion(rdfs:label :Journalist "journaliste"@fr)
AnnotationAssertion(rdfs:label :Journalist "journalist"@nl)
SubClassOf(:Journalist :Person)
Declaration(Class(:Judge))
AnnotationAssertion(rdfs:label :Judge "rechter"@nl)
AnnotationAssertion(rdfs:label :Judge "judge"@en)
AnnotationAssertion(rdfs:label :Judge "giudice"@it)
AnnotationAssertion(rdfs:label :Judge "juge"@fr)
AnnotationAssertion(rdfs:label :Judge "裁判官"@ja)
AnnotationAssertion(rdfs:label :Judge "δικαστής"@el)
AnnotationAssertion(rdfs:label :Judge "richter"@de)
SubClassOf(:Judge :Person)
Declaration(Class(:LacrosseLeague))
AnnotationAssertion(rdfs:label :LacrosseLeague "lacrosse league"@en)
AnnotationAssertion(rdfs:comment :LacrosseLeague "a group of sports teams that compete against each other in Lacrosse."@en)
AnnotationAssertion(rdfs:label :LacrosseLeague "ligue de crosse"@fr)
AnnotationAssertion(rdfs:label :LacrosseLeague "πρωτάθλημα χόκεϋ σε χόρτο"@el)
SubClassOf(:LacrosseLeague :SportsLeague)
Declaration(Class(:LacrossePlayer))
AnnotationAssertion(rdfs:label :LacrossePlayer "παίκτης χόκεϋ σε χόρτο"@el)
AnnotationAssertion(rdfs:label :LacrossePlayer "lacrosse player"@en)
SubClassOf(:LacrossePlayer :Athlete)
Declaration(Class(:Lake))
AnnotationAssertion(rdfs:label :Lake "호수"@ja)
AnnotationAssertion(rdfs:label :Lake "meer"@nl)
AnnotationAssertion(rdfs:label :Lake "lake"@en)
AnnotationAssertion(rdfs:label :Lake "lac"@fr)
AnnotationAssertion(rdfs:label :Lake "See"@de)
AnnotationAssertion(rdfs:label :Lake "호수"@ko)
AnnotationAssertion(rdfs:label :Lake "λίμνη"@el)
EquivalentClasses(:Lake <http://schema.org/LakeBodyOfWater>)
SubClassOf(:Lake :BodyOfWater)
Declaration(Class(:Language))
AnnotationAssertion(rdfs:label :Language "language"@en)
AnnotationAssertion(rdfs:label :Language "taal"@nl)
AnnotationAssertion(rdfs:label :Language "언어"@ko)
AnnotationAssertion(rdfs:label :Language "langage"@fr)
AnnotationAssertion(rdfs:label :Language "Sprache"@de)
AnnotationAssertion(rdfs:label :Language "言語"@ja)
AnnotationAssertion(rdfs:label :Language "γλώσσα"@el)
AnnotationAssertion(rdfs:label :Language "idioma"@es)
EquivalentClasses(:Language <http://schema.org/Language>)
SubClassOf(:Language owl:Thing)
Declaration(Class(:LaunchPad))
AnnotationAssertion(rdfs:label :LaunchPad "launch pad"@en)
AnnotationAssertion(rdfs:label :LaunchPad "rampe de lancement"@fr)
AnnotationAssertion(rdfs:label :LaunchPad "ράμπα φορτώσεως"@el)
SubClassOf(:LaunchPad :Infrastructure)
Declaration(Class(:LawFirm))
AnnotationAssertion(rdfs:comment :LawFirm "Als Anwaltskanzlei bezeichnet man die Büroräume und das Unternehmen oder den Betrieb eines Rechtsanwalts oder mehrerer Rechtsanwälte."@de)
AnnotationAssertion(rdfs:label :LawFirm "εταιρεία δικηγόρων"@el)
AnnotationAssertion(rdfs:comment :LawFirm "A law firm is a business entity formed by one or more lawyers to engage in the practice of law. The primary service provided by a law firm is to advise clients (individuals or corporations) about their legal rights and responsibilities, and to represent their clients in civil or criminal cases, business transactions, and other matters in which legal advice and other assistance are sought."@en)
AnnotationAssertion(rdfs:label :LawFirm "Anwaltskanzlei"@de)
AnnotationAssertion(rdfs:label :LawFirm "法律事務所"@ja)
AnnotationAssertion(rdfs:label :LawFirm "advocatenkantoor"@nl)
AnnotationAssertion(rdfs:label :LawFirm "firma de abogados"@es)
AnnotationAssertion(rdfs:label :LawFirm "law firm"@en)
SubClassOf(:LawFirm :Company)
Declaration(Class(:LegalCase))
AnnotationAssertion(rdfs:label :LegalCase "cas juridique"@fr)
AnnotationAssertion(rdfs:label :LegalCase "Legal Case"@en)
AnnotationAssertion(rdfs:label :LegalCase "caso jurídico"@pt)
AnnotationAssertion(rdfs:label :LegalCase "νομική υπόθεση"@el)
SubClassOf(:LegalCase :Case)
Declaration(Class(:Legislature))
AnnotationAssertion(rdfs:label :Legislature "legislature"@en)
AnnotationAssertion(rdfs:label :Legislature "wetgevend orgaan"@nl)
AnnotationAssertion(rdfs:label :Legislature "νομοθετικό σώμα"@el)
AnnotationAssertion(rdfs:label :Legislature "pouvoir législatif"@fr)
SubClassOf(:Legislature :Organisation)
Declaration(Class(:Letter))
AnnotationAssertion(rdfs:label :Letter "文字"@ja)
AnnotationAssertion(rdfs:label :Letter "letter"@en)
AnnotationAssertion(rdfs:comment :Letter "une lettre de l'alphabet."@fr)
AnnotationAssertion(rdfs:label :Letter "lettre"@fr)
AnnotationAssertion(rdfs:label :Letter "letter"@nl)
AnnotationAssertion(rdfs:comment :Letter "A letter from the alphabet."@en)
AnnotationAssertion(rdfs:label :Letter "γράμμα"@el)
SubClassOf(:Letter owl:Thing)
Declaration(Class(:Library))
AnnotationAssertion(rdfs:label :Library "bibliotheek"@nl)
AnnotationAssertion(rdfs:label :Library "library"@en)
AnnotationAssertion(rdfs:label :Library "Bibliothek"@de)
AnnotationAssertion(rdfs:label :Library "βιβλιοθήκη"@el)
AnnotationAssertion(rdfs:label :Library "bibliothèque"@fr)
AnnotationAssertion(rdfs:label :Library "図書館"@ja)
AnnotationAssertion(rdfs:label :Library "Biblioteca"@es)
AnnotationAssertion(rdfs:label :Library "도서관"@ko)
EquivalentClasses(:Library <http://schema.org/Library>)
SubClassOf(:Library :Building)
SubClassOf(:Library :EducationalInstitution)
Declaration(Class(:Lieutenant))
AnnotationAssertion(rdfs:label :Lieutenant "υπολοχαγός"@el)
AnnotationAssertion(rdfs:label :Lieutenant "lieutenant"@fr)
AnnotationAssertion(rdfs:label :Lieutenant "tenente"@pt)
AnnotationAssertion(rdfs:label :Lieutenant "luitenant"@nl)
AnnotationAssertion(rdfs:label :Lieutenant "lieutenant"@en)
SubClassOf(:Lieutenant :Politician)
Declaration(Class(:Ligament))
AnnotationAssertion(rdfs:label :Ligament "ligamento"@pt)
AnnotationAssertion(rdfs:label :Ligament "band"@de)
AnnotationAssertion(rdfs:label :Ligament "ligament"@en)
AnnotationAssertion(rdfs:label :Ligament "bindweefsel"@nl)
AnnotationAssertion(rdfs:label :Ligament "σύνδεσμος"@el)
SubClassOf(:Ligament :AnatomicalStructure)
Declaration(Class(:LightNovel))
AnnotationAssertion(rdfs:label :LightNovel "ライトノベル"@ja)
AnnotationAssertion(rdfs:label :LightNovel "ανάλαφρο μυθιστόρημα"@el)
AnnotationAssertion(rdfs:comment :LightNovel "A style of Japanese novel"@en)
AnnotationAssertion(rdfs:label :LightNovel "light novel"@en)
SubClassOf(:LightNovel :Novel)
Declaration(Class(:Lighthouse))
AnnotationAssertion(rdfs:label :Lighthouse "vuurtoren"@nl)
AnnotationAssertion(rdfs:label :Lighthouse "Leuchtturm"@de)
AnnotationAssertion(rdfs:label :Lighthouse "lighthouse"@en)
AnnotationAssertion(rdfs:label :Lighthouse "灯台"@ja)
AnnotationAssertion(rdfs:label :Lighthouse "Φάρος"@el)
AnnotationAssertion(rdfs:label :Lighthouse "phare"@fr)
SubClassOf(:Lighthouse :Building)
Declaration(Class(:LineOfFashion))
AnnotationAssertion(rdfs:label :LineOfFashion "type de couture"@fr)
AnnotationAssertion(rdfs:comment :LineOfFashion "A coherent type of clothing or dressing following a particular fashion"@en)
AnnotationAssertion(rdfs:label :LineOfFashion "modelijn"@nl)
AnnotationAssertion(rdfs:comment :LineOfFashion "Een samenhangend geheel van kleding in een bepaalde stijl volgens een bepaalde mode."@nl)
AnnotationAssertion(rdfs:label :LineOfFashion "line of fashion"@en)
SubClassOf(:LineOfFashion :Work)
Declaration(Class(:List))
AnnotationAssertion(rdfs:label :List "lijst"@nl)
AnnotationAssertion(rdfs:label :List "一覧"@ja)
AnnotationAssertion(rdfs:label :List "liste"@fr)
AnnotationAssertion(rdfs:label :List "list"@en)
AnnotationAssertion(rdfs:comment :List "Μια γενική λίστα από αντικείμενα."@el)
AnnotationAssertion(rdfs:comment :List "Een geordende verzameling objecten."@nl)
AnnotationAssertion(rdfs:comment :List "A general list of items."@en)
AnnotationAssertion(rdfs:comment :List "une liste d'éléments."@fr)
AnnotationAssertion(rdfs:label :List "λίστα"@el)
EquivalentClasses(:List <http://www.w3.org/2004/02/skos/core#OrderedCollection>)
SubClassOf(:List owl:Thing)
Declaration(Class(:Listen))
AnnotationAssertion(rdfs:label :Listen "Listen"@en)
AnnotationAssertion(rdfs:label :Listen "ακούω"@el)
SubClassOf(:Listen owl:Thing)
Declaration(Class(:Locality))
AnnotationAssertion(rdfs:label :Locality "Locality"@en)
SubClassOf(:Locality :PopulatedPlace)
Declaration(Class(:Locomotive))
AnnotationAssertion(rdfs:label :Locomotive "κινητήριος"@el)
AnnotationAssertion(rdfs:label :Locomotive "locomotive"@en)
AnnotationAssertion(rdfs:label :Locomotive "locomotief"@nl)
AnnotationAssertion(rdfs:label :Locomotive "locomotive"@fr)
AnnotationAssertion(rdfs:label :Locomotive "Lokomotive"@de)
SubClassOf(:Locomotive :MeanOfTransportation)
SubClassOf(:Locomotive <http://schema.org/Product>)
Declaration(Class(:LunarCrater))
AnnotationAssertion(rdfs:label :LunarCrater "Σεληνιακός κρατήρας"@el)
AnnotationAssertion(rdfs:label :LunarCrater "maankrater"@nl)
AnnotationAssertion(rdfs:label :LunarCrater "cratère lunaire"@fr)
AnnotationAssertion(rdfs:label :LunarCrater "lunar crater"@en)
SubClassOf(:LunarCrater :NaturalPlace)
Declaration(Class(:Lymph))
AnnotationAssertion(rdfs:label :Lymph "λέμφος"@el)
AnnotationAssertion(rdfs:label :Lymph "リンパ"@ja)
AnnotationAssertion(rdfs:label :Lymph "lymph"@en)
AnnotationAssertion(rdfs:label :Lymph "lymphe"@fr)
SubClassOf(:Lymph :AnatomicalStructure)
Declaration(Class(:Magazine))
AnnotationAssertion(rdfs:label :Magazine "magazine"@fr)
AnnotationAssertion(rdfs:label :Magazine "雑誌"@ja)
AnnotationAssertion(rdfs:label :Magazine "Περιοδικό"@el)
AnnotationAssertion(rdfs:label :Magazine "잡지"@ko)
AnnotationAssertion(rdfs:label :Magazine "magazine"@en)
AnnotationAssertion(rdfs:comment :Magazine "Magazines, periodicals, glossies or serials are publications, generally published on a regular schedule, containing a variety of articles. They are generally financed by advertising, by a purchase price, by pre-paid magazine subscriptions, or all three."@en)
AnnotationAssertion(rdfs:comment :Magazine "Als Publikumszeitschrift (auch Magazin) bezeichnet man eine Gattung von Zeitschriften, die sich an eine sehr breite Zielgruppe wendet und keine fachlichen Prägungen oder andere spezifische Merkmale voraussetzt. Publikumszeitschriften dienen der Unterhaltung und Information, sie sollen unangestrengt gelesen werden können."@de)
AnnotationAssertion(rdfs:comment :Magazine "Περιοδικά ή γυαλιστερές φωτογραφίες περιοδικών εκδόσεων δημοσιεύονται σε τακτά χρονικά διαστήματα, περιέχει μια ποικιλία από αντικείμενα.Γενικά χρηματοδοτείται από διαφημίσεις, με τιμή αγοράς, με προπληρωμένες συνδρομές περιοδικών, ή και των τριών."@el)
AnnotationAssertion(rdfs:label :Magazine "Publikumszeitschrift"@de)
SubClassOf(:Magazine :PeriodicalLiterature)
Declaration(Class(:Mammal))
AnnotationAssertion(rdfs:label :Mammal "mammal"@en)
AnnotationAssertion(rdfs:label :Mammal "säugetier"@de)
AnnotationAssertion(rdfs:label :Mammal "mammifère"@fr)
AnnotationAssertion(rdfs:label :Mammal "θηλαστικό ζώο"@el)
AnnotationAssertion(rdfs:label :Mammal "mammifero"@it)
AnnotationAssertion(rdfs:label :Mammal "zoogdier"@nl)
AnnotationAssertion(rdfs:label :Mammal "mamífero"@pt)
AnnotationAssertion(rdfs:label :Mammal "哺乳類"@ja)
SubClassOf(:Mammal :Animal)
DisjointClasses(:Mammal :Fish)
Declaration(Class(:Manga))
AnnotationAssertion(rdfs:label :Manga "κινούμενα σχέδια"@el)
AnnotationAssertion(rdfs:comment :Manga "Manga are comics created in Japan"@en)
AnnotationAssertion(rdfs:label :Manga "manga"@en)
AnnotationAssertion(rdfs:label :Manga "日本の漫画"@ja)
AnnotationAssertion(rdfs:label :Manga "manga"@fr)
AnnotationAssertion(rdfs:label :Manga "manga"@it)
SubClassOf(:Manga :Comics)
Declaration(Class(:Manhua))
AnnotationAssertion(rdfs:label :Manhua "manhua"@el)
AnnotationAssertion(rdfs:comment :Manhua "Κόμικς που παράγονται αρχικά στην Κίνα"@el)
AnnotationAssertion(rdfs:comment :Manhua "Comics originally produced in China"@en)
AnnotationAssertion(rdfs:label :Manhua "manhua"@en)
SubClassOf(:Manhua :Comics)
Declaration(Class(:Manhwa))
AnnotationAssertion(rdfs:label :Manhwa "manhwa"@en)
AnnotationAssertion(rdfs:comment :Manhwa "Κορεάτικος όρος για τα κόμικς και τα κινούμενα σχέδια εκτύπωσης"@el)
AnnotationAssertion(rdfs:comment :Manhwa "Korean term for comics and print cartoons"@en)
AnnotationAssertion(rdfs:label :Manhwa "manhwa"@el)
SubClassOf(:Manhwa :Comics)
Declaration(Class(:MartialArtist))
AnnotationAssertion(rdfs:label :MartialArtist "Πολεμικός Καλλιτέχνης"@el)
AnnotationAssertion(rdfs:label :MartialArtist "martial artist"@en)
SubClassOf(:MartialArtist :Athlete)
Declaration(Class(:Mayor))
AnnotationAssertion(rdfs:label :Mayor "首長"@ja)
AnnotationAssertion(rdfs:label :Mayor "mayor"@en)
AnnotationAssertion(rdfs:label :Mayor "maire"@fr)
AnnotationAssertion(rdfs:label :Mayor "δήμαρχος"@el)
AnnotationAssertion(rdfs:label :Mayor "burgemeester"@nl)
AnnotationAssertion(rdfs:label :Mayor "Bürgermeister"@de)
SubClassOf(:Mayor :Politician)
Declaration(Class(:MeanOfTransportation))
AnnotationAssertion(rdfs:label :MeanOfTransportation "moyen de transport"@fr)
AnnotationAssertion(rdfs:label :MeanOfTransportation "μεταφορικό μέσο"@el)
AnnotationAssertion(rdfs:label :MeanOfTransportation "vervoermiddel"@nl)
AnnotationAssertion(rdfs:label :MeanOfTransportation "mean of transportation"@en)
SubClassOf(:MeanOfTransportation owl:Thing)
DisjointClasses(:MeanOfTransportation :Person)
Declaration(Class(:Medician))
AnnotationAssertion(rdfs:label :Medician "medico"@it)
AnnotationAssertion(rdfs:label :Medician "medician"@en)
SubClassOf(:Medician :Scientist)
Declaration(Class(:MemberOfParliament))
AnnotationAssertion(rdfs:label :MemberOfParliament "membro do parlamento"@pt)
AnnotationAssertion(rdfs:label :MemberOfParliament "Parlamentsmitglied"@de)
AnnotationAssertion(rdfs:label :MemberOfParliament "membre du Parlement"@fr)
AnnotationAssertion(rdfs:label :MemberOfParliament "parlementslid"@nl)
AnnotationAssertion(rdfs:label :MemberOfParliament "Μέλος κοινοβουλίου"@el)
AnnotationAssertion(rdfs:label :MemberOfParliament "member of parliament"@en)
SubClassOf(:MemberOfParliament :Politician)
Declaration(Class(:Memorial))
AnnotationAssertion(rdfs:comment :Memorial "A monument erected to commemorate an event and/or group"@en)
AnnotationAssertion(rdfs:label :Memorial "gedenkteken"@nl)
AnnotationAssertion(rdfs:label :Memorial "memorial"@en)
AnnotationAssertion(rdfs:label :Memorial "μνημείο"@el)
AnnotationAssertion(rdfs:label :Memorial "Denkmal"@de)
SubClassOf(:Memorial :Monument)
Declaration(Class(:MilitaryConflict))
AnnotationAssertion(rdfs:label :MilitaryConflict "στρατιωτική σύγκρουση"@el)
AnnotationAssertion(rdfs:label :MilitaryConflict "military conflict"@en)
AnnotationAssertion(rdfs:label :MilitaryConflict "conflit militaire"@fr)
SubClassOf(:MilitaryConflict :Event)
Declaration(Class(:MilitaryPerson))
AnnotationAssertion(rdfs:label :MilitaryPerson "militaire"@fr)
AnnotationAssertion(rdfs:label :MilitaryPerson "군인"@ko)
AnnotationAssertion(rdfs:label :MilitaryPerson "στρατιωτικός"@el)
AnnotationAssertion(rdfs:label :MilitaryPerson "military person"@en)
AnnotationAssertion(rdfs:label :MilitaryPerson "militair"@nl)
AnnotationAssertion(rdfs:label :MilitaryPerson "militare"@it)
SubClassOf(:MilitaryPerson :Person)
Declaration(Class(:MilitaryStructure))
AnnotationAssertion(rdfs:label :MilitaryStructure "military structure"@en)
AnnotationAssertion(rdfs:label :MilitaryStructure "Στρατιωτική Δομή"@el)
AnnotationAssertion(rdfs:comment :MilitaryStructure "A military structure such as a Castle, Fortress, Wall, Naval base etc."@en)
SubClassOf(:MilitaryStructure :Building)
Declaration(Class(:MilitaryUnit))
AnnotationAssertion(rdfs:label :MilitaryUnit "unidad militar"@es)
AnnotationAssertion(rdfs:label :MilitaryUnit "군대"@ko)
AnnotationAssertion(rdfs:label :MilitaryUnit "unidade militar"@pt)
AnnotationAssertion(rdfs:label :MilitaryUnit "unité militaire"@fr)
AnnotationAssertion(rdfs:label :MilitaryUnit "military unit"@en)
AnnotationAssertion(rdfs:label :MilitaryUnit "Στρατιωτική Μονάδα"@el)
SubClassOf(:MilitaryUnit :Organisation)
Declaration(Class(:Mill))
AnnotationAssertion(rdfs:label :Mill "Mill"@en)
AnnotationAssertion(rdfs:label :Mill "Moulin"@fr)
AnnotationAssertion(rdfs:label :Mill "Molen"@nl)
AnnotationAssertion(rdfs:label :Mill "Mühle"@de)
AnnotationAssertion(rdfs:label :Mill "mulino"@it)
AnnotationAssertion(rdfs:comment :Mill "a unit operation designed to break a solid material into smaller pieces"@en)
AnnotationAssertion(rdfs:label :Mill "Μύλος"@el)
SubClassOf(:Mill :Building)
Declaration(Class(:Mineral))
AnnotationAssertion(rdfs:label :Mineral "ορυκτό"@el)
AnnotationAssertion(rdfs:label :Mineral "mineral"@de)
AnnotationAssertion(rdfs:label :Mineral "mineraal"@nl)
AnnotationAssertion(rdfs:label :Mineral "minerale"@it)
AnnotationAssertion(rdfs:label :Mineral "minéral"@fr)
AnnotationAssertion(rdfs:label :Mineral "鉱物"@ja)
AnnotationAssertion(rdfs:label :Mineral "mineral"@en)
AnnotationAssertion(rdfs:comment :Mineral "Corpi naturali inorganici, in genere solidi."@it)
AnnotationAssertion(rdfs:comment :Mineral "A naturally occurring solid chemical substance."@en)
SubClassOf(:Mineral :ChemicalSubstance)
Declaration(Class(:MixedMartialArtsEvent))
AnnotationAssertion(rdfs:label :MixedMartialArtsEvent "mixed martial arts event"@en)
AnnotationAssertion(rdfs:label :MixedMartialArtsEvent "évènement d'arts martiaux mixtes"@fr)
SubClassOf(:MixedMartialArtsEvent :SportsEvent)
Declaration(Class(:MixedMartialArtsLeague))
AnnotationAssertion(rdfs:label :MixedMartialArtsLeague "mixed martial arts league"@en)
AnnotationAssertion(rdfs:label :MixedMartialArtsLeague "ligue d'arts martiaux mixtes"@fr)
AnnotationAssertion(rdfs:comment :MixedMartialArtsLeague "a group of sports teams that compete against each other in Mixed Martial Arts"@en)
SubClassOf(:MixedMartialArtsLeague :SportsLeague)
Declaration(Class(:Model))
AnnotationAssertion(rdfs:label :Model "model"@de)
AnnotationAssertion(rdfs:label :Model "model"@en)
AnnotationAssertion(rdfs:label :Model "モデル_(職業)"@ja)
AnnotationAssertion(rdfs:label :Model "mannequin"@fr)
AnnotationAssertion(rdfs:label :Model "(foto)model"@nl)
AnnotationAssertion(rdfs:label :Model "모델"@ko)
AnnotationAssertion(rdfs:label :Model "μοντέλο"@el)
SubClassOf(:Model :Person)
Declaration(Class(:Mollusca))
AnnotationAssertion(rdfs:label :Mollusca "mollusca"@en)
AnnotationAssertion(rdfs:label :Mollusca "軟体動物"@ja)
AnnotationAssertion(rdfs:label :Mollusca "mollusque"@fr)
AnnotationAssertion(rdfs:label :Mollusca "weekdier"@nl)
SubClassOf(:Mollusca :Animal)
Declaration(Class(:Monarch))
AnnotationAssertion(rdfs:label :Monarch "monarch"@nl)
AnnotationAssertion(rdfs:label :Monarch "monarque"@fr)
AnnotationAssertion(rdfs:label :Monarch "monarch"@en)
AnnotationAssertion(rdfs:label :Monarch "군주"@ko)
AnnotationAssertion(rdfs:label :Monarch "monarca"@it)
AnnotationAssertion(rdfs:label :Monarch "monarch"@de)
AnnotationAssertion(rdfs:label :Monarch "μονάρχης"@el)
SubClassOf(:Monarch :Person)
Declaration(Class(:Monastery))
AnnotationAssertion(rdfs:label :Monastery "μοναστήρι"@el)
AnnotationAssertion(rdfs:comment :Monastery "Monastery denotes the building, or complex of buildings, comprising the domestic quarters and workplace(s) of monastics, whether monks or nuns, and whether living in community or alone (hermits). The monastery generally includes a place reserved for prayer which may be a chapel, church or temple, and may also serve as an oratory. (http://en.wikipedia.org/wiki/Monastry)."@en)
AnnotationAssertion(rdfs:comment :Monastery "Μονή υποδηλώνει το κτίριο ή συγκρότημα κτιρίων, που αποτελείται από τις εγχώρια τρίμηνα και στο χώρο εργασίας (ες) των μοναχών, αν οι μοναχοί ή μοναχές, και αν ζουν στην κοινότητα ή μεμονωμένα (ερημίτες). Η μονή περιλαμβάνει γενικά ένα χώρο που προορίζεται για την προσευχή που μπορεί να είναι ένα παρεκκλήσι, εκκλησία ή ναό, και μπορεί επίσης να χρησιμεύσει ως μια ρητορική.
(http://en.wikipedia.org/wiki/Monastry)."@el)
AnnotationAssertion(rdfs:label :Monastery "Kloster"@de)
AnnotationAssertion(rdfs:label :Monastery "monastery"@en)
AnnotationAssertion(rdfs:label :Monastery "monastère"@fr)
AnnotationAssertion(rdfs:comment :Monastery "Een klooster (van het Latijnse claustrum, afgesloten ruimte) is een gebouw of een samenstel van gebouwen dat dient tot huisvesting van een groep of gemeenschap van mannen of vrouwen, vaak monniken of monialen genoemd, die zich uit de wereld heeft teruggetrokken om een godsdienstig leven te leiden. (http://nl.wikipedia.org/wiki/Klooster_%28gebouw%29)."@nl)
AnnotationAssertion(rdfs:comment :Monastery "Le monastère est un ensemble de bâtiments où habite une communauté religieuse de moines ou de moniales. (http://http://fr.wikipedia.org/wiki/Monast%C3%A8re)."@fr)
AnnotationAssertion(rdfs:label :Monastery "klooster"@nl)
SubClassOf(:Monastery :ReligiousBuilding)
Declaration(Class(:Monument))
AnnotationAssertion(rdfs:label :Monument "monument"@nl)
AnnotationAssertion(rdfs:label :Monument "Denkmal"@de)
AnnotationAssertion(rdfs:label :Monument "monument"@fr)
AnnotationAssertion(rdfs:comment :Monument "A type of structure (a statue or an art object) created to commemorate a person or important event, not necessarily of a catastrophic nature."@en)
AnnotationAssertion(rdfs:label :Monument "monument"@en)
AnnotationAssertion(rdfs:label :Monument "μνημείο"@el)
SubClassOf(:Monument :Place)
Declaration(Class(:Mosque))
AnnotationAssertion(rdfs:label :Mosque "mezquita"@es)
AnnotationAssertion(rdfs:comment :Mosque "A mosque, sometimes spelt mosk, is a place of worship for followers of Islam."@en)
AnnotationAssertion(rdfs:label :Mosque "mosk"@en)
AnnotationAssertion(rdfs:label :Mosque "mosquée"@fr)
AnnotationAssertion(rdfs:comment :Mosque "Une mosquée est un lieu de culte où se rassemblent les musulmans pour les prières communes."@fr)
SubClassOf(:Mosque :ReligiousBuilding)
Declaration(Class(:Moss))
AnnotationAssertion(rdfs:label :Moss "muschio"@it)
AnnotationAssertion(rdfs:label :Moss "蘚類"@ja)
AnnotationAssertion(rdfs:label :Moss "Laubmoss"@de)
AnnotationAssertion(rdfs:label :Moss "moss"@en)
AnnotationAssertion(rdfs:label :Moss "mousses"@fr)
AnnotationAssertion(rdfs:label :Moss "βρύο"@el)
SubClassOf(:Moss :Plant)
Declaration(Class(:MotorcycleRacingLeague))
AnnotationAssertion(rdfs:comment :MotorcycleRacingLeague "a group of sports teams or bikerider that compete against each other in Motorcycle Racing"@en)
AnnotationAssertion(rdfs:label :MotorcycleRacingLeague "motorcycle racing league"@en)
AnnotationAssertion(rdfs:label :MotorcycleRacingLeague "ligue de courses motocycliste"@fr)
SubClassOf(:MotorcycleRacingLeague :SportsLeague)
Declaration(Class(:MotorcycleRider))
AnnotationAssertion(rdfs:label :MotorcycleRider "μοτοσυκλετιστής"@el)
AnnotationAssertion(rdfs:label :MotorcycleRider "motorcycle rider"@en)
SubClassOf(:MotorcycleRider :Athlete)
Declaration(Class(:MotorsportSeason))
AnnotationAssertion(rdfs:label :MotorsportSeason "motorsport season"@en)
SubClassOf(:MotorsportSeason :SportsSeason)
Declaration(Class(:Mountain))
AnnotationAssertion(rdfs:label :Mountain "montagne"@fr)
AnnotationAssertion(rdfs:label :Mountain "산"@ko)
AnnotationAssertion(rdfs:label :Mountain "Βουνό"@el)
AnnotationAssertion(rdfs:label :Mountain "山"@ja)
AnnotationAssertion(rdfs:label :Mountain "montanha"@pt)
AnnotationAssertion(rdfs:label :Mountain "berg"@nl)
AnnotationAssertion(rdfs:label :Mountain "Berg"@de)
AnnotationAssertion(rdfs:label :Mountain "mountain"@en)
EquivalentClasses(:Mountain <http://schema.org/Mountain>)
SubClassOf(:Mountain :NaturalPlace)
SubClassOf(:Mountain :Place)
DisjointClasses(:Mountain :Person)
Declaration(Class(:MountainPass))
AnnotationAssertion(rdfs:label :MountainPass "mountain pass"@en)
AnnotationAssertion(rdfs:label :MountainPass "col de montagne"@fr)
AnnotationAssertion(rdfs:label :MountainPass "峠"@ja)
AnnotationAssertion(rdfs:label :MountainPass "bergpas"@nl)
AnnotationAssertion(rdfs:label :MountainPass "Πέρασμα βουνού"@el)
AnnotationAssertion(rdfs:comment :MountainPass "a path that allows the crossing of a mountain chain. It is usually a saddle point in between two areas of higher elevation"@en)
SubClassOf(:MountainPass :Place)
Declaration(Class(:MountainRange))
AnnotationAssertion(rdfs:label :MountainRange "Οροσειρά"@el)
AnnotationAssertion(rdfs:comment :MountainRange "a chain of mountains bordered by highlands or separated from other mountains by passes or valleys."@en)
AnnotationAssertion(rdfs:label :MountainRange "mountain range"@en)
AnnotationAssertion(rdfs:label :MountainRange "bergketen"@nl)
AnnotationAssertion(rdfs:label :MountainRange "chaîne de montagne"@fr)
SubClassOf(:MountainRange :NaturalPlace)
Declaration(Class(:MouseGene))
AnnotationAssertion(rdfs:label :MouseGene "MouseGene"@en)
AnnotationAssertion(rdfs:label :MouseGene "γονίδιο ποντικιού"@el)
AnnotationAssertion(rdfs:label :MouseGene "マウス遺伝子"@ja)
SubClassOf(:MouseGene :Gene)
Declaration(Class(:MouseGeneLocation))
AnnotationAssertion(rdfs:label :MouseGeneLocation "マウス遺伝子座"@ja)
AnnotationAssertion(rdfs:label :MouseGeneLocation "MouseGeneLocation"@en)
SubClassOf(:MouseGeneLocation :GeneLocation)
Declaration(Class(:MovieGenre))
AnnotationAssertion(rdfs:label :MovieGenre "movie genre"@en)
AnnotationAssertion(rdfs:label :MovieGenre "filmgenre"@nl)
AnnotationAssertion(rdfs:label :MovieGenre "Filmgenre"@de)
AnnotationAssertion(rdfs:label :MovieGenre "είδος ταινίας"@el)
SubClassOf(:MovieGenre :Genre)
Declaration(Class(:MultiVolumePublication))
AnnotationAssertion(rdfs:label :MultiVolumePublication "meerdelige publicatie"@nl)
AnnotationAssertion(rdfs:label :MultiVolumePublication "multi volume publication"@en)
SubClassOf(:MultiVolumePublication :WrittenWork)
Declaration(Class(:Municipality))
AnnotationAssertion(rdfs:label :Municipality "commune"@fr)
AnnotationAssertion(rdfs:comment :Municipality "An administrative body governing a territorial unity on the lower level, administering one or a few more settlements"@en)
AnnotationAssertion(rdfs:label :Municipality "municipality"@en)
AnnotationAssertion(rdfs:label :Municipality "Gemeinde"@de)
AnnotationAssertion(rdfs:label :Municipality "gemeente"@nl)
SubClassOf(:Municipality :GovernmentalAdministrativeRegion)
Declaration(Class(:Murderer))
AnnotationAssertion(rdfs:label :Murderer "δολοφόνος"@el)
AnnotationAssertion(rdfs:label :Murderer "murderer"@en)
AnnotationAssertion(rdfs:label :Murderer "assasino"@it)
AnnotationAssertion(rdfs:label :Murderer "assassin"@fr)
AnnotationAssertion(rdfs:label :Murderer "moordenaar"@nl)
AnnotationAssertion(rdfs:label :Murderer "Mörder"@de)
SubClassOf(:Murderer :Criminal)
Declaration(Class(:Muscle))
AnnotationAssertion(rdfs:label :Muscle "μυς"@el)
AnnotationAssertion(rdfs:label :Muscle "筋肉"@ja)
AnnotationAssertion(rdfs:label :Muscle "Muskel"@de)
AnnotationAssertion(rdfs:label :Muscle "spier"@nl)
AnnotationAssertion(rdfs:label :Muscle "muscle"@en)
AnnotationAssertion(rdfs:label :Muscle "muscle"@fr)
SubClassOf(:Muscle :AnatomicalStructure)
Declaration(Class(:Museum))
AnnotationAssertion(rdfs:label :Museum "μουσείο"@el)
AnnotationAssertion(rdfs:label :Museum "박물관"@ko)
AnnotationAssertion(rdfs:label :Museum "博物館"@ja)
AnnotationAssertion(rdfs:label :Museum "museum"@en)
AnnotationAssertion(rdfs:label :Museum "musée"@fr)
AnnotationAssertion(rdfs:label :Museum "museum"@nl)
EquivalentClasses(:Museum <http://schema.org/Museum>)
SubClassOf(:Museum :Building)
Declaration(Class(:MusicFestival))
AnnotationAssertion(rdfs:label :MusicFestival "music festival"@en)
AnnotationAssertion(rdfs:label :MusicFestival "muziekfestival"@nl)
AnnotationAssertion(rdfs:label :MusicFestival "festival de musique"@fr)
AnnotationAssertion(rdfs:label :MusicFestival "음악제"@ko)
AnnotationAssertion(rdfs:label :MusicFestival "φεστιβάλ μουσικής"@el)
AnnotationAssertion(rdfs:label :MusicFestival "festival de música"@es)
SubClassOf(:MusicFestival :Event)
SubClassOf(:MusicFestival <http://schema.org/Festival>)
Declaration(Class(:MusicGenre))
AnnotationAssertion(rdfs:label :MusicGenre "music genre"@en)
AnnotationAssertion(rdfs:label :MusicGenre "μουσικό είδος"@el)
AnnotationAssertion(rdfs:label :MusicGenre "musik genre"@de)
AnnotationAssertion(rdfs:label :MusicGenre "género musical"@pt)
AnnotationAssertion(rdfs:label :MusicGenre "genere musicale"@it)
AnnotationAssertion(rdfs:label :MusicGenre "genre musical"@fr)
AnnotationAssertion(rdfs:label :MusicGenre "genre (muziek)"@nl)
SubClassOf(:MusicGenre :Genre)
Declaration(Class(:Musical))
AnnotationAssertion(rdfs:label :Musical "musical"@en)
AnnotationAssertion(rdfs:label :Musical "Musical"@de)
AnnotationAssertion(rdfs:label :Musical "ミュージカル"@ja)
AnnotationAssertion(rdfs:label :Musical "musique"@fr)
AnnotationAssertion(rdfs:label :Musical "뮤지컬"@ko)
AnnotationAssertion(rdfs:label :Musical "μουσικός"@el)
AnnotationAssertion(rdfs:label :Musical "musical"@nl)
SubClassOf(:Musical :Work)
Declaration(Class(:MusicalArtist))
AnnotationAssertion(rdfs:label :MusicalArtist "μουσικός"@el)
AnnotationAssertion(rdfs:label :MusicalArtist "음악가"@ko)
AnnotationAssertion(rdfs:label :MusicalArtist "muziekartiest"@nl)
AnnotationAssertion(rdfs:label :MusicalArtist "artista musical"@pt)
AnnotationAssertion(rdfs:label :MusicalArtist "musicien"@fr)
AnnotationAssertion(rdfs:label :MusicalArtist "musical artist"@en)
SubClassOf(:MusicalArtist :Artist)
SubClassOf(:MusicalArtist <http://schema.org/MusicGroup>)
Declaration(Class(:MusicalWork))
AnnotationAssertion(rdfs:label :MusicalWork "œuvre musicale"@fr)
AnnotationAssertion(rdfs:label :MusicalWork "μουσικό έργο"@el)
AnnotationAssertion(rdfs:label :MusicalWork "musical work"@en)
AnnotationAssertion(rdfs:label :MusicalWork "opera musicale"@it)
AnnotationAssertion(rdfs:label :MusicalWork "musikalisches Werk"@de)
AnnotationAssertion(rdfs:label :MusicalWork "muziekwerk"@nl)
SubClassOf(:MusicalWork :Work)
Declaration(Class(:NCAATeamSeason))
AnnotationAssertion(rdfs:label :NCAATeamSeason "national collegiate athletic association team season"@en)
SubClassOf(:NCAATeamSeason :SportsTeamSeason)
Declaration(Class(:Name))
AnnotationAssertion(rdfs:label :Name "όνομα"@el)
AnnotationAssertion(rdfs:label :Name "name"@en)
AnnotationAssertion(rdfs:label :Name "nom"@fr)
AnnotationAssertion(rdfs:label :Name "名前"@ja)
AnnotationAssertion(rdfs:label :Name "naam"@nl)
AnnotationAssertion(rdfs:label :Name "nome"@pt)
AnnotationAssertion(rdfs:label :Name "Name"@de)
SubClassOf(:Name owl:Thing)
Declaration(Class(:NascarDriver))
AnnotationAssertion(rdfs:label :NascarDriver "nascar driver"@en)
AnnotationAssertion(rdfs:label :NascarDriver "pilote de la nascar"@fr)
SubClassOf(:NascarDriver :RacingDriver)
Declaration(Class(:NationalCollegiateAthleticAssociationAthlete))
AnnotationAssertion(rdfs:label :NationalCollegiateAthleticAssociationAthlete "athlète de la national collegiate athletic association"@fr)
AnnotationAssertion(rdfs:label :NationalCollegiateAthleticAssociationAthlete "national collegiate athletic association athlete"@en)
SubClassOf(:NationalCollegiateAthleticAssociationAthlete :Athlete)
Declaration(Class(:NationalFootballLeagueSeason))
AnnotationAssertion(rdfs:label :NationalFootballLeagueSeason "national football league season"@en)
SubClassOf(:NationalFootballLeagueSeason :FootballLeagueSeason)
Declaration(Class(:NationalSoccerClub))
AnnotationAssertion(rdfs:label :NationalSoccerClub "national soccer club"@en)
AnnotationAssertion(rdfs:label :NationalSoccerClub "milli takım"@tr)
SubClassOf(:NationalSoccerClub :SoccerClub)
Declaration(Class(:NaturalPlace))
AnnotationAssertion(rdfs:label :NaturalPlace "lieu naturel"@fr)
AnnotationAssertion(rdfs:comment :NaturalPlace "Der natürlicher Ort beinhaltet alle Orte die natürlicherweise im Universum existieren."@de)
AnnotationAssertion(rdfs:comment :NaturalPlace "The natural place encompasses all places occurring naturally in universe."@en)
AnnotationAssertion(rdfs:label :NaturalPlace "natural place"@en)
AnnotationAssertion(rdfs:label :NaturalPlace "natürlicher Ort"@de)
AnnotationAssertion(rdfs:label :NaturalPlace "natuurgebied"@nl)
SubClassOf(:NaturalPlace :Place)
Declaration(Class(:NaturalRegion))
AnnotationAssertion(rdfs:label :NaturalRegion "natural region"@en)
SubClassOf(:NaturalRegion :Region)
Declaration(Class(:Nerve))
AnnotationAssertion(rdfs:label :Nerve "νεύρο"@el)
AnnotationAssertion(rdfs:label :Nerve "zenuw"@nl)
AnnotationAssertion(rdfs:label :Nerve "nerve"@en)
AnnotationAssertion(rdfs:label :Nerve "Nerv"@de)
AnnotationAssertion(rdfs:label :Nerve "nerf"@fr)
SubClassOf(:Nerve :AnatomicalStructure)
Declaration(Class(:NetballPlayer))
AnnotationAssertion(rdfs:label :NetballPlayer "netball player"@en)
AnnotationAssertion(rdfs:label :NetballPlayer "giocatore di netball"@it)
SubClassOf(:NetballPlayer :Athlete)
Declaration(Class(:Newspaper))
AnnotationAssertion(rdfs:label :Newspaper "journal"@fr)
AnnotationAssertion(rdfs:label :Newspaper "newspaper"@en)
AnnotationAssertion(rdfs:comment :Newspaper "A newspaper is a regularly scheduled publication containing news of current events, informative articles, diverse features and advertising. It usually is printed on relatively inexpensive, low-grade paper such as newsprint."@en)
AnnotationAssertion(rdfs:comment :Newspaper "Eine Zeitung ist ein Druckwerk von mäßigem Seitenumfang, das in kurzen periodischen Zeitspannen, mindestens einmal wöchentlich, öffentlich erscheint. Die Zeitung ist, anders als die Zeitschrift, ein der Aktualität verpflichtetes Presseorgan und gliedert sich meist in mehrere inhaltliche Rubriken wie Politik, Lokales, Wirtschaft, Sport, Feuilleton und Immobilien."@de)
AnnotationAssertion(rdfs:label :Newspaper "新聞"@ja)
AnnotationAssertion(rdfs:label :Newspaper "Zeitung"@de)
AnnotationAssertion(rdfs:label :Newspaper "εφημερίδα"@el)
AnnotationAssertion(rdfs:label :Newspaper "신문"@ko)
AnnotationAssertion(rdfs:label :Newspaper "krant"@nl)
SubClassOf(:Newspaper :PeriodicalLiterature)
Declaration(Class(:Noble))
AnnotationAssertion(rdfs:label :Noble "ευγενής"@el)
AnnotationAssertion(rdfs:label :Noble "noble"@en)
SubClassOf(:Noble :Person)
Declaration(Class(:Non-ProfitOrganisation))
AnnotationAssertion(rdfs:label :Non-ProfitOrganisation "organisation à but non lucratif"@fr)
AnnotationAssertion(rdfs:label :Non-ProfitOrganisation "non-profit organisation"@en)
SubClassOf(:Non-ProfitOrganisation :Organisation)
Declaration(Class(:NoteworthyPartOfBuilding))
AnnotationAssertion(rdfs:label :NoteworthyPartOfBuilding "Opmerkelijk onderdeel van een bouwsel"@nl)
AnnotationAssertion(rdfs:comment :NoteworthyPartOfBuilding "A smaller detail about a building with a particular interest"@en)
AnnotationAssertion(rdfs:label :NoteworthyPartOfBuilding "Noteworthy part of a building (facade, chimney, etc.)"@en)
SubClassOf(:NoteworthyPartOfBuilding :ArchitecturalStructure)
Declaration(Class(:Novel))
AnnotationAssertion(rdfs:label :Novel "小説"@ja)
AnnotationAssertion(rdfs:comment :Novel "Le roman est un genre littéraire, caractérisé pour l'essentiel par une narration fictionnelle plus ou moins longue."@fr)
AnnotationAssertion(rdfs:comment :Novel "Ένα βιβλίο με μεγάλη αφήγηση σε λογοτεχνική πρόζα"@el)
AnnotationAssertion(rdfs:comment :Novel "A book of long narrative in literary prose"@en)
AnnotationAssertion(rdfs:label :Novel "novel"@en)
AnnotationAssertion(rdfs:label :Novel "novella"@it)
AnnotationAssertion(rdfs:label :Novel "roman"@nl)
AnnotationAssertion(rdfs:label :Novel "νουβέλα"@el)
AnnotationAssertion(rdfs:label :Novel "roman"@fr)
SubClassOf(:Novel :Book)
Declaration(Class(:OfficeHolder))
AnnotationAssertion(rdfs:label :OfficeHolder "공직자"@ko)
AnnotationAssertion(rdfs:label :OfficeHolder "κάτοχος δημόσιου αξιώματος"@el)
AnnotationAssertion(rdfs:label :OfficeHolder "office holder"@en)
AnnotationAssertion(rdfs:label :OfficeHolder "Amtsinhaber"@de)
AnnotationAssertion(rdfs:label :OfficeHolder "titulaire"@fr)
AnnotationAssertion(rdfs:label :OfficeHolder "ambtsdrager"@nl)
SubClassOf(:OfficeHolder :Person)
Declaration(Class(:OldTerritory))
AnnotationAssertion(rdfs:label :OldTerritory "old territory"@en)
SubClassOf(:OldTerritory :Territory)
Declaration(Class(:OlympicEvent))
AnnotationAssertion(rdfs:label :OlympicEvent "ολυμπικακό γεγονός"@el)
AnnotationAssertion(rdfs:label :OlympicEvent "olympic event"@en)
SubClassOf(:OlympicEvent :Olympics)
Declaration(Class(:OlympicResult))
AnnotationAssertion(rdfs:label :OlympicResult "αποτελέσματα Ολυμπιακών αγώνων"@el)
AnnotationAssertion(rdfs:label :OlympicResult "resultados de Juegos Olímpicos"@es)
AnnotationAssertion(rdfs:label :OlympicResult "olympic result"@en)
AnnotationAssertion(rdfs:label :OlympicResult "résultat de Jeux Olympiques"@fr)
SubClassOf(:OlympicResult :SportCompetitionResult)
Declaration(Class(:Olympics))
AnnotationAssertion(rdfs:label :Olympics "近代オリンピック"@ja)
AnnotationAssertion(rdfs:label :Olympics "ολυμπιακοί αγώνες"@el)
AnnotationAssertion(rdfs:label :Olympics "올림픽"@ko)
AnnotationAssertion(rdfs:label :Olympics "Jeux Olympiques"@fr)
AnnotationAssertion(rdfs:label :Olympics "olympics"@en)
AnnotationAssertion(rdfs:label :Olympics "Juegos Olímpicos"@es)
SubClassOf(:Olympics :SportsEvent)
Declaration(Class(:Openswarm))
AnnotationAssertion(rdfs:label :Openswarm "Open Swarm"@en)
AnnotationAssertion(rdfs:label :Openswarm "Ανοικτό σμήνος"@el)
SubClassOf(:Openswarm :Swarm)
Declaration(Class(:Opera))
AnnotationAssertion(rdfs:label :Opera "opera"@en)
AnnotationAssertion(rdfs:label :Opera "opera"@nl)
AnnotationAssertion(rdfs:label :Opera "オペラ"@ja)
AnnotationAssertion(rdfs:label :Opera "όpera"@es)
AnnotationAssertion(rdfs:label :Opera "opéra"@fr)
AnnotationAssertion(rdfs:label :Opera "opera"@it)
AnnotationAssertion(rdfs:label :Opera "oper"@de)
AnnotationAssertion(rdfs:label :Opera "όπερα"@el)
SubClassOf(:Opera :MusicalWork)
Declaration(Class(:Organisation))
AnnotationAssertion(rdfs:label :Organisation "Organisation"@de)
AnnotationAssertion(rdfs:label :Organisation "組織"@ja)
AnnotationAssertion(rdfs:label :Organisation "organização"@pt)
AnnotationAssertion(rdfs:label :Organisation "οργάνωση"@el)
AnnotationAssertion(rdfs:label :Organisation "organisation"@en)
AnnotationAssertion(rdfs:label :Organisation "조직"@ko)
AnnotationAssertion(rdfs:label :Organisation "organizacija"@sl)
AnnotationAssertion(rdfs:label :Organisation "organisatie"@nl)
AnnotationAssertion(rdfs:label :Organisation "organisation"@fr)
EquivalentClasses(:Organisation <http://schema.org/Organization>)
SubClassOf(:Organisation :Agent)
DisjointClasses(:Organisation <http://dbpedia.org/ontology/wgs84_pos:SpatialThing>)
Declaration(Class(:OrganisationMember))
AnnotationAssertion(rdfs:label :OrganisationMember "Μέλος οργανισμού"@el)
AnnotationAssertion(rdfs:comment :OrganisationMember "A member of an organisation."@en)
AnnotationAssertion(rdfs:comment :OrganisationMember "Μέλος ενός οργανισμού."@el)
AnnotationAssertion(rdfs:label :OrganisationMember "Organisation member"@en)
SubClassOf(:OrganisationMember :Person)
Declaration(Class(:OverseasDepartment))
AnnotationAssertion(rdfs:label :OverseasDepartment "overseas department"@en)
SubClassOf(:OverseasDepartment :Department)
Declaration(Class(:PaintballLeague))
AnnotationAssertion(rdfs:comment :PaintballLeague "ένα γκρουπ αθλητικών ομάδων που ανταγωνίζονται στο paintball"@el)
AnnotationAssertion(rdfs:label :PaintballLeague "ligue de paintball"@fr)
AnnotationAssertion(rdfs:label :PaintballLeague "paintball league"@en)
AnnotationAssertion(rdfs:comment :PaintballLeague "a group of sports teams that compete against each other in Paintball"@en)
AnnotationAssertion(rdfs:label :PaintballLeague "κύπελλο paintball"@el)
SubClassOf(:PaintballLeague :SportsLeague)
Declaration(Class(:Painter))
AnnotationAssertion(rdfs:label :Painter "peintre"@fr)
AnnotationAssertion(rdfs:label :Painter "Maler"@de)
AnnotationAssertion(rdfs:label :Painter "schilder"@nl)
AnnotationAssertion(rdfs:label :Painter "painter"@en)
SubClassOf(:Painter :Artist)
Declaration(Class(:Painting))
AnnotationAssertion(rdfs:label :Painting "Painting"@en)
AnnotationAssertion(rdfs:label :Painting "schilderij"@nl)
AnnotationAssertion(rdfs:label :Painting "peinture"@fr)
AnnotationAssertion(rdfs:label :Painting "obraz"@pl)
AnnotationAssertion(rdfs:label :Painting "絵画"@ja)
AnnotationAssertion(rdfs:label :Painting "Gemälde"@de)
AnnotationAssertion(rdfs:comment :Painting "Describes a painting to assign picture entries in wikipedia to artists."@en)
AnnotationAssertion(rdfs:label :Painting "Έργο Ζωγραφικής"@el)
EquivalentClasses(:Painting <http://schema.org/Painting>)
SubClassOf(:Painting :Artwork)
Declaration(Class(:Parish))
AnnotationAssertion(rdfs:label :Parish "parish"@en)
AnnotationAssertion(rdfs:label :Parish "parochie"@nl)
AnnotationAssertion(rdfs:label :Parish "paroisse"@fr)
AnnotationAssertion(rdfs:comment :Parish "The smallest unit of a clerical administrative body"@en)
SubClassOf(:Parish :ClericalAdministrativeRegion)
Declaration(Class(:Park))
AnnotationAssertion(rdfs:label :Park "公園"@ja)
AnnotationAssertion(rdfs:label :Park "parc"@fr)
AnnotationAssertion(rdfs:label :Park "공원"@ko)
AnnotationAssertion(rdfs:label :Park "πάρκο"@el)
AnnotationAssertion(rdfs:label :Park "park"@nl)
AnnotationAssertion(rdfs:label :Park "parque"@pt)
AnnotationAssertion(rdfs:label :Park "park"@en)
AnnotationAssertion(rdfs:label :Park "Park"@de)
EquivalentClasses(:Park <http://schema.org/Park>)
SubClassOf(:Park :ArchitecturalStructure)
Declaration(Class(:PenaltyShootOut))
AnnotationAssertion(rdfs:label :PenaltyShootOut "penalty shoot-out"@en)
SubClassOf(:PenaltyShootOut owl:Thing)
Declaration(Class(:PeriodOfArtisticStyle))
AnnotationAssertion(rdfs:label :PeriodOfArtisticStyle "stijlperiode"@nl)
AnnotationAssertion(rdfs:label :PeriodOfArtisticStyle "period of artistic style"@en)
SubClassOf(:PeriodOfArtisticStyle :TimePeriod)
DisjointClasses(:PeriodOfArtisticStyle :Person)
Declaration(Class(:PeriodicalLiterature))
AnnotationAssertion(rdfs:label :PeriodicalLiterature "Periodikum"@de)
AnnotationAssertion(rdfs:comment :PeriodicalLiterature "Periodical literature (also called a periodical publication or simply a periodical) is a published work that appears in a new edition on a regular schedule. The most familiar examples are the newspaper, often published daily, or weekly; or the magazine, typically published weekly, monthly or as a quarterly. Other examples would be a newsletter, a literary journal or learned journal, or a yearbook."@en)
AnnotationAssertion(rdfs:label :PeriodicalLiterature "periodical literature"@en)
AnnotationAssertion(rdfs:comment :PeriodicalLiterature "Unter Periodikum wird im Bibliothekswesen im Gegensatz zu Monografien ein (in der Regel) regelmäßig erscheinendes Druckwerk bezeichnet. Es handelt sich um den Fachbegriff für Heftreihen, Gazetten, Journale, Magazine, Zeitschriften und Zeitungen."@de)
AnnotationAssertion(rdfs:label :PeriodicalLiterature "publication périodique"@fr)
AnnotationAssertion(rdfs:comment :PeriodicalLiterature "Une publication périodique est un titre de presse qui paraît régulièrement."@fr)
SubClassOf(:PeriodicalLiterature :WrittenWork)
Declaration(Class(:Person))
AnnotationAssertion(rdfs:label :Person "personne"@fr)
AnnotationAssertion(rdfs:label :Person "شخص"@ar)
AnnotationAssertion(rdfs:label :Person "pessoa"@pt)
AnnotationAssertion(rdfs:label :Person "person"@en)
AnnotationAssertion(rdfs:label :Person "persona"@es)
AnnotationAssertion(rdfs:label :Person "Oseba"@sl)
AnnotationAssertion(rdfs:label :Person "Πληροφορίες προσώπου"@el)
AnnotationAssertion(rdfs:label :Person "persoon"@nl)
AnnotationAssertion(rdfs:label :Person "人_(法律)"@ja)
AnnotationAssertion(rdfs:label :Person "Person"@de)
AnnotationAssertion(rdfs:label :Person "persona"@it)
EquivalentClasses(:Person <http://schema.org/Person>)
EquivalentClasses(:Person <http://xmlns.com/foaf/0.1/Person>)
SubClassOf(:Person :Agent)
DisjointClasses(:Person :Activity)
DisjointClasses(:Person :Building)
DisjointClasses(:Person :Event)
DisjointClasses(:Person :GeologicalPeriod)
DisjointClasses(:Person :HistoricalPeriod)
DisjointClasses(:Person :MeanOfTransportation)
DisjointClasses(:Person :Mountain)
DisjointClasses(:Person :PeriodOfArtisticStyle)
DisjointClasses(:Person :Plant)
DisjointClasses(:Person :ProtohistoricalPeriod)
DisjointClasses(:Person :TimePeriod)
DisjointClasses(:Person :UnitOfWork)
Declaration(Class(:PersonFunction))
AnnotationAssertion(rdfs:label :PersonFunction "fonction de personne"@fr)
AnnotationAssertion(rdfs:label :PersonFunction "person function"@en)
AnnotationAssertion(rdfs:label :PersonFunction "functie van persoon"@nl)
SubClassOf(:PersonFunction owl:Thing)
Declaration(Class(:Philosopher))
AnnotationAssertion(rdfs:label :Philosopher "哲学者"@ja)
AnnotationAssertion(rdfs:label :Philosopher "철학자"@ko)
AnnotationAssertion(rdfs:label :Philosopher "filosoof"@nl)
AnnotationAssertion(rdfs:label :Philosopher "Philosoph"@de)
AnnotationAssertion(rdfs:label :Philosopher "philosophe"@fr)
AnnotationAssertion(rdfs:label :Philosopher "φιλόσοφος"@el)
AnnotationAssertion(rdfs:label :Philosopher "philosopher"@en)
SubClassOf(:Philosopher :Person)
Declaration(Class(:Place))
AnnotationAssertion(rdfs:label :Place "Ort"@de)
AnnotationAssertion(rdfs:label :Place "lugar"@es)
AnnotationAssertion(rdfs:label :Place "立地"@ja)
AnnotationAssertion(rdfs:label :Place "place"@en)
AnnotationAssertion(rdfs:label :Place "περιοχή"@el)
AnnotationAssertion(rdfs:comment :Place "uma localização"@pt)
AnnotationAssertion(rdfs:label :Place "lugar"@pt)
AnnotationAssertion(rdfs:label :Place "مكان"@ar)
AnnotationAssertion(rdfs:label :Place "plaats"@nl)
AnnotationAssertion(rdfs:comment :Place "Immobile things or locations."@en)
AnnotationAssertion(rdfs:label :Place "lieu"@fr)
AnnotationAssertion(rdfs:label :Place "lekua"@eu)
EquivalentClasses(:Place <http://schema.org/Place>)
SubClassOf(:Place owl:Thing)
Declaration(Class(:Planet))
AnnotationAssertion(rdfs:label :Planet "Πλανήτης"@el)
AnnotationAssertion(rdfs:label :Planet "pláinéad"@ga)
AnnotationAssertion(rdfs:label :Planet "planeta"@ca)
AnnotationAssertion(rdfs:label :Planet "planeta"@es)
AnnotationAssertion(rdfs:label :Planet "planète"@fr)
AnnotationAssertion(rdfs:label :Planet "惑星"@ja)
AnnotationAssertion(rdfs:label :Planet "planet"@sl)
AnnotationAssertion(rdfs:label :Planet "planeta"@pl)
AnnotationAssertion(rdfs:label :Planet "Planeta"@pt)
AnnotationAssertion(rdfs:label :Planet "planeet"@nl)
AnnotationAssertion(rdfs:label :Planet "Planet"@de)
AnnotationAssertion(rdfs:label :Planet "planet"@en)
SubClassOf(:Planet :CelestialBody)
Declaration(Class(:Plant))
AnnotationAssertion(rdfs:label :Plant "植物"@ja)
AnnotationAssertion(rdfs:label :Plant "pianta"@it)
AnnotationAssertion(rdfs:label :Plant "plant"@nl)
AnnotationAssertion(rdfs:label :Plant "plante"@fr)
AnnotationAssertion(rdfs:label :Plant "φυτό"@el)
AnnotationAssertion(rdfs:label :Plant "plant"@en)
AnnotationAssertion(rdfs:label :Plant "pflanze"@de)
SubClassOf(:Plant :Eukaryote)
DisjointClasses(:Plant :Person)
Declaration(Class(:Play))
AnnotationAssertion(rdfs:label :Play "toneelstuk"@nl)
AnnotationAssertion(rdfs:comment :Play "A play is a form of literature written by a playwright, usually consisting of scripted dialogue between characters, intended for theatrical performance rather than just reading."@en)
AnnotationAssertion(rdfs:comment :Play "Ένα παιχνίδι είναι μια μορφή της λογοτεχνίας, γραμμένο από έναν συγγραφέα, που συνήθως αποτελείται από σενάριο του διαλόγου μεταξύ των χαρακτήρων, που προορίζεται για την θεατρική παράσταση και όχι μόνο ανάγνωση."@el)
AnnotationAssertion(rdfs:label :Play "obra de teatro"@es)
AnnotationAssertion(rdfs:label :Play "戯曲"@ja)
AnnotationAssertion(rdfs:label :Play "Theaterstück"@de)
AnnotationAssertion(rdfs:label :Play "παιχνίδι"@el)
AnnotationAssertion(rdfs:label :Play "play"@en)
AnnotationAssertion(rdfs:label :Play "pièce de théâtre"@fr)
SubClassOf(:Play :WrittenWork)
Declaration(Class(:PlayboyPlaymate))
AnnotationAssertion(rdfs:label :PlayboyPlaymate "playboy playmate"@el)
AnnotationAssertion(rdfs:label :PlayboyPlaymate "Playboy Playmate"@en)
AnnotationAssertion(rdfs:label :PlayboyPlaymate "playmate pour Playboy"@fr)
SubClassOf(:PlayboyPlaymate :Person)
Declaration(Class(:PokerPlayer))
AnnotationAssertion(rdfs:label :PokerPlayer "poker player"@en)
AnnotationAssertion(rdfs:label :PokerPlayer "Pokerspieler"@de)
AnnotationAssertion(rdfs:label :PokerPlayer "pokerspeler"@nl)
AnnotationAssertion(rdfs:label :PokerPlayer "παίχτης του πόκερ"@el)
AnnotationAssertion(rdfs:label :PokerPlayer "joueur de poker"@fr)
SubClassOf(:PokerPlayer :Athlete)
Declaration(Class(:PolishKing))
AnnotationAssertion(rdfs:label :PolishKing "król Polski"@pl)
AnnotationAssertion(rdfs:label :PolishKing "koning van Polen"@nl)
AnnotationAssertion(rdfs:label :PolishKing "king of Poland"@en)
SubClassOf(:PolishKing :Royalty)
Declaration(Class(:PoliticalParty))
AnnotationAssertion(rdfs:label :PoliticalParty "politische Partei"@de)
AnnotationAssertion(rdfs:label :PoliticalParty "partido político"@pt)
AnnotationAssertion(rdfs:label :PoliticalParty "political party"@en)
AnnotationAssertion(rdfs:label :PoliticalParty "partia polityczna"@pl)
AnnotationAssertion(rdfs:label :PoliticalParty "partit polític"@ca)
AnnotationAssertion(rdfs:label :PoliticalParty "parti politique"@fr)
AnnotationAssertion(rdfs:comment :PoliticalParty "για παράδειγμα: Δημοκρατικό Κόμμα _United_States)"@el)
AnnotationAssertion(rdfs:comment :PoliticalParty "for example: Democratic_Party_(United_States)"@en)
AnnotationAssertion(rdfs:label :PoliticalParty "πολιτικό κόμμα"@el)
SubClassOf(:PoliticalParty :Organisation)
Declaration(Class(:Politician))
AnnotationAssertion(rdfs:label :Politician "politicus"@nl)
AnnotationAssertion(rdfs:label :Politician "politicien"@fr)
AnnotationAssertion(rdfs:label :Politician "Politiker"@de)
AnnotationAssertion(rdfs:label :Politician "政治家"@ja)
AnnotationAssertion(rdfs:label :Politician "politician"@en)
AnnotationAssertion(rdfs:label :Politician "πολιτικός"@el)
AnnotationAssertion(rdfs:label :Politician "político"@pt)
AnnotationAssertion(rdfs:label :Politician "politik"@sl)
SubClassOf(:Politician :Person)
Declaration(Class(:PoloLeague))
AnnotationAssertion(rdfs:comment :PoloLeague "A group of sports teams that compete against each other in Polo."@en)
AnnotationAssertion(rdfs:label :PoloLeague "polo league"@en)
AnnotationAssertion(rdfs:label :PoloLeague "Ομοσπονδία Υδατοσφαίρισης"@el)
AnnotationAssertion(rdfs:label :PoloLeague "ligue de polo"@fr)
SubClassOf(:PoloLeague :SportsLeague)
Declaration(Class(:Polyhedron))
AnnotationAssertion(rdfs:label :Polyhedron "Polyeder"@de)
AnnotationAssertion(rdfs:label :Polyhedron "Polyhedron"@en)
AnnotationAssertion(rdfs:label :Polyhedron "πολύεδρο"@el)
AnnotationAssertion(rdfs:label :Polyhedron "poliedro"@it)
SubClassOf(:Polyhedron owl:Thing)
Declaration(Class(:Pope))
AnnotationAssertion(rdfs:label :Pope "πάπας"@el)
AnnotationAssertion(rdfs:label :Pope "paus"@nl)
AnnotationAssertion(rdfs:label :Pope "教皇"@ja)
AnnotationAssertion(rdfs:label :Pope "papież"@pl)
AnnotationAssertion(rdfs:label :Pope "Papst"@de)
AnnotationAssertion(rdfs:label :Pope "pape"@fr)
AnnotationAssertion(rdfs:label :Pope "pope"@en)
AnnotationAssertion(rdfs:label :Pope "교황"@ko)
SubClassOf(:Pope :Cleric)
Declaration(Class(:PopulatedPlace))
AnnotationAssertion(rdfs:label :PopulatedPlace "bewohnter Ort"@de)
AnnotationAssertion(rdfs:label :PopulatedPlace "lieu habité"@fr)
AnnotationAssertion(rdfs:label :PopulatedPlace "populated place"@en)
AnnotationAssertion(rdfs:label :PopulatedPlace "bebouwde omgeving"@nl)
SubClassOf(:PopulatedPlace :Place)
Declaration(Class(:Pornstar))
AnnotationAssertion(rdfs:comment :Pornstar "A pornographic actor or actress or a porn star is a person who performs sex acts in film, normally characterised as a pornographic film.."@en)
AnnotationAssertion(rdfs:label :Pornstar "acteur porno"@fr)
AnnotationAssertion(rdfs:label :Pornstar "attore porno"@it)
AnnotationAssertion(rdfs:label :Pornstar "pornstar"@en)
SubClassOf(:Pornstar :Actor)
Declaration(Class(:PowerStation))
AnnotationAssertion(rdfs:label :PowerStation "centrale électrique"@fr)
AnnotationAssertion(rdfs:label :PowerStation "central eléctrica"@es)
AnnotationAssertion(rdfs:label :PowerStation "power station"@en)
AnnotationAssertion(rdfs:label :PowerStation "発電所"@ja)
SubClassOf(:PowerStation :Infrastructure)
Declaration(Class(:Prefecture))
AnnotationAssertion(rdfs:label :Prefecture "prefecture"@en)
SubClassOf(:Prefecture :PopulatedPlace)
Declaration(Class(:PrehistoricalPeriod))
AnnotationAssertion(rdfs:label :PrehistoricalPeriod "periode in de prehistorie"@nl)
AnnotationAssertion(rdfs:label :PrehistoricalPeriod "prehistorical period"@en)
SubClassOf(:PrehistoricalPeriod :TimePeriod)
DisjointClasses(:PrehistoricalPeriod :HistoricalPeriod)
Declaration(Class(:Presenter))
AnnotationAssertion(rdfs:comment :Presenter "TV or radio show presenter"@en)
AnnotationAssertion(rdfs:label :Presenter "Παρουσιαστής"@el)
AnnotationAssertion(rdfs:label :Presenter "presenter"@en)
AnnotationAssertion(rdfs:label :Presenter "presentator"@nl)
SubClassOf(:Presenter :Person)
Declaration(Class(:President))
AnnotationAssertion(rdfs:label :President "국가원수"@ko)
AnnotationAssertion(rdfs:label :President "prezydent"@pl)
AnnotationAssertion(rdfs:label :President "Präsident"@de)
AnnotationAssertion(rdfs:label :President "πρόεδρος"@el)
AnnotationAssertion(rdfs:label :President "président"@fr)
AnnotationAssertion(rdfs:label :President "大統領"@ja)
AnnotationAssertion(rdfs:label :President "president"@en)
SubClassOf(:President :Politician)
Declaration(Class(:Priest))
AnnotationAssertion(rdfs:label :Priest "prêtre"@fr)
AnnotationAssertion(rdfs:label :Priest "priester"@de)
AnnotationAssertion(rdfs:label :Priest "priester"@nl)
AnnotationAssertion(rdfs:label :Priest "司祭"@ja)
AnnotationAssertion(rdfs:label :Priest "παπάς"@el)
AnnotationAssertion(rdfs:label :Priest "priest"@en)
AnnotationAssertion(rdfs:label :Priest "prete"@it)
SubClassOf(:Priest :Cleric)
Declaration(Class(:PrimeMinister))
AnnotationAssertion(rdfs:label :PrimeMinister "eerste minister"@nl)
AnnotationAssertion(rdfs:label :PrimeMinister "prime minister"@en)
AnnotationAssertion(rdfs:label :PrimeMinister "πρωθυπουργός"@el)
AnnotationAssertion(rdfs:label :PrimeMinister "premier ministre"@fr)
AnnotationAssertion(rdfs:label :PrimeMinister "Premierminister"@de)
SubClassOf(:PrimeMinister :Politician)
Declaration(Class(:Prison))
AnnotationAssertion(rdfs:label :Prison "φυλακή"@el)
AnnotationAssertion(rdfs:label :Prison "prigione"@it)
AnnotationAssertion(rdfs:label :Prison "gevangenis"@nl)
AnnotationAssertion(rdfs:label :Prison "prison"@en)
AnnotationAssertion(rdfs:label :Prison "gefängnis"@de)
AnnotationAssertion(rdfs:label :Prison "prison"@fr)
SubClassOf(:Prison :Building)
Declaration(Class(:Professor))
AnnotationAssertion(rdfs:label :Professor "professor"@en)
AnnotationAssertion(rdfs:label :Professor "professeur"@fr)
AnnotationAssertion(rdfs:label :Professor "professor"@nl)
AnnotationAssertion(rdfs:label :Professor "Professor"@de)
SubClassOf(:Professor :Scientist)
Declaration(Class(:ProgrammingLanguage))
AnnotationAssertion(rdfs:label :ProgrammingLanguage "programmeertaal"@nl)
AnnotationAssertion(rdfs:label :ProgrammingLanguage "programming language"@en)
AnnotationAssertion(rdfs:label :ProgrammingLanguage "langage de programmation"@fr)
AnnotationAssertion(rdfs:label :ProgrammingLanguage "Programmiersprache"@de)
AnnotationAssertion(rdfs:label :ProgrammingLanguage "linguagem de programação"@pt)
SubClassOf(:ProgrammingLanguage :Software)
Declaration(Class(:Project))
AnnotationAssertion(rdfs:comment :Project "Ein Projekt ist ein zeitlich begrenztes Unternehmen, das unternommen wird, um definierte Ziele zu erreichen."@de)
AnnotationAssertion(rdfs:label :Project "project"@en)
AnnotationAssertion(rdfs:label :Project "projet"@fr)
AnnotationAssertion(rdfs:label :Project "プロジェクト"@ja)
AnnotationAssertion(rdfs:label :Project "Projekt"@de)
AnnotationAssertion(rdfs:label :Project "proyecto"@es)
AnnotationAssertion(rdfs:comment :Project "A project is a temporary endeavor undertaken to achieve defined objectives."@en)
AnnotationAssertion(rdfs:label :Project "σχέδιο"@el)
SubClassOf(:Project :UnitOfWork)
Declaration(Class(:ProtectedArea))
AnnotationAssertion(rdfs:comment :ProtectedArea "Deze klasse wordt niet alleen gebruikt voor beschermde natuur, maar ook voor beschermde stadsgezichten en hofjes"@nl)
AnnotationAssertion(rdfs:comment :ProtectedArea "This class is not just used for protected nature, but also for protected city views and enclosed neighbourhoods"@en)
AnnotationAssertion(rdfs:label :ProtectedArea "保護地区"@ja)
AnnotationAssertion(rdfs:label :ProtectedArea "προστατευμένη περιοχή"@el)
AnnotationAssertion(rdfs:label :ProtectedArea "aire protégée"@fr)
AnnotationAssertion(rdfs:label :ProtectedArea "beschermd gebied"@nl)
AnnotationAssertion(rdfs:label :ProtectedArea "protected area"@en)
SubClassOf(:ProtectedArea :Place)
Declaration(Class(:Protein))
AnnotationAssertion(rdfs:label :Protein "proteína"@pt)
AnnotationAssertion(rdfs:label :Protein "protein"@de)
AnnotationAssertion(rdfs:label :Protein "proteina"@it)
AnnotationAssertion(rdfs:label :Protein "protéine"@fr)
AnnotationAssertion(rdfs:label :Protein "タンパク質"@ja)
AnnotationAssertion(rdfs:label :Protein "단백질"@ko)
AnnotationAssertion(rdfs:label :Protein "protein"@en)
AnnotationAssertion(rdfs:label :Protein "πρωτεΐνη"@el)
AnnotationAssertion(rdfs:label :Protein "proteïne"@nl)
SubClassOf(:Protein :Biomolecule)
Declaration(Class(:ProtohistoricalPeriod))
AnnotationAssertion(rdfs:label :ProtohistoricalPeriod "protohistorical period"@en)
AnnotationAssertion(rdfs:label :ProtohistoricalPeriod "periode in de protohistorie"@nl)
SubClassOf(:ProtohistoricalPeriod :TimePeriod)
DisjointClasses(:ProtohistoricalPeriod :Person)
Declaration(Class(:Province))
AnnotationAssertion(rdfs:label :Province "province"@en)
AnnotationAssertion(rdfs:comment :Province "An administrative body governing a territorial unity on the intermediate level, between local and national level"@en)
AnnotationAssertion(rdfs:label :Province "province"@fr)
AnnotationAssertion(rdfs:label :Province "provincie"@nl)
SubClassOf(:Province :GovernmentalAdministrativeRegion)
Declaration(Class(:PublicService))
AnnotationAssertion(rdfs:label :PublicService "public service"@en)
SubClassOf(:PublicService owl:Thing)
Declaration(Class(:PublicServiceInput))
AnnotationAssertion(rdfs:label :PublicServiceInput "public service input"@en)
SubClassOf(:PublicServiceInput :PublicService)
Declaration(Class(:PublicServiceOutput))
AnnotationAssertion(rdfs:label :PublicServiceOutput "public service output"@en)
SubClassOf(:PublicServiceOutput :PublicService)
Declaration(Class(:PublicTransitSystem))
AnnotationAssertion(rdfs:label :PublicTransitSystem "Öffentliches Personenverkehrssystem"@de)
AnnotationAssertion(rdfs:comment :PublicTransitSystem "Ein System des Öffentlichen Personenverkehrs auf Straße, Schiene oder Wasser."@de)
AnnotationAssertion(rdfs:label :PublicTransitSystem "public transit system"@en)
SubClassOf(:PublicTransitSystem :RouteOfTransportation)
Declaration(Class(:Publisher))
AnnotationAssertion(rdfs:label :Publisher "εκδότης"@el)
AnnotationAssertion(rdfs:label :Publisher "出版社"@ja)
AnnotationAssertion(rdfs:comment :Publisher "Publishing company"@en)
AnnotationAssertion(rdfs:label :Publisher "éditeur"@fr)
AnnotationAssertion(rdfs:label :Publisher "uitgever"@nl)
AnnotationAssertion(rdfs:label :Publisher "publisher"@en)
SubClassOf(:Publisher :Company)
Declaration(Class(:Race))
AnnotationAssertion(rdfs:label :Race "Rennen"@de)
AnnotationAssertion(rdfs:label :Race "αγώνας"@el)
AnnotationAssertion(rdfs:label :Race "race"@en)
AnnotationAssertion(rdfs:label :Race "レース"@ja)
AnnotationAssertion(rdfs:label :Race "course"@fr)
SubClassOf(:Race :SportsEvent)
Declaration(Class(:RaceHorse))
AnnotationAssertion(rdfs:label :RaceHorse "ιπποδρομία"@el)
AnnotationAssertion(rdfs:label :RaceHorse "race horse"@en)
SubClassOf(:RaceHorse :Mammal)
Declaration(Class(:RaceTrack))
AnnotationAssertion(rdfs:label :RaceTrack "race track"@en)
AnnotationAssertion(rdfs:label :RaceTrack "circuit de course"@fr)
AnnotationAssertion(rdfs:label :RaceTrack "πίστα αγώνων"@el)
SubClassOf(:RaceTrack :SportFacility)
Declaration(Class(:Racecourse))
AnnotationAssertion(rdfs:label :Racecourse "ippodromo"@it)
AnnotationAssertion(rdfs:label :Racecourse "racecourse"@en)
AnnotationAssertion(rdfs:comment :Racecourse "A racecourse is an alternate term for a horse racing track, found in countries such as the United Kingdom, Australia, Hong Kong, and the United Arab Emirates."@en)
SubClassOf(:Racecourse :RaceTrack)
Declaration(Class(:RacingDriver))
AnnotationAssertion(rdfs:label :RacingDriver "οδηγός αγώνων"@el)
AnnotationAssertion(rdfs:label :RacingDriver "racing driver"@en)
SubClassOf(:RacingDriver :Athlete)
Declaration(Class(:RadioControlledRacingLeague))
AnnotationAssertion(rdfs:label :RadioControlledRacingLeague "radio-controlled racing league"@en)
AnnotationAssertion(rdfs:comment :RadioControlledRacingLeague "A group of sports teams or person that compete against each other in radio-controlled racing."@en)
AnnotationAssertion(rdfs:label :RadioControlledRacingLeague "ligue de courses radio-télécommandé"@fr)
SubClassOf(:RadioControlledRacingLeague :SportsLeague)
Declaration(Class(:RadioHost))
AnnotationAssertion(rdfs:label :RadioHost "οικοδεσπότης ραδιοφώνου"@el)
AnnotationAssertion(rdfs:label :RadioHost "radio host"@en)
SubClassOf(:RadioHost :Presenter)
Declaration(Class(:RadioProgram))
AnnotationAssertion(rdfs:label :RadioProgram "programma radiofonico"@it)
AnnotationAssertion(rdfs:label :RadioProgram "ラジオ番組"@ja)
AnnotationAssertion(rdfs:label :RadioProgram "ραδιοφωνικό πρόγραμμα"@el)
AnnotationAssertion(rdfs:label :RadioProgram "radio program"@en)
AnnotationAssertion(rdfs:label :RadioProgram "radio programm"@de)
AnnotationAssertion(rdfs:label :RadioProgram "radioprogramma"@nl)
SubClassOf(:RadioProgram :Work)
Declaration(Class(:RadioStation))
AnnotationAssertion(rdfs:label :RadioStation "ραδιοφωνικός σταθμός"@el)
AnnotationAssertion(rdfs:comment :RadioStation "Ein Radiosender hat genau ein Programm, zum Beispiel der Sender NDR Kultur. Nicht zu verwechseln mit der Rundfunkanstalt NDR, welche mehrere Radiosender hat."@de)
AnnotationAssertion(rdfs:label :RadioStation "emisora de radio"@es)
AnnotationAssertion(rdfs:label :RadioStation "ラジオ放送局"@ja)
AnnotationAssertion(rdfs:label :RadioStation "Radiosender"@de)
AnnotationAssertion(rdfs:label :RadioStation "radiozender"@nl)
AnnotationAssertion(rdfs:comment :RadioStation "A radio station has one line up. For instance the radio station BBC Radio 1. Not to be confused with the broadcasting network BBC, which has many radio stations."@en)
AnnotationAssertion(rdfs:label :RadioStation "station de radio"@fr)
AnnotationAssertion(rdfs:label :RadioStation "radio station"@en)
EquivalentClasses(:RadioStation <http://schema.org/RadioStation>)
SubClassOf(:RadioStation :Broadcaster)
Declaration(Class(:RailwayLine))
AnnotationAssertion(rdfs:label :RailwayLine "spoorlijn"@nl)
AnnotationAssertion(rdfs:label :RailwayLine "Eisenbahnlinie"@de)
AnnotationAssertion(rdfs:comment :RailwayLine "A railway line is a transport service by trains that pull passengers or freight provided by an organization. Not to be mistaken for railway track, which is the structure consisting of the rails. Wikipedia do not clearly differentiate between both, so there is one infobox describing tracks and lines."@en)
AnnotationAssertion(rdfs:comment :RailwayLine "Eine Eisenbahnlinie im Verkehrswesen ist die regelmäßige Bedienung einer bestimmten Eisenbahnstrecke durch öffentliche Verkehrsmittel."@de)
AnnotationAssertion(rdfs:label :RailwayLine "railway line"@en)
SubClassOf(:RailwayLine :RouteOfTransportation)
Declaration(Class(:RailwayStation))
AnnotationAssertion(rdfs:label :RailwayStation "stazione ferroviaria"@it)
AnnotationAssertion(rdfs:label :RailwayStation "gare"@fr)
AnnotationAssertion(rdfs:label :RailwayStation "train station"@en)
AnnotationAssertion(rdfs:label :RailwayStation "鉄道駅"@ja)
AnnotationAssertion(rdfs:label :RailwayStation "σιδηροδρομικός σταθμός"@el)
AnnotationAssertion(rdfs:label :RailwayStation "treinstation"@nl)
SubClassOf(:RailwayStation :Station)
Declaration(Class(:RailwayTunnel))
AnnotationAssertion(rdfs:label :RailwayTunnel "σιδηροδρομική σήραγγα"@en)
AnnotationAssertion(rdfs:label :RailwayTunnel "spoorwegtunnel"@nl)
AnnotationAssertion(rdfs:label :RailwayTunnel "Eisenbahntunnel"@de)
SubClassOf(:RailwayTunnel :Tunnel)
Declaration(Class(:RecordLabel))
AnnotationAssertion(rdfs:label :RecordLabel "platenlabel"@nl)
AnnotationAssertion(rdfs:label :RecordLabel "δισκογραφική"@el)
AnnotationAssertion(rdfs:label :RecordLabel "Plattenlabel"@de)
AnnotationAssertion(rdfs:label :RecordLabel "record label"@en)
AnnotationAssertion(rdfs:label :RecordLabel "label discographique"@fr)
SubClassOf(:RecordLabel :Company)
Declaration(Class(:Referee))
AnnotationAssertion(rdfs:label :Referee "διαιτητής"@el)
AnnotationAssertion(rdfs:label :Referee "árbitro"@es)
AnnotationAssertion(rdfs:label :Referee "arbitre"@fr)
AnnotationAssertion(rdfs:label :Referee "arbitro"@it)
AnnotationAssertion(rdfs:label :Referee "schiedsrichter"@de)
AnnotationAssertion(rdfs:label :Referee "referee"@en)
AnnotationAssertion(rdfs:label :Referee "scheidsrechter"@nl)
AnnotationAssertion(rdfs:comment :Referee "An official who watches a game or match closely to ensure that the rules are adhered to."@en)
SubClassOf(:Referee :Person)
Declaration(Class(:Regency))
AnnotationAssertion(rdfs:label :Regency "regency"@en)
AnnotationAssertion(rdfs:comment :Regency "bagian wilayah administratif dibawah provinsi"@id)
AnnotationAssertion(rdfs:label :Regency "kabupaten"@id)
SubClassOf(:Regency :GovernmentalAdministrativeRegion)
Declaration(Class(:Region))
AnnotationAssertion(rdfs:label :Region "region"@en)
SubClassOf(:Region :PopulatedPlace)
Declaration(Class(:Religious))
AnnotationAssertion(rdfs:label :Religious "θρησκευτικός"@el)
AnnotationAssertion(rdfs:label :Religious "religieux"@fr)
AnnotationAssertion(rdfs:label :Religious "religious"@en)
SubClassOf(:Religious :Person)
Declaration(Class(:ReligiousBuilding))
AnnotationAssertion(rdfs:label :ReligiousBuilding "宗教建築"@ja)
AnnotationAssertion(rdfs:label :ReligiousBuilding "édifice religieux"@fr)
AnnotationAssertion(rdfs:label :ReligiousBuilding "religious building"@en)
AnnotationAssertion(rdfs:label :ReligiousBuilding "edificio religioso"@it)
AnnotationAssertion(rdfs:label :ReligiousBuilding "edificio religioso"@es)
AnnotationAssertion(rdfs:label :ReligiousBuilding "cultusgebouw"@nl)
AnnotationAssertion(rdfs:comment :ReligiousBuilding "An establishment or her location where a group of people (a congregation) comes to perform acts of religious study, honor, or devotion."@en)
SubClassOf(:ReligiousBuilding :Building)
Declaration(Class(:Reptile))
AnnotationAssertion(rdfs:label :Reptile "reptile"@en)
AnnotationAssertion(rdfs:label :Reptile "ερπετό"@el)
AnnotationAssertion(rdfs:label :Reptile "reptiel"@nl)
AnnotationAssertion(rdfs:label :Reptile "reptile"@fr)
AnnotationAssertion(rdfs:label :Reptile "爬虫類"@ja)
AnnotationAssertion(rdfs:label :Reptile "reptil"@de)
SubClassOf(:Reptile :Animal)
Declaration(Class(:ResearchProject))
AnnotationAssertion(rdfs:label :ResearchProject "Forschungsprojekt"@de)
AnnotationAssertion(rdfs:label :ResearchProject "ερευνητικό έργο"@el)
AnnotationAssertion(rdfs:comment :ResearchProject "A research project is a scientific investigation, usually using scientific methods, to achieve defined objectives."@en)
AnnotationAssertion(rdfs:label :ResearchProject "proyecto de investigación"@es)
AnnotationAssertion(rdfs:label :ResearchProject "onderzoeksproject"@nl)
AnnotationAssertion(rdfs:label :ResearchProject "research project"@en)
AnnotationAssertion(rdfs:comment :ResearchProject "Ένα ερευνητικό έργο είναι μια επιστημονική έρευνα, συνήθως με τη χρήση επιστημονικών μεθόδων, για την επίτευξη των καθορισμένων στόχων."@el)
AnnotationAssertion(rdfs:label :ResearchProject "projet de recherche"@fr)
SubClassOf(:ResearchProject :Project)
Declaration(Class(:Restaurant))
AnnotationAssertion(rdfs:label :Restaurant "restaurant"@nl)
AnnotationAssertion(rdfs:label :Restaurant "レストラン"@ja)
AnnotationAssertion(rdfs:label :Restaurant "restaurant"@en)
AnnotationAssertion(rdfs:label :Restaurant "εστιατόριο"@el)
AnnotationAssertion(rdfs:label :Restaurant "restaurant"@fr)
EquivalentClasses(:Restaurant <http://schema.org/Restaurant>)
SubClassOf(:Restaurant :Building)
Declaration(Class(:Resume))
AnnotationAssertion(rdfs:comment :Resume "Een CV (curriculum vitae) beschrijft iemands werkervaring en vaardigheden."@nl)
AnnotationAssertion(rdfs:comment :Resume "A Resume describes a persons work experience and skill set."@en)
AnnotationAssertion(rdfs:label :Resume "CV"@nl)
AnnotationAssertion(rdfs:label :Resume "Resume"@en)
SubClassOf(:Resume <http://dbpedia.org/ontology/OntologyClass:Foaf:Document>)
Declaration(Class(:River))
AnnotationAssertion(rdfs:label :River "river"@en)
AnnotationAssertion(rdfs:comment :River "a large natural stream"@en)
AnnotationAssertion(rdfs:label :River "Fluss"@de)
AnnotationAssertion(rdfs:label :River "rivier"@nl)
AnnotationAssertion(rdfs:label :River "rivière"@fr)
AnnotationAssertion(rdfs:label :River "강"@ko)
AnnotationAssertion(rdfs:label :River "川"@ja)
AnnotationAssertion(rdfs:label :River "ποτάμι"@el)
EquivalentClasses(:River <http://schema.org/RiverBodyOfWater>)
SubClassOf(:River :Stream)
Declaration(Class(:Road))
AnnotationAssertion(rdfs:label :Road "δρόμος"@el)
AnnotationAssertion(rdfs:label :Road "carretera"@es)
AnnotationAssertion(rdfs:label :Road "도로"@ko)
AnnotationAssertion(rdfs:label :Road "weg"@nl)
AnnotationAssertion(rdfs:label :Road "route"@fr)
AnnotationAssertion(rdfs:label :Road "road"@en)
AnnotationAssertion(rdfs:label :Road "道路"@ja)
SubClassOf(:Road :RouteOfTransportation)
Declaration(Class(:RoadJunction))
AnnotationAssertion(rdfs:label :RoadJunction "road junction"@en)
AnnotationAssertion(rdfs:label :RoadJunction "wegkruising"@nl)
AnnotationAssertion(rdfs:label :RoadJunction "Straßenkreuzung"@de)
SubClassOf(:RoadJunction :RouteOfTransportation)
Declaration(Class(:RoadTunnel))
AnnotationAssertion(rdfs:label :RoadTunnel "Οδική σήραγγα"@el)
AnnotationAssertion(rdfs:label :RoadTunnel "road tunnel"@en)
AnnotationAssertion(rdfs:label :RoadTunnel "Straßentunnel"@de)
SubClassOf(:RoadTunnel :Tunnel)
Declaration(Class(:Rocket))
AnnotationAssertion(rdfs:label :Rocket "πύραυλος"@el)
AnnotationAssertion(rdfs:label :Rocket "fusée"@fr)
AnnotationAssertion(rdfs:label :Rocket "raket"@nl)
AnnotationAssertion(rdfs:label :Rocket "Rakete"@de)
AnnotationAssertion(rdfs:label :Rocket "rocket"@en)
AnnotationAssertion(rdfs:label :Rocket "로켓"@ko)
AnnotationAssertion(rdfs:label :Rocket "ロケット"@ja)
SubClassOf(:Rocket :MeanOfTransportation)
Declaration(Class(:RouteOfTransportation))
AnnotationAssertion(rdfs:label :RouteOfTransportation "route of transportation"@en)
AnnotationAssertion(rdfs:label :RouteOfTransportation "Transportweg"@de)
SubClassOf(:RouteOfTransportation :Infrastructure)
Declaration(Class(:Royalty))
AnnotationAssertion(rdfs:label :Royalty "royalty"@en)
AnnotationAssertion(rdfs:label :Royalty "王室"@ja)
AnnotationAssertion(rdfs:label :Royalty "royauté"@fr)
AnnotationAssertion(rdfs:label :Royalty "kraljevska oseba"@sl)
SubClassOf(:Royalty :Person)
Declaration(Class(:RugbyClub))
AnnotationAssertion(rdfs:label :RugbyClub "rugby club"@en)
AnnotationAssertion(rdfs:label :RugbyClub "club de rugby"@fr)
SubClassOf(:RugbyClub :SportsTeam)
Declaration(Class(:RugbyLeague))
AnnotationAssertion(rdfs:comment :RugbyLeague "A group of sports teams that compete against each other in rugby."@en)
AnnotationAssertion(rdfs:label :RugbyLeague "ligue de rugby"@fr)
AnnotationAssertion(rdfs:label :RugbyLeague "rugby league"@en)
AnnotationAssertion(rdfs:label :RugbyLeague "πρωτάθλημα rugby"@el)
SubClassOf(:RugbyLeague :SportsLeague)
Declaration(Class(:RugbyPlayer))
AnnotationAssertion(rdfs:label :RugbyPlayer "παίκτης rugby"@el)
AnnotationAssertion(rdfs:label :RugbyPlayer "rugby player"@en)
AnnotationAssertion(rdfs:label :RugbyPlayer "joueur de rugby"@fr)
AnnotationAssertion(rdfs:label :RugbyPlayer "rugbyspeler"@nl)
SubClassOf(:RugbyPlayer :Athlete)
Declaration(Class(:Saint))
AnnotationAssertion(rdfs:label :Saint "heilige"@nl)
AnnotationAssertion(rdfs:label :Saint "saint"@fr)
AnnotationAssertion(rdfs:label :Saint "Πληροφορίες Αγίου"@el)
AnnotationAssertion(rdfs:label :Saint "聖人"@ja)
AnnotationAssertion(rdfs:label :Saint "saint"@en)
AnnotationAssertion(rdfs:label :Saint "성인"@ko)
SubClassOf(:Saint :Cleric)
Declaration(Class(:Sales))
AnnotationAssertion(rdfs:label :Sales "vente"@fr)
AnnotationAssertion(rdfs:label :Sales "εκπτώσεις"@el)
AnnotationAssertion(rdfs:label :Sales "sales"@en)
AnnotationAssertion(rdfs:label :Sales "販売"@ja)
SubClassOf(:Sales owl:Thing)
Declaration(Class(:SambaSchool))
AnnotationAssertion(rdfs:label :SambaSchool "escola de samba"@pt)
AnnotationAssertion(rdfs:label :SambaSchool "samba school"@en)
AnnotationAssertion(rdfs:label :SambaSchool "σχολή σάμπα"@el)
SubClassOf(:SambaSchool :Organisation)
Declaration(Class(:School))
AnnotationAssertion(rdfs:label :School "σχολείο"@el)
AnnotationAssertion(rdfs:label :School "école"@fr)
AnnotationAssertion(rdfs:label :School "school"@nl)
AnnotationAssertion(rdfs:label :School "scuola"@en)
AnnotationAssertion(rdfs:label :School "Schule"@de)
AnnotationAssertion(rdfs:label :School "학교"@ko)
AnnotationAssertion(rdfs:label :School "学校"@ja)
EquivalentClasses(:School <http://schema.org/School>)
SubClassOf(:School :EducationalInstitution)
Declaration(Class(:Scientist))
AnnotationAssertion(rdfs:label :Scientist "scientist"@en)
AnnotationAssertion(rdfs:label :Scientist "Wissenschaftler"@de)
AnnotationAssertion(rdfs:label :Scientist "επιστήμονας"@el)
AnnotationAssertion(rdfs:label :Scientist "科学者"@ja)
AnnotationAssertion(rdfs:label :Scientist "scientifique"@fr)
AnnotationAssertion(rdfs:label :Scientist "wetenschapper"@nl)
AnnotationAssertion(rdfs:label :Scientist "과학자"@ko)
AnnotationAssertion(rdfs:label :Scientist "বিজ্ঞানী"@bn)
SubClassOf(:Scientist :Person)
Declaration(Class(:Sculptor))
AnnotationAssertion(rdfs:label :Sculptor "sculptor"@en)
AnnotationAssertion(rdfs:label :Sculptor "sculpteur"@fr)
AnnotationAssertion(rdfs:label :Sculptor "beeldhouwer"@nl)
SubClassOf(:Sculptor :Artist)
Declaration(Class(:Sculpture))
AnnotationAssertion(rdfs:label :Sculpture "Skulptur"@de)
AnnotationAssertion(rdfs:comment :Sculpture "Γλυπτική είναι τρισδιάστατο έργο τέχνης το οποίο δημιουργήθηκε από τη διαμόρφωση ή συνδυάζοντας σκληρά υλικά, τυπικώς πέτρα όπως μάρμαρο, μέταλλο, γυαλί, ή ξύλο, ή πλαστικά υλικά όπως άργιλος, υφάσματα, πολυμερή και μαλακότερα μέταλλα."@el)
AnnotationAssertion(rdfs:label :Sculpture "scultura"@it)
AnnotationAssertion(rdfs:label :Sculpture "sculpture"@fr)
AnnotationAssertion(rdfs:comment :Sculpture "Een beeldhouwwerk is een drie-dimensionaal kunstvoorwerp of plastiek, gemaakt van harde materialen zoals steen of metaal. Ook kunnen textiel of kunststoffen erin verwerkt zijn of het hoofdbestanddeel ervan uitmaken."@nl)
AnnotationAssertion(rdfs:label :Sculpture "beeldhouwwerk"@nl)
AnnotationAssertion(rdfs:label :Sculpture "Sculpture"@en)
AnnotationAssertion(rdfs:label :Sculpture "Γλυπτική"@el)
AnnotationAssertion(rdfs:comment :Sculpture "Sculpture is three-dimensional artwork created by shaping or combining hard materials, typically stone such as marble, metal, glass, or wood, or plastic materials such as clay, textiles, polymers and softer metals."@en)
EquivalentClasses(:Sculpture <http://schema.org/Sculpture>)
SubClassOf(:Sculpture :Artwork)
Declaration(Class(:Sea))
AnnotationAssertion(rdfs:label :Sea "θάλασσα"@el)
AnnotationAssertion(rdfs:label :Sea "zee"@nl)
AnnotationAssertion(rdfs:label :Sea "海"@ja)
AnnotationAssertion(rdfs:label :Sea "Meer"@de)
AnnotationAssertion(rdfs:label :Sea "sea"@en)
AnnotationAssertion(rdfs:label :Sea "mer"@fr)
EquivalentClasses(:Sea <http://schema.org/SeaBodyOfWater>)
SubClassOf(:Sea :BodyOfWater)
Declaration(Class(:Senator))
AnnotationAssertion(rdfs:label :Senator "senator"@en)
AnnotationAssertion(rdfs:label :Senator "senator"@nl)
AnnotationAssertion(rdfs:label :Senator "senador"@es)
AnnotationAssertion(rdfs:label :Senator "Senator"@de)
AnnotationAssertion(rdfs:label :Senator "sénateur"@fr)
AnnotationAssertion(rdfs:label :Senator "γερουσιαστής"@el)
SubClassOf(:Senator :Politician)
Declaration(Class(:Settlement))
AnnotationAssertion(rdfs:label :Settlement "gemeente"@nl)
AnnotationAssertion(rdfs:label :Settlement "municipality"@en)
AnnotationAssertion(rdfs:label :Settlement "도시"@ko)
AnnotationAssertion(rdfs:label :Settlement "municipalité"@fr)
AnnotationAssertion(rdfs:label :Settlement "hiri orokor"@eu)
AnnotationAssertion(rdfs:label :Settlement "οικισμός"@el)
SubClassOf(:Settlement :PopulatedPlace)
Declaration(Class(:Ship))
AnnotationAssertion(rdfs:label :Ship "舩"@ja)
AnnotationAssertion(rdfs:label :Ship "πλοίο"@el)
AnnotationAssertion(rdfs:label :Ship "배"@ko)
AnnotationAssertion(rdfs:label :Ship "navire"@fr)
AnnotationAssertion(rdfs:label :Ship "schip"@nl)
AnnotationAssertion(rdfs:label :Ship "ship"@en)
AnnotationAssertion(rdfs:label :Ship "barco"@es)
AnnotationAssertion(rdfs:label :Ship "statek"@pl)
AnnotationAssertion(rdfs:label :Ship "Schiff"@de)
SubClassOf(:Ship :MeanOfTransportation)
SubClassOf(:Ship <http://schema.org/Product>)
Declaration(Class(:ShoppingMall))
AnnotationAssertion(rdfs:label :ShoppingMall "centre commercial"@fr)
AnnotationAssertion(rdfs:label :ShoppingMall "winkelcentrum"@nl)
AnnotationAssertion(rdfs:label :ShoppingMall "ショッピングモール"@ja)
AnnotationAssertion(rdfs:label :ShoppingMall "shopping mall"@en)
AnnotationAssertion(rdfs:label :ShoppingMall "εμπορικό κέντρο"@el)
AnnotationAssertion(rdfs:label :ShoppingMall "shopping"@pt)
EquivalentClasses(:ShoppingMall <http://schema.org/ShoppingCenter>)
SubClassOf(:ShoppingMall :Building)
Declaration(Class(:Shrine))
AnnotationAssertion(rdfs:label :Shrine "神社"@ja)
AnnotationAssertion(rdfs:label :Shrine "shrine"@en)
AnnotationAssertion(rdfs:label :Shrine "santuario"@it)
AnnotationAssertion(rdfs:label :Shrine "schrein"@de)
AnnotationAssertion(rdfs:label :Shrine "sanctuaire"@fr)
SubClassOf(:Shrine :ReligiousBuilding)
Declaration(Class(:Single))
AnnotationAssertion(rdfs:label :Single "single"@fr)
AnnotationAssertion(rdfs:label :Single "싱글"@ko)
AnnotationAssertion(rdfs:comment :Single "In music, a single or record single is a type of release, typically a recording of fewer tracks than an LP or a CD."@en)
AnnotationAssertion(rdfs:label :Single "シングル"@ja)
AnnotationAssertion(rdfs:label :Single "single"@el)
AnnotationAssertion(rdfs:label :Single "single"@en)
SubClassOf(:Single :MusicalWork)
Declaration(Class(:SiteOfSpecialScientificInterest))
AnnotationAssertion(rdfs:label :SiteOfSpecialScientificInterest "自然保護協会特別指定地区"@ja)
AnnotationAssertion(rdfs:label :SiteOfSpecialScientificInterest "Site of Special Scientific Interest"@en)
AnnotationAssertion(rdfs:comment :SiteOfSpecialScientificInterest "A Site of Special Scientific Interest (SSSI) is a conservation designation denoting a protected area in the United Kingdom. SSSIs are the basic building block of site-based nature conservation legislation and most other legal nature/geological conservation designations in Great Britain are based upon them, including National Nature Reserves, Ramsar Sites, Special Protection Areas, and Special Areas of Conservation."@en)
AnnotationAssertion(rdfs:label :SiteOfSpecialScientificInterest "Τοποθεσία Ειδικού Επιστημονικού Ενδιαφέροντος"@el)
AnnotationAssertion(rdfs:label :SiteOfSpecialScientificInterest "site d'intérêt scientifique particulier"@fr)
SubClassOf(:SiteOfSpecialScientificInterest :Place)
Declaration(Class(:Skater))
AnnotationAssertion(rdfs:label :Skater "pattinatore"@it)
AnnotationAssertion(rdfs:label :Skater "skater"@en)
SubClassOf(:Skater :Athlete)
Declaration(Class(:SkiArea))
AnnotationAssertion(rdfs:label :SkiArea "domaine skiable"@fr)
AnnotationAssertion(rdfs:label :SkiArea "Περιοχή Χιονοδρομίας"@el)
AnnotationAssertion(rdfs:label :SkiArea "ski area"@en)
AnnotationAssertion(rdfs:label :SkiArea "skigebied"@nl)
AnnotationAssertion(rdfs:label :SkiArea "スキー場"@ja)
EquivalentClasses(:SkiArea <http://schema.org/SkiResort>)
SubClassOf(:SkiArea :Place)
Declaration(Class(:SkiResort))
AnnotationAssertion(rdfs:label :SkiResort "ski resort"@en)
SubClassOf(:SkiResort :Place)
Declaration(Class(:Skier))
AnnotationAssertion(rdfs:label :Skier "skiër"@nl)
AnnotationAssertion(rdfs:label :Skier "skifahrer"@de)
AnnotationAssertion(rdfs:label :Skier "σκιέρ"@el)
AnnotationAssertion(rdfs:label :Skier "skieur"@fr)
AnnotationAssertion(rdfs:label :Skier "sciatore"@it)
AnnotationAssertion(rdfs:label :Skier "スキーヤー"@ja)
AnnotationAssertion(rdfs:label :Skier "skier"@en)
SubClassOf(:Skier :Athlete)
Declaration(Class(:Skyscraper))
AnnotationAssertion(rdfs:label :Skyscraper "超高層建築物"@ja)
AnnotationAssertion(rdfs:label :Skyscraper "gratte-ciel"@fr)
AnnotationAssertion(rdfs:label :Skyscraper "wolkenkrabber"@nl)
AnnotationAssertion(rdfs:label :Skyscraper "ουρανοξύστης"@el)
AnnotationAssertion(rdfs:label :Skyscraper "Hochhaus"@de)
AnnotationAssertion(rdfs:label :Skyscraper "초고층 건물"@ko)
AnnotationAssertion(rdfs:label :Skyscraper "skyscraper"@en)
SubClassOf(:Skyscraper :Building)
Declaration(Class(:SnookerChamp))
AnnotationAssertion(rdfs:label :SnookerChamp "Snookerweltmeister"@de)
AnnotationAssertion(rdfs:comment :SnookerChamp "Ein Sportler der Snooker spielt und mindestens einmal die Weltmeisterschaft gewonnen hat"@de)
AnnotationAssertion(rdfs:label :SnookerChamp "snooker world champion"@en)
AnnotationAssertion(rdfs:comment :SnookerChamp "An athlete that plays snooker and won the world championship at least once"@en)
SubClassOf(:SnookerChamp :SnookerPlayer)
Declaration(Class(:SnookerPlayer))
AnnotationAssertion(rdfs:comment :SnookerPlayer "Ein Sportler der Snooker spielt, eine bekannte Billardvariante"@de)
AnnotationAssertion(rdfs:label :SnookerPlayer "biljarter"@nl)
AnnotationAssertion(rdfs:label :SnookerPlayer "Snookerspieler"@de)
AnnotationAssertion(rdfs:label :SnookerPlayer "snooker player"@en)
AnnotationAssertion(rdfs:comment :SnookerPlayer "An athlete that plays snooker, which is a billard derivate"@en)
SubClassOf(:SnookerPlayer :Athlete)
Declaration(Class(:SnookerWorldRanking))
AnnotationAssertion(rdfs:comment :SnookerWorldRanking "The official world ranking in snooker for a certain year/season"@en)
AnnotationAssertion(rdfs:label :SnookerWorldRanking "Snookerweltrangliste"@de)
AnnotationAssertion(rdfs:comment :SnookerWorldRanking "Die offizielle Weltrangliste im Snooker eines Jahres / einer Saison"@de)
AnnotationAssertion(rdfs:label :SnookerWorldRanking "snooker world ranking"@en)
SubClassOf(:SnookerWorldRanking owl:Thing)
Declaration(Class(:SoapCharacter))
AnnotationAssertion(rdfs:label :SoapCharacter "χαρακτήρας σαπουνόπερας"@el)
AnnotationAssertion(rdfs:label :SoapCharacter "soap character"@en)
SubClassOf(:SoapCharacter :FictionalCharacter)
Declaration(Class(:SoccerClub))
AnnotationAssertion(rdfs:label :SoccerClub "club de football"@fr)
AnnotationAssertion(rdfs:label :SoccerClub "ομάδα ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :SoccerClub "soccer club"@en)
SubClassOf(:SoccerClub :SportsTeam)
Declaration(Class(:SoccerClubSeason))
AnnotationAssertion(rdfs:label :SoccerClubSeason "soccer club season"@en)
SubClassOf(:SoccerClubSeason :SportsTeamSeason)
Declaration(Class(:SoccerLeague))
AnnotationAssertion(rdfs:label :SoccerLeague "soccer league"@en)
AnnotationAssertion(rdfs:label :SoccerLeague "Ομοσπονδία Ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:comment :SoccerLeague "A group of sports teams that compete against each other in soccer."@en)
AnnotationAssertion(rdfs:label :SoccerLeague "ligue de football"@fr)
SubClassOf(:SoccerLeague :SportsLeague)
Declaration(Class(:SoccerLeagueSeason))
AnnotationAssertion(rdfs:label :SoccerLeagueSeason "futbol ligi sezonu"@tr)
AnnotationAssertion(rdfs:label :SoccerLeagueSeason "περίοδος κυπέλλου ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :SoccerLeagueSeason "soccer league season"@en)
SubClassOf(:SoccerLeagueSeason :SportsTeamSeason)
Declaration(Class(:SoccerManager))
AnnotationAssertion(rdfs:label :SoccerManager "voetbalmanager"@nl)
AnnotationAssertion(rdfs:label :SoccerManager "entraîneur de football"@fr)
AnnotationAssertion(rdfs:label :SoccerManager "προπονητής ποδοσφαίρου"@el)
AnnotationAssertion(rdfs:label :SoccerManager "Fußballmanager"@de)
AnnotationAssertion(rdfs:label :SoccerManager "soccer manager"@en)
SubClassOf(:SoccerManager :SportsManager)
Declaration(Class(:SoccerPlayer))
AnnotationAssertion(rdfs:label :SoccerPlayer "voetballer"@nl)
AnnotationAssertion(rdfs:label :SoccerPlayer "soccer player"@en)
AnnotationAssertion(rdfs:label :SoccerPlayer "futbolista"@es)
AnnotationAssertion(rdfs:label :SoccerPlayer "축구 선수"@ko)
AnnotationAssertion(rdfs:label :SoccerPlayer "joueur de football"@fr)
AnnotationAssertion(rdfs:label :SoccerPlayer "παίχτης ποδοσφαίρου"@el)
SubClassOf(:SoccerPlayer :Athlete)
Declaration(Class(:SoccerTournament))
AnnotationAssertion(rdfs:label :SoccerTournament "campeonato de futebol"@pt)
AnnotationAssertion(rdfs:label :SoccerTournament "soccer tournoment"@en)
AnnotationAssertion(rdfs:label :SoccerTournament "futbol turnuvası"@tr)
AnnotationAssertion(rdfs:label :SoccerTournament "τουρνουά ποδοσφαίρου"@el)
SubClassOf(:SoccerTournament :SportsEvent)
Declaration(Class(:SoftballLeague))
AnnotationAssertion(rdfs:comment :SoftballLeague "A group of sports teams that compete against each other in softball."@en)
AnnotationAssertion(rdfs:label :SoftballLeague "softball league"@en)
AnnotationAssertion(rdfs:label :SoftballLeague "ligue de softball"@fr)
SubClassOf(:SoftballLeague :SportsLeague)
Declaration(Class(:Software))
AnnotationAssertion(rdfs:label :Software "Software"@de)
AnnotationAssertion(rdfs:label :Software "소프트웨어"@ko)
AnnotationAssertion(rdfs:label :Software "software"@nl)
AnnotationAssertion(rdfs:label :Software "logiciel"@fr)
AnnotationAssertion(rdfs:label :Software "programska oprema"@sl)
AnnotationAssertion(rdfs:label :Software "software"@en)
AnnotationAssertion(rdfs:label :Software "λογισμικό"@el)
AnnotationAssertion(rdfs:label :Software "ソフトウェア"@ja)
SubClassOf(:Software :Work)
Declaration(Class(:Song))
AnnotationAssertion(rdfs:label :Song "歌"@ja)
AnnotationAssertion(rdfs:label :Song "노래"@ko)
AnnotationAssertion(rdfs:label :Song "τραγούδι"@el)
AnnotationAssertion(rdfs:label :Song "lied"@nl)
AnnotationAssertion(rdfs:label :Song "canzone"@it)
AnnotationAssertion(rdfs:label :Song "song"@en)
AnnotationAssertion(rdfs:label :Song "lied"@de)
AnnotationAssertion(rdfs:label :Song "chanson"@fr)
EquivalentClasses(:Song <http://schema.org/MusicRecording>)
SubClassOf(:Song :MusicalWork)
Declaration(Class(:SpaceMission))
AnnotationAssertion(rdfs:label :SpaceMission "misión espacial"@es)
AnnotationAssertion(rdfs:label :SpaceMission "우주 임무"@ko)
AnnotationAssertion(rdfs:label :SpaceMission "space mission"@en)
AnnotationAssertion(rdfs:label :SpaceMission "διαστημική αποστολή"@el)
AnnotationAssertion(rdfs:label :SpaceMission "mission spatiale"@fr)
SubClassOf(:SpaceMission :Event)
Declaration(Class(:SpaceShuttle))
AnnotationAssertion(rdfs:label :SpaceShuttle "navette spatiale"@fr)
AnnotationAssertion(rdfs:label :SpaceShuttle "우주 왕복선"@ko)
AnnotationAssertion(rdfs:label :SpaceShuttle "διαστημικό λεωφορείο"@el)
AnnotationAssertion(rdfs:label :SpaceShuttle "space shuttle"@en)
SubClassOf(:SpaceShuttle :MeanOfTransportation)
Declaration(Class(:SpaceStation))
AnnotationAssertion(rdfs:label :SpaceStation "station spatiale"@fr)
AnnotationAssertion(rdfs:label :SpaceStation "estación espacial"@es)
AnnotationAssertion(rdfs:label :SpaceStation "διαστημικός σταθμός"@el)
AnnotationAssertion(rdfs:label :SpaceStation "space station"@en)
AnnotationAssertion(rdfs:label :SpaceStation "ruimtestation"@nl)
AnnotationAssertion(rdfs:label :SpaceStation "Raumstation"@de)
AnnotationAssertion(rdfs:label :SpaceStation "우주 정거장"@ko)
SubClassOf(:SpaceStation :MeanOfTransportation)
Declaration(Class(:Spacecraft))
AnnotationAssertion(rdfs:label :Spacecraft "διαστημόπλοιο"@el)
AnnotationAssertion(rdfs:label :Spacecraft "우주선"@ko)
AnnotationAssertion(rdfs:label :Spacecraft "spacecraft"@en)
AnnotationAssertion(rdfs:label :Spacecraft "vaisseau spatial"@fr)
AnnotationAssertion(rdfs:label :Spacecraft "ruimtevaartuig"@nl)
SubClassOf(:Spacecraft :MeanOfTransportation)
Declaration(Class(:Species))
AnnotationAssertion(rdfs:label :Species "espèce"@fr)
AnnotationAssertion(rdfs:label :Species "Spezie"@de)
AnnotationAssertion(rdfs:label :Species "είδος"@el)
AnnotationAssertion(rdfs:label :Species "種_(分類学)"@ja)
AnnotationAssertion(rdfs:label :Species "especies"@es)
AnnotationAssertion(rdfs:label :Species "soort"@nl)
AnnotationAssertion(rdfs:label :Species "species"@en)
SubClassOf(:Species owl:Thing)
Declaration(Class(:SpeedwayLeague))
AnnotationAssertion(rdfs:label :SpeedwayLeague "πρωτάθλημα αυτοκινητοδρόμου"@el)
AnnotationAssertion(rdfs:label :SpeedwayLeague "ligue de speedway"@fr)
AnnotationAssertion(rdfs:label :SpeedwayLeague "speedway league"@en)
AnnotationAssertion(rdfs:comment :SpeedwayLeague "A group of sports teams that compete against each other in motorcycle speedway racing."@en)
SubClassOf(:SpeedwayLeague :SportsLeague)
Declaration(Class(:SpeedwayRider))
AnnotationAssertion(rdfs:label :SpeedwayRider "speedway rider"@en)
SubClassOf(:SpeedwayRider :MotorcycleRider)
Declaration(Class(:SpeedwayTeam))
AnnotationAssertion(rdfs:label :SpeedwayTeam "speedway team"@en)
AnnotationAssertion(rdfs:label :SpeedwayTeam "klub żużlowy"@pl)
SubClassOf(:SpeedwayTeam :SportsTeam)
Declaration(Class(:Sport))
AnnotationAssertion(rdfs:label :Sport "esporte"@pt)
AnnotationAssertion(rdfs:label :Sport "Deporte"@es)
AnnotationAssertion(rdfs:label :Sport "Αθλήματα"@el)
AnnotationAssertion(rdfs:label :Sport "스포츠"@ko)
AnnotationAssertion(rdfs:comment :Sport "A sport is commonly defined as an organized, competitive, and skillful physical activity."@en)
AnnotationAssertion(rdfs:label :Sport "Sport"@de)
AnnotationAssertion(rdfs:label :Sport "sport"@en)
AnnotationAssertion(rdfs:label :Sport "スポーツ"@ja)
AnnotationAssertion(rdfs:label :Sport "sport"@fr)
AnnotationAssertion(rdfs:label :Sport "sport"@nl)
SubClassOf(:Sport :Activity)
Declaration(Class(:SportCompetitionResult))
AnnotationAssertion(rdfs:label :SportCompetitionResult "results of a sport competition"@en)
AnnotationAssertion(rdfs:label :SportCompetitionResult "résultats d'une compétition sportive"@fr)
AnnotationAssertion(rdfs:label :SportCompetitionResult "αποτελέσματα αθλητικού διαγωνισμού"@el)
AnnotationAssertion(rdfs:label :SportCompetitionResult "resultados de una competición deportiva"@es)
SubClassOf(:SportCompetitionResult owl:Thing)
Declaration(Class(:SportFacility))
AnnotationAssertion(rdfs:label :SportFacility "installation sportive"@fr)
AnnotationAssertion(rdfs:label :SportFacility "sport facility"@en)
AnnotationAssertion(rdfs:label :SportFacility "αθλητικές εγκαταστάσεις"@el)
SubClassOf(:SportFacility :Place)
Declaration(Class(:SportsEvent))
AnnotationAssertion(rdfs:label :SportsEvent "évènement sportif"@fr)
AnnotationAssertion(rdfs:label :SportsEvent "evento esportivo"@pt)
AnnotationAssertion(rdfs:comment :SportsEvent "a event of competitive physical activity"@en)
AnnotationAssertion(rdfs:label :SportsEvent "sports event"@en)
AnnotationAssertion(rdfs:label :SportsEvent "Sportereignis"@de)
EquivalentClasses(:SportsEvent <http://schema.org/SportsEvent>)
SubClassOf(:SportsEvent :Event)
Declaration(Class(:SportsLeague))
AnnotationAssertion(rdfs:label :SportsLeague "sports league"@en)
AnnotationAssertion(rdfs:label :SportsLeague "ligue sportive"@fr)
AnnotationAssertion(rdfs:comment :SportsLeague "A group of sports teams or individual athletes that compete against each other in a specific sport."@en)
AnnotationAssertion(rdfs:label :SportsLeague "Αθλητική Ομοσπονδία"@el)
AnnotationAssertion(rdfs:label :SportsLeague "스포츠 리그"@ko)
SubClassOf(:SportsLeague :Organisation)
Declaration(Class(:SportsManager))
AnnotationAssertion(rdfs:label :SportsManager "Sportmanager"@de)
AnnotationAssertion(rdfs:comment :SportsManager "Σύμφωνα με τη γαλλική ετικέτα Soccer,μπορεί να εννοείται ο προπονητής.Παρ'όλα αυτα,εδώ ένας αθλητικός μάνατζερ μεταφράζεται ως ένα μέλος συμβουλίου ενός αθλητικού κλαμπ."@el)
AnnotationAssertion(rdfs:label :SportsManager "αθλητικός μάνατζερ"@el)
AnnotationAssertion(rdfs:label :SportsManager "sports manager"@en)
AnnotationAssertion(rdfs:label :SportsManager "sportbestuurder"@nl)
AnnotationAssertion(rdfs:comment :SportsManager "According to the french label sub Soccer, trainership could be meant. However, here a Sportsmanager is interpreted as a member of the board of a sporting club."@en)
SubClassOf(:SportsManager :Person)
Declaration(Class(:SportsTeam))
AnnotationAssertion(rdfs:label :SportsTeam "sports team"@en)
AnnotationAssertion(rdfs:label :SportsTeam "équipe sportive"@fr)
AnnotationAssertion(rdfs:label :SportsTeam "sportteam"@nl)
AnnotationAssertion(rdfs:label :SportsTeam "ομαδικά αθλήματα"@el)
EquivalentClasses(:SportsTeam <http://schema.org/SportsTeam>)
SubClassOf(:SportsTeam :Organisation)
Declaration(Class(:SportsTeamMember))
AnnotationAssertion(rdfs:comment :SportsTeamMember "Μέλος αθλητικής ομάδας."@el)
AnnotationAssertion(rdfs:comment :SportsTeamMember "A member of an athletic team."@en)
AnnotationAssertion(rdfs:label :SportsTeamMember "μέλος αθλητικής ομάδας"@el)
AnnotationAssertion(rdfs:label :SportsTeamMember "Sports team member"@en)
SubClassOf(:SportsTeamMember :OrganisationMember)
Declaration(Class(:SportsTeamSeason))
AnnotationAssertion(rdfs:label :SportsTeamSeason "sports team season"@en)
AnnotationAssertion(rdfs:comment :SportsTeamSeason "μία περίοδος για μία αθλητική ομάδα"@el)
AnnotationAssertion(rdfs:comment :SportsTeamSeason "A season for a particular sports team (as opposed to the season for the entire league that the team is in)"@en)
AnnotationAssertion(rdfs:label :SportsTeamSeason "περίοδος αθλητικής ομάδας"@el)
SubClassOf(:SportsTeamSeason :SportsSeason)
Declaration(Class(:SquashPlayer))
AnnotationAssertion(rdfs:label :SquashPlayer "giocatore di squash"@it)
AnnotationAssertion(rdfs:label :SquashPlayer "squasher"@nl)
AnnotationAssertion(rdfs:label :SquashPlayer "squash player"@en)
SubClassOf(:SquashPlayer :Athlete)
Declaration(Class(:Stadium))
AnnotationAssertion(rdfs:label :Stadium "stadium"@en)
AnnotationAssertion(rdfs:label :Stadium "stade"@fr)
AnnotationAssertion(rdfs:label :Stadium "στάδιο"@el)
AnnotationAssertion(rdfs:label :Stadium "スタジアム"@ja)
AnnotationAssertion(rdfs:label :Stadium "Stadion"@de)
AnnotationAssertion(rdfs:label :Stadium "stadion"@nl)
AnnotationAssertion(rdfs:label :Stadium "경기장"@ko)
EquivalentClasses(:Stadium <http://schema.org/StadiumOrArena>)
SubClassOf(:Stadium :SportFacility)
Declaration(Class(:Star))
AnnotationAssertion(rdfs:label :Star "stella"@it)
AnnotationAssertion(rdfs:label :Star "αστέρι"@el)
AnnotationAssertion(rdfs:label :Star "étoile"@fr)
AnnotationAssertion(rdfs:label :Star "ster"@nl)
AnnotationAssertion(rdfs:label :Star "star"@en)
SubClassOf(:Star :CelestialBody)
Declaration(Class(:State))
AnnotationAssertion(rdfs:label :State "staat"@nl)
AnnotationAssertion(rdfs:label :State "state"@en)
SubClassOf(:State :PopulatedPlace)
Declaration(Class(:Station))
AnnotationAssertion(rdfs:label :Station "station"@en)
AnnotationAssertion(rdfs:label :Station "駅"@ja)
AnnotationAssertion(rdfs:label :Station "estação"@pt)
AnnotationAssertion(rdfs:comment :Station "Public transport station (eg. railway station, metro station, bus station)."@en)
AnnotationAssertion(rdfs:comment :Station "Остановка общественного транспорта (например: железнодорожная станция, станция метро, автостанция)."@ru)
AnnotationAssertion(rdfs:label :Station "станция"@ru)
AnnotationAssertion(rdfs:label :Station "Σταθμός"@el)
AnnotationAssertion(rdfs:label :Station "station"@fr)
AnnotationAssertion(rdfs:label :Station "station"@nl)
SubClassOf(:Station :Infrastructure)
Declaration(Class(:Stream))
AnnotationAssertion(rdfs:label :Stream "ruscello"@it)
AnnotationAssertion(rdfs:comment :Stream "a flowing body of water with a current, confined within a bed and stream banks"@en)
AnnotationAssertion(rdfs:label :Stream "河川"@ja)
AnnotationAssertion(rdfs:label :Stream "ruisseau"@fr)
AnnotationAssertion(rdfs:label :Stream "stream"@en)
AnnotationAssertion(rdfs:label :Stream "bach"@de)
SubClassOf(:Stream :BodyOfWater)
Declaration(Class(:SubMunicipality))
AnnotationAssertion(rdfs:label :SubMunicipality "Teilgemeinde"@de)
AnnotationAssertion(rdfs:label :SubMunicipality "deelgemeente"@nl)
AnnotationAssertion(rdfs:label :SubMunicipality "borough"@en)
AnnotationAssertion(rdfs:comment :SubMunicipality "An administrative body governing a territorial unity on the lowest level, administering part of a municipality"@en)
SubClassOf(:SubMunicipality :GovernmentalAdministrativeRegion)
Declaration(Class(:SumoWrestler))
AnnotationAssertion(rdfs:label :SumoWrestler "sumoworstelaar"@nl)
AnnotationAssertion(rdfs:label :SumoWrestler "sumo wrestler"@en)
SubClassOf(:SumoWrestler :Wrestler)
Declaration(Class(:SupremeCourtOfTheUnitedStatesCase))
AnnotationAssertion(rdfs:label :SupremeCourtOfTheUnitedStatesCase "Supreme Court of the United States case"@en)
AnnotationAssertion(rdfs:label :SupremeCourtOfTheUnitedStatesCase "cas juridique de la Cour suprême des États-Unis"@fr)
SubClassOf(:SupremeCourtOfTheUnitedStatesCase :LegalCase)
Declaration(Class(:Surname))
AnnotationAssertion(rdfs:label :Surname "Nachname"@de)
AnnotationAssertion(rdfs:label :Surname "surname"@en)
AnnotationAssertion(rdfs:label :Surname "achternaam"@nl)
AnnotationAssertion(rdfs:label :Surname "家"@ja)
AnnotationAssertion(rdfs:label :Surname "επώνυμο"@el)
AnnotationAssertion(rdfs:label :Surname "nazwisko"@pl)
AnnotationAssertion(rdfs:label :Surname "nom de famille"@fr)
SubClassOf(:Surname :Name)
Declaration(Class(:Swarm))
AnnotationAssertion(rdfs:label :Swarm "stormo"@it)
AnnotationAssertion(rdfs:label :Swarm "Σμήνος"@el)
AnnotationAssertion(rdfs:label :Swarm "Swarm"@en)
AnnotationAssertion(rdfs:label :Swarm "schwarm"@de)
SubClassOf(:Swarm owl:Thing)
Declaration(Class(:Swimmer))
AnnotationAssertion(rdfs:label :Swimmer "zwemmer"@nl)
AnnotationAssertion(rdfs:label :Swimmer "nuotatore"@it)
AnnotationAssertion(rdfs:label :Swimmer "Kολυμβητής"@el)
AnnotationAssertion(rdfs:comment :Swimmer "ένας εκπαιδευμένος αθλητής που συμμετέχει σε συναντήσεις κολύμβησης"@el)
AnnotationAssertion(rdfs:label :Swimmer "nadador"@pt)
AnnotationAssertion(rdfs:label :Swimmer "swimmer"@en)
AnnotationAssertion(rdfs:label :Swimmer "Schwimmer"@de)
AnnotationAssertion(rdfs:comment :Swimmer "a trained athlete who participates in swimming meets"@en)
AnnotationAssertion(rdfs:label :Swimmer "競泳選手"@ja)
AnnotationAssertion(rdfs:label :Swimmer "nageur"@fr)
SubClassOf(:Swimmer :Athlete)
Declaration(Class(:Synagogue))
AnnotationAssertion(rdfs:label :Synagogue "synagoge"@nl)
AnnotationAssertion(rdfs:label :Synagogue "sinagoga"@es)
AnnotationAssertion(rdfs:comment :Synagogue "Une synagogue est un lieu de culte juif."@fr)
AnnotationAssertion(rdfs:label :Synagogue "synagog"@en)
AnnotationAssertion(rdfs:comment :Synagogue "A synagogue, sometimes spelt synagog, is a Jewish or Samaritan house of prayer."@en)
AnnotationAssertion(rdfs:label :Synagogue "synagogue"@fr)
SubClassOf(:Synagogue :ReligiousBuilding)
Declaration(Class(:SystemOfLaw))
AnnotationAssertion(rdfs:label :SystemOfLaw "régime de droit"@fr)
AnnotationAssertion(rdfs:label :SystemOfLaw "System of law"@en)
AnnotationAssertion(rdfs:comment :SystemOfLaw "a system of legislation, either national or international"@en)
AnnotationAssertion(rdfs:label :SystemOfLaw "rechtssysteem"@nl)
SubClassOf(:SystemOfLaw :TopicalConcept)
Declaration(Class(:TableTennisPlayer))
AnnotationAssertion(rdfs:label :TableTennisPlayer "tafeltennisser"@nl)
AnnotationAssertion(rdfs:comment :TableTennisPlayer "O αθλητής που παίζει πινγκ-πονγκ"@el)
AnnotationAssertion(rdfs:label :TableTennisPlayer "παίκτης πινγκ-πονγκ"@el)
AnnotationAssertion(rdfs:label :TableTennisPlayer "table tennis player"@en)
AnnotationAssertion(rdfs:comment :TableTennisPlayer "Athlete who plays table tennis"@en)
SubClassOf(:TableTennisPlayer :Athlete)
Declaration(Class(:Tax))
AnnotationAssertion(rdfs:label :Tax "belasting"@nl)
AnnotationAssertion(rdfs:label :Tax "φόρος"@el)
AnnotationAssertion(rdfs:label :Tax "taxe"@fr)
AnnotationAssertion(rdfs:label :Tax "Steuer"@de)
AnnotationAssertion(rdfs:label :Tax "tax"@en)
AnnotationAssertion(rdfs:label :Tax "租税"@ja)
AnnotationAssertion(rdfs:label :Tax "impuesto"@es)
SubClassOf(:Tax owl:Thing)
Declaration(Class(:TeamMember))
AnnotationAssertion(rdfs:label :TeamMember "Team member"@en)
AnnotationAssertion(rdfs:comment :TeamMember "A member of an athletic team."@en)
AnnotationAssertion(rdfs:comment :TeamMember "Ένα μέλος μιας αθλητικής ομάδας."@el)
AnnotationAssertion(rdfs:label :TeamMember "coéquipier"@fr)
AnnotationAssertion(rdfs:label :TeamMember "Teammitglied"@de)
AnnotationAssertion(rdfs:label :TeamMember "Μέλος ομάδας"@el)
SubClassOf(:TeamMember :Athlete)
Declaration(Class(:TelevisionEpisode))
AnnotationAssertion(rdfs:label :TelevisionEpisode "television episode"@en)
AnnotationAssertion(rdfs:label :TelevisionEpisode "επεισόδιο τηλεόρασης"@el)
AnnotationAssertion(rdfs:label :TelevisionEpisode "épisode télévisé"@fr)
AnnotationAssertion(rdfs:label :TelevisionEpisode "capítulo de serie de televisión"@es)
AnnotationAssertion(rdfs:comment :TelevisionEpisode "A television episode is a part of serial television program."@en)
EquivalentClasses(:TelevisionEpisode <http://schema.org/TVEpisode>)
SubClassOf(:TelevisionEpisode :Work)
Declaration(Class(:TelevisionHost))
AnnotationAssertion(rdfs:label :TelevisionHost "television host"@en)
SubClassOf(:TelevisionHost :Presenter)
Declaration(Class(:TelevisionSeason))
AnnotationAssertion(rdfs:label :TelevisionSeason "television season"@en)
SubClassOf(:TelevisionSeason :Work)
Declaration(Class(:TelevisionShow))
AnnotationAssertion(rdfs:label :TelevisionShow "television show"@en)
AnnotationAssertion(rdfs:label :TelevisionShow "émission de télévision"@fr)
AnnotationAssertion(rdfs:label :TelevisionShow "televizijska oddaja"@sl)
AnnotationAssertion(rdfs:label :TelevisionShow "テレビ番組"@ja)
AnnotationAssertion(rdfs:label :TelevisionShow "τηλεοπτική σειρά"@el)
SubClassOf(:TelevisionShow :Work)
Declaration(Class(:TelevisionStation))
AnnotationAssertion(rdfs:label :TelevisionStation "television station"@en)
AnnotationAssertion(rdfs:label :TelevisionStation "τηλεοπτικός σταθμός"@el)
AnnotationAssertion(rdfs:label :TelevisionStation "テレビジョン放送局"@ja)
AnnotationAssertion(rdfs:label :TelevisionStation "canale televisivo"@it)
AnnotationAssertion(rdfs:comment :TelevisionStation "Ένας τηλεοπτικός σταθμός έχει μια παράταξη.Για παράδειγμα ο τηλεοπτικός σταθμός WABC-TV (or ABC 7, Channel 7).Δεν πρέπει να συγχέεται με το τηλεοπτικό δίκτυο ABC,που έχει πολλούς τηλεοπτικούς σταθμούς."@el)
AnnotationAssertion(rdfs:label :TelevisionStation "chaînes de télévision"@fr)
AnnotationAssertion(rdfs:comment :TelevisionStation "A television station has usually one line up. For instance the television station WABC-TV (or ABC 7, Channel 7). Not to be confused with the broadcasting network ABC, which has many television stations."@en)
AnnotationAssertion(rdfs:label :TelevisionStation "canal de televisión"@es)
AnnotationAssertion(rdfs:comment :TelevisionStation "Ein Fernsehsender hat normalerweise ein Programm, zum Beispiel der Sender Erstes Deutsches Fernsehen (Das Erste). Nicht zu verwechseln mit der Rundfunkanstalt ARD, welche mehrere Fernsehsender hat."@de)
AnnotationAssertion(rdfs:label :TelevisionStation "Fernsehsender"@de)
EquivalentClasses(:TelevisionStation <http://schema.org/TelevisionStation>)
SubClassOf(:TelevisionStation :Broadcaster)
Declaration(Class(:Temple))
AnnotationAssertion(rdfs:label :Temple "temple"@en)
AnnotationAssertion(rdfs:label :Temple "寺"@ja)
AnnotationAssertion(rdfs:label :Temple "tempel"@de)
AnnotationAssertion(rdfs:label :Temple "temple"@fr)
AnnotationAssertion(rdfs:label :Temple "tempel"@nl)
AnnotationAssertion(rdfs:label :Temple "tempio"@it)
SubClassOf(:Temple :ReligiousBuilding)
Declaration(Class(:TennisLeague))
AnnotationAssertion(rdfs:label :TennisLeague "tennis league"@en)
AnnotationAssertion(rdfs:label :TennisLeague "Ομοσπονδία Αντισφαίρισης"@el)
AnnotationAssertion(rdfs:label :TennisLeague "ligue de tennis"@fr)
AnnotationAssertion(rdfs:comment :TennisLeague "A group of sports teams or person that compete against each other in tennis."@en)
SubClassOf(:TennisLeague :SportsLeague)
Declaration(Class(:TennisPlayer))
AnnotationAssertion(rdfs:label :TennisPlayer "tennis player"@en)
AnnotationAssertion(rdfs:label :TennisPlayer "jogador de tennis"@pt)
AnnotationAssertion(rdfs:label :TennisPlayer "παίχτης τένις"@el)
AnnotationAssertion(rdfs:label :TennisPlayer "joueur de tennis"@fr)
AnnotationAssertion(rdfs:label :TennisPlayer "tenista"@es)
AnnotationAssertion(rdfs:label :TennisPlayer "tennisser"@nl)
SubClassOf(:TennisPlayer :Athlete)
Declaration(Class(:TennisTournament))
AnnotationAssertion(rdfs:label :TennisTournament "tennis tournament"@en)
AnnotationAssertion(rdfs:label :TennisTournament "tennis toernooi"@nl)
AnnotationAssertion(rdfs:label :TennisTournament "Τουρνουά Τένις"@el)
AnnotationAssertion(rdfs:label :TennisTournament "torneo di tennis"@it)
SubClassOf(:TennisTournament :SportsEvent)
Declaration(Class(:Territory))
AnnotationAssertion(rdfs:label :Territory "territory"@en)
SubClassOf(:Territory :PopulatedPlace)
Declaration(Class(:Theatre))
AnnotationAssertion(rdfs:label :Theatre "schouwburg"@nl)
AnnotationAssertion(rdfs:label :Theatre "theatre"@en)
AnnotationAssertion(rdfs:label :Theatre "Theater"@de)
AnnotationAssertion(rdfs:comment :Theatre "A theater or theatre (also a playhouse) is a structure where theatrical works or plays are performed or other performances such as musical concerts may be produced."@en)
AnnotationAssertion(rdfs:label :Theatre "théâtre"@fr)
AnnotationAssertion(rdfs:label :Theatre "劇場"@ja)
AnnotationAssertion(rdfs:label :Theatre "θέατρο"@el)
SubClassOf(:Theatre :Venue)
Declaration(Class(:TimePeriod))
AnnotationAssertion(rdfs:label :TimePeriod "χρονική περίοδος"@el)
AnnotationAssertion(rdfs:label :TimePeriod "periodo temporal"@es)
AnnotationAssertion(rdfs:label :TimePeriod "tijdvak"@nl)
AnnotationAssertion(rdfs:label :TimePeriod "période temporelle"@fr)
AnnotationAssertion(rdfs:label :TimePeriod "time period"@en)
SubClassOf(:TimePeriod owl:Thing)
DisjointClasses(:TimePeriod :Person)
Declaration(Class(:TopicalConcept))
AnnotationAssertion(rdfs:label :TopicalConcept "thematisches Konzept"@de)
AnnotationAssertion(rdfs:label :TopicalConcept "topical concept"@en)
SubClassOf(:TopicalConcept owl:Thing)
Declaration(Class(:Town))
AnnotationAssertion(rdfs:label :Town "町"@ja)
AnnotationAssertion(rdfs:label :Town "stad"@nl)
AnnotationAssertion(rdfs:label :Town "town"@en)
AnnotationAssertion(rdfs:label :Town "πόλη"@el)
AnnotationAssertion(rdfs:label :Town "ville"@fr)
AnnotationAssertion(rdfs:comment :Town "a settlement ranging from a few hundred to several thousand (occasionally hundreds of thousands). The precise meaning varies between countries and is not always a matter of legal definition. Usually, a town is thought of as larger than a village but smaller than a city, though there are exceptions to this rule."@en)
AnnotationAssertion(rdfs:label :Town "miasteczko"@pl)
SubClassOf(:Town :Settlement)
Declaration(Class(:TrackList))
AnnotationAssertion(rdfs:label :TrackList "lijst van nummers"@nl)
AnnotationAssertion(rdfs:comment :TrackList "Een lijst van nummers als op een CD album"@nl)
AnnotationAssertion(rdfs:label :TrackList "track list"@en)
AnnotationAssertion(rdfs:comment :TrackList "A list of music tracks, like on a CD"@en)
SubClassOf(:TrackList :List)
Declaration(Class(:TradeUnion))
AnnotationAssertion(rdfs:label :TradeUnion "Κουτί πληροφοριών ένωσης"@el)
AnnotationAssertion(rdfs:label :TradeUnion "trade union"@en)
AnnotationAssertion(rdfs:comment :TradeUnion "A trade union or labor union is an organization of workers who have banded together to achieve common goals such as better working conditions."@en)
AnnotationAssertion(rdfs:label :TradeUnion "syndicat professionnel"@fr)
AnnotationAssertion(rdfs:label :TradeUnion "vakbond"@nl)
SubClassOf(:TradeUnion :Organisation)
Declaration(Class(:Train))
AnnotationAssertion(rdfs:label :Train "tren"@es)
AnnotationAssertion(rdfs:label :Train "train"@fr)
AnnotationAssertion(rdfs:label :Train "列車"@ja)
AnnotationAssertion(rdfs:label :Train "zug"@de)
AnnotationAssertion(rdfs:label :Train "treno"@it)
AnnotationAssertion(rdfs:label :Train "train"@en)
AnnotationAssertion(rdfs:label :Train "trein"@nl)
AnnotationAssertion(rdfs:label :Train "τρένο"@el)
SubClassOf(:Train :MeanOfTransportation)
Declaration(Class(:Treadmill))
AnnotationAssertion(rdfs:label :Treadmill "Treadmill"@en)
AnnotationAssertion(rdfs:label :Treadmill "Rosmolen"@nl)
AnnotationAssertion(rdfs:comment :Treadmill "A mill driven by the tractive power of horses, donkeys or even people"@en)
AnnotationAssertion(rdfs:label :Treadmill "Μύλος"@el)
SubClassOf(:Treadmill :Mill)
Declaration(Class(:Tunnel))
AnnotationAssertion(rdfs:comment :Tunnel "Ein Tunnel (auch Tunell) ist eine künstliche Passage, die Berge, Gewässer oder andere Hindernisse (in der Regel als Verkehrsweg) unterquert (http://de.wikipedia.org/wiki/Tunnel)."@de)
AnnotationAssertion(rdfs:label :Tunnel "tunnel"@fr)
AnnotationAssertion(rdfs:label :Tunnel "tunnel"@nl)
AnnotationAssertion(rdfs:label :Tunnel "τούνελ"@el)
AnnotationAssertion(rdfs:label :Tunnel "tunnel"@en)
AnnotationAssertion(rdfs:comment :Tunnel "Un tunnel est une galerie souterraine livrant passage à une voie de communication (chemin de fer, canal, route, chemin piétonnier). (http://fr.wikipedia.org/wiki/Tunnel)."@fr)
AnnotationAssertion(rdfs:label :Tunnel "Tunnel"@de)
AnnotationAssertion(rdfs:label :Tunnel "トンネル"@ja)
AnnotationAssertion(rdfs:comment :Tunnel "Ένα τούνελ μπορεί να είναι για πεζούς ή για αυτοκινητόδρομους,για σιδηρόδρομους,ή για κανάλια στο νερό.Μερικά τούνελ είναι υδραγωγεία για να παρέχουν νερό προς κατανάλωση ή για υδροηλεκτικούς σταθμούς ή είναι υπόνομοι."@el)
AnnotationAssertion(rdfs:comment :Tunnel "A tunnel may be for foot or vehicular road traffic, for rail traffic, or for a canal. Some tunnels are aqueducts to supply water for consumption or for hydroelectric stations or are sewers (http://en.wikipedia.org/wiki/Tunnel)."@en)
SubClassOf(:Tunnel :RouteOfTransportation)
Declaration(Class(:UnitOfWork))
AnnotationAssertion(rdfs:label :UnitOfWork "unit of work"@en)
AnnotationAssertion(rdfs:label :UnitOfWork "arbeitseinheit"@de)
AnnotationAssertion(rdfs:comment :UnitOfWork "This class is meant to convey the notion of an amount work to be done. It is different from Activity in that it has a definite end and is being measured.\""@en)
AnnotationAssertion(rdfs:label :UnitOfWork "werkeenheid"@nl)
SubClassOf(:UnitOfWork owl:Thing)
DisjointClasses(:UnitOfWork :Person)
Declaration(Class(:University))
AnnotationAssertion(rdfs:label :University "université"@fr)
AnnotationAssertion(rdfs:label :University "Universität"@de)
AnnotationAssertion(rdfs:label :University "대학"@ko)
AnnotationAssertion(rdfs:label :University "university"@en)
AnnotationAssertion(rdfs:label :University "universidade"@pt)
AnnotationAssertion(rdfs:label :University "universiteit"@nl)
AnnotationAssertion(rdfs:label :University "大学"@ja)
AnnotationAssertion(rdfs:label :University "universidad"@es)
AnnotationAssertion(rdfs:label :University "πανεπιστήμιο"@el)
EquivalentClasses(:University <http://schema.org/CollegeOrUniversity>)
SubClassOf(:University :EducationalInstitution)
Declaration(Class(:Unknown))
AnnotationAssertion(rdfs:label :Unknown "Bilinmeyen"@tr)
AnnotationAssertion(rdfs:label :Unknown "Onbekend"@nl)
AnnotationAssertion(rdfs:label :Unknown "άγνωστος"@el)
AnnotationAssertion(rdfs:label :Unknown "Unknown"@en)
AnnotationAssertion(rdfs:label :Unknown "Inconnu"@fr)
AnnotationAssertion(rdfs:label :Unknown "無知"@ja)
SubClassOf(:Unknown owl:Thing)
Declaration(Class(:Valley))
AnnotationAssertion(rdfs:label :Valley "谷"@ja)
AnnotationAssertion(rdfs:label :Valley "vallei"@nl)
AnnotationAssertion(rdfs:label :Valley "vallée"@fr)
AnnotationAssertion(rdfs:comment :Valley "a depression with predominant extent in one direction"@en)
AnnotationAssertion(rdfs:label :Valley "tal"@de)
AnnotationAssertion(rdfs:label :Valley "Κοιλάδα"@el)
AnnotationAssertion(rdfs:label :Valley "valley"@en)
AnnotationAssertion(rdfs:label :Valley "valle"@it)
SubClassOf(:Valley :NaturalPlace)
Declaration(Class(:Vein))
AnnotationAssertion(rdfs:label :Vein "veia"@pt)
AnnotationAssertion(rdfs:label :Vein "veine"@fr)
AnnotationAssertion(rdfs:label :Vein "φλέβα"@el)
AnnotationAssertion(rdfs:label :Vein "vein"@en)
AnnotationAssertion(rdfs:label :Vein "Vene"@de)
AnnotationAssertion(rdfs:label :Vein "ader"@nl)
AnnotationAssertion(rdfs:label :Vein "静脈"@ja)
SubClassOf(:Vein :AnatomicalStructure)
Declaration(Class(:Venue))
AnnotationAssertion(rdfs:label :Venue "venue"@en)
SubClassOf(:Venue :Building)
Declaration(Class(:VicePresident))
AnnotationAssertion(rdfs:label :VicePresident "Vizepräsident"@de)
AnnotationAssertion(rdfs:label :VicePresident "vice président"@fr)
AnnotationAssertion(rdfs:label :VicePresident "αντιπρόεδρος"@el)
AnnotationAssertion(rdfs:label :VicePresident "vice president"@en)
SubClassOf(:VicePresident :Politician)
Declaration(Class(:VicePrimeMinister))
AnnotationAssertion(rdfs:label :VicePrimeMinister "vice prime minister"@en)
AnnotationAssertion(rdfs:label :VicePrimeMinister "αντιπρωθυπουργός"@el)
AnnotationAssertion(rdfs:label :VicePrimeMinister "vice premier ministre"@fr)
SubClassOf(:VicePrimeMinister :Politician)
Declaration(Class(:VideoGame))
AnnotationAssertion(rdfs:label :VideoGame "βιντεοπαιχνίδι"@el)
AnnotationAssertion(rdfs:label :VideoGame "비디오 게임"@ko)
AnnotationAssertion(rdfs:label :VideoGame "videojuego"@es)
AnnotationAssertion(rdfs:label :VideoGame "video game / jogo"@pt)
AnnotationAssertion(rdfs:label :VideoGame "テレビゲーム"@ja)
AnnotationAssertion(rdfs:label :VideoGame "jeux vidéo"@fr)
AnnotationAssertion(rdfs:label :VideoGame "video game"@en)
AnnotationAssertion(rdfs:comment :VideoGame "A video game is an electronic game that involves interaction with a user interface to generate visual feedback on a video device."@en)
AnnotationAssertion(rdfs:label :VideoGame "Videospiel"@de)
SubClassOf(:VideoGame :Software)
Declaration(Class(:VideogamesLeague))
AnnotationAssertion(rdfs:label :VideogamesLeague "videogames league"@en)
AnnotationAssertion(rdfs:label :VideogamesLeague "ligue de jeux vidéo"@fr)
AnnotationAssertion(rdfs:comment :VideogamesLeague "A group of sports teams or person that compete against each other in videogames."@en)
SubClassOf(:VideogamesLeague :SportsLeague)
Declaration(Class(:Village))
AnnotationAssertion(rdfs:label :Village "χωριό"@el)
AnnotationAssertion(rdfs:label :Village "village"@en)
AnnotationAssertion(rdfs:comment :Village "a clustered human settlement or community, usually smaller a town"@en)
AnnotationAssertion(rdfs:label :Village "村"@ja)
AnnotationAssertion(rdfs:label :Village "desa"@id)
AnnotationAssertion(rdfs:label :Village "wieś"@pl)
AnnotationAssertion(rdfs:label :Village "village"@fr)
AnnotationAssertion(rdfs:label :Village "dorf"@de)
AnnotationAssertion(rdfs:label :Village "dorp"@nl)
SubClassOf(:Village :Settlement)
Declaration(Class(:VoiceActor))
AnnotationAssertion(rdfs:label :VoiceActor "acteur de doublage"@fr)
AnnotationAssertion(rdfs:label :VoiceActor "声優"@ja)
AnnotationAssertion(rdfs:label :VoiceActor "stemacteur"@nl)
AnnotationAssertion(rdfs:label :VoiceActor "voice actor"@en)
AnnotationAssertion(rdfs:label :VoiceActor "성우"@ko)
SubClassOf(:VoiceActor :Actor)
Declaration(Class(:Volcano))
AnnotationAssertion(rdfs:label :Volcano "vulkaan"@nl)
AnnotationAssertion(rdfs:label :Volcano "ηφαίστειο"@el)
AnnotationAssertion(rdfs:label :Volcano "volcan"@fr)
AnnotationAssertion(rdfs:comment :Volcano "A volcano is currently subclass of naturalplace, but it might also be considered a mountain."@en)
AnnotationAssertion(rdfs:label :Volcano "volcano"@en)
AnnotationAssertion(rdfs:comment :Volcano "Το ηφαίστειο είναι υποκατηγορία φυσικών καταστάσεων, αλλά μπορεί επίσης να θεωρηθεί και βουνό."@el)
AnnotationAssertion(rdfs:label :Volcano "Vulkan"@de)
AnnotationAssertion(rdfs:label :Volcano "火山"@ja)
SubClassOf(:Volcano :NaturalPlace)
Declaration(Class(:VolleyballCoach))
AnnotationAssertion(rdfs:label :VolleyballCoach "προπονητής βόλλεϋ"@el)
AnnotationAssertion(rdfs:label :VolleyballCoach "volleyball coach"@en)
SubClassOf(:VolleyballCoach :Person)
Declaration(Class(:VolleyballLeague))
AnnotationAssertion(rdfs:label :VolleyballLeague "Ομοσπονδία Πετοσφαίρισης"@el)
AnnotationAssertion(rdfs:label :VolleyballLeague "volleyball league"@en)
AnnotationAssertion(rdfs:comment :VolleyballLeague "A group of sports teams that compete against each other in volleyball."@en)
AnnotationAssertion(rdfs:label :VolleyballLeague "ligue de volleyball"@fr)
SubClassOf(:VolleyballLeague :SportsLeague)
Declaration(Class(:VolleyballPlayer))
AnnotationAssertion(rdfs:label :VolleyballPlayer "volleyball player"@en)
AnnotationAssertion(rdfs:label :VolleyballPlayer "배구 선수"@ko)
AnnotationAssertion(rdfs:label :VolleyballPlayer "volleyballer"@nl)
AnnotationAssertion(rdfs:label :VolleyballPlayer "siatkarz"@pl)
AnnotationAssertion(rdfs:label :VolleyballPlayer "παίχτης βόλεϊ"@el)
SubClassOf(:VolleyballPlayer :Athlete)
Declaration(Class(:WaterTower))
AnnotationAssertion(rdfs:label :WaterTower "Serbatoio idrico a torre"@it)
AnnotationAssertion(rdfs:label :WaterTower "Wasserturm"@de)
AnnotationAssertion(rdfs:label :WaterTower "Château d'eau"@fr)
AnnotationAssertion(rdfs:comment :WaterTower "une construction destinée à entreposer l'eau, et placée en général sur un sommet géographique pour permettre de la distribuer sous pression"@fr)
AnnotationAssertion(rdfs:label :WaterTower "Watertoren"@nl)
AnnotationAssertion(rdfs:comment :WaterTower "a construction designed to store larger quantities of water at a place of some elevation in order to keep pressure on the water provision system"@en)
AnnotationAssertion(rdfs:label :WaterTower "Water tower"@en)
SubClassOf(:WaterTower :Building)
Declaration(Class(:Watermill))
AnnotationAssertion(rdfs:label :Watermill "Watermolen"@nl)
AnnotationAssertion(rdfs:label :Watermill "mulino ad acqua"@it)
AnnotationAssertion(rdfs:label :Watermill "Moulin à eau"@fr)
AnnotationAssertion(rdfs:comment :Watermill "A watermill is a structure that uses a water wheel or turbine to drive a mechanical process such as flour, lumber or textile production, or metal shaping (rolling, grinding or wire drawing)"@en)
AnnotationAssertion(rdfs:label :Watermill "Νερόμυλος"@el)
AnnotationAssertion(rdfs:label :Watermill "Watermill"@en)
AnnotationAssertion(rdfs:label :Watermill "Wassermühle"@de)
SubClassOf(:Watermill :Mill)
Declaration(Class(:WaterwayTunnel))
AnnotationAssertion(rdfs:label :WaterwayTunnel "waterway tunnel"@en)
AnnotationAssertion(rdfs:label :WaterwayTunnel "Kanaltunnel"@de)
SubClassOf(:WaterwayTunnel :Tunnel)
Declaration(Class(:Weapon))
AnnotationAssertion(rdfs:label :Weapon "arme"@fr)
AnnotationAssertion(rdfs:label :Weapon "weapon"@en)
AnnotationAssertion(rdfs:label :Weapon "όπλο"@el)
AnnotationAssertion(rdfs:label :Weapon "wapen"@nl)
AnnotationAssertion(rdfs:label :Weapon "武器"@ja)
AnnotationAssertion(rdfs:label :Weapon "Waffe"@de)
AnnotationAssertion(rdfs:label :Weapon "무기"@ko)
SubClassOf(:Weapon :Device)
SubClassOf(:Weapon <http://schema.org/Product>)
Declaration(Class(:Website))
AnnotationAssertion(rdfs:label :Website "website"@en)
AnnotationAssertion(rdfs:label :Website "ウェブサイト"@ja)
AnnotationAssertion(rdfs:label :Website "Webseite"@de)
AnnotationAssertion(rdfs:label :Website "웹사이트"@ko)
AnnotationAssertion(rdfs:label :Website "Ιστότοπος"@el)
AnnotationAssertion(rdfs:label :Website "site web"@fr)
EquivalentClasses(:Website <http://schema.org/WebPage>)
SubClassOf(:Website :Work)
Declaration(Class(:WindMotor))
AnnotationAssertion(rdfs:comment :WindMotor "A wind-driven turbine that adapts itself to wind direction and to wind-force. Is considered to be a class in its own, despite the wind as common factor with Windmill."@en)
AnnotationAssertion(rdfs:label :WindMotor "Roosmolen"@nl)
AnnotationAssertion(rdfs:label :WindMotor "Wind motor"@en)
SubClassOf(:WindMotor :Mill)
Declaration(Class(:Windmill))
AnnotationAssertion(rdfs:label :Windmill "Windmolen"@nl)
AnnotationAssertion(rdfs:comment :Windmill "Le moulin à vent est un dispositif qui transforme l’énergie éolienne (énergie cinétique du vent) en mouvement rotatif au moyen d’ailes ajustables."@fr)
AnnotationAssertion(rdfs:label :Windmill "Molinos de viento"@es)
AnnotationAssertion(rdfs:label :Windmill "Windmill"@en)
AnnotationAssertion(rdfs:label :Windmill "moulin à vent"@fr)
AnnotationAssertion(rdfs:label :Windmill "mulino a vento"@it)
AnnotationAssertion(rdfs:label :Windmill "Windmühle"@de)
AnnotationAssertion(rdfs:label :Windmill "Ανεμόμυλος"@el)
AnnotationAssertion(rdfs:comment :Windmill "A windmill is a machine that converts the energy of wind into rotational energy by means of vanes called sails"@en)
SubClassOf(:Windmill :Mill)
Declaration(Class(:Wine))
AnnotationAssertion(rdfs:label :Wine "vino"@it)
AnnotationAssertion(rdfs:label :Wine "wine"@en)
AnnotationAssertion(rdfs:label :Wine "vino"@es)
AnnotationAssertion(rdfs:label :Wine "vin"@fr)
AnnotationAssertion(rdfs:label :Wine "κρασί"@el)
AnnotationAssertion(rdfs:label :Wine "ワイン"@ja)
AnnotationAssertion(rdfs:label :Wine "wijn"@nl)
AnnotationAssertion(rdfs:label :Wine "Wein"@de)
SubClassOf(:Wine :Beverage)
Declaration(Class(:WineRegion))
AnnotationAssertion(rdfs:label :WineRegion "ワイン産地"@ja)
AnnotationAssertion(rdfs:label :WineRegion "wine region"@en)
AnnotationAssertion(rdfs:label :WineRegion "wijnstreek"@nl)
AnnotationAssertion(rdfs:label :WineRegion "région viticole"@fr)
SubClassOf(:WineRegion :Place)
Declaration(Class(:WomensTennisAssociationTournament))
AnnotationAssertion(rdfs:label :WomensTennisAssociationTournament "Women's Tennis Association tournament"@en)
AnnotationAssertion(rdfs:label :WomensTennisAssociationTournament "Tournoi de la Women's Tennis Association"@fr)
SubClassOf(:WomensTennisAssociationTournament :SportsEvent)
Declaration(Class(:Work))
AnnotationAssertion(rdfs:label :Work "Werk"@de)
AnnotationAssertion(rdfs:label :Work "werk"@nl)
AnnotationAssertion(rdfs:label :Work "œuvre"@fr)
AnnotationAssertion(rdfs:label :Work "work"@en)
AnnotationAssertion(rdfs:label :Work "obra"@pt)
AnnotationAssertion(rdfs:label :Work "δημιουργία"@el)
AnnotationAssertion(rdfs:label :Work "仕事"@ja)
EquivalentClasses(:Work <http://schema.org/CreativeWork>)
SubClassOf(:Work owl:Thing)
DisjointClasses(:Work <http://dbpedia.org/ontology/wgs84_pos:SpatialThing>)
Declaration(Class(:WorldHeritageSite))
AnnotationAssertion(rdfs:label :WorldHeritageSite "site du patrimoine mondial"@fr)
AnnotationAssertion(rdfs:label :WorldHeritageSite "세계유산"@ko)
AnnotationAssertion(rdfs:label :WorldHeritageSite "世界遺産"@ja)
AnnotationAssertion(rdfs:label :WorldHeritageSite "World Heritage Site"@en)
AnnotationAssertion(rdfs:label :WorldHeritageSite "Μνημείο Παγκόσμιας Πολιτιστικής Κληρονομιάς (Πληροφορίες ΠΠΚ)"@el)
AnnotationAssertion(rdfs:comment :WorldHeritageSite "A UNESCO World Heritage Site is a site (such as a forest, mountain, lake, desert, monument, building, complex, or city) that is on the list that is maintained by the international World Heritage Programme administered by the UNESCO World Heritage Committee, composed of 21 state parties which are elected by their General Assembly for a four-year term. A World Heritage Site is a place of either cultural or physical significance."@en)
SubClassOf(:WorldHeritageSite :Place)
Declaration(Class(:Wrestler))
AnnotationAssertion(rdfs:label :Wrestler "レスラー"@ja)
AnnotationAssertion(rdfs:label :Wrestler "παλαιστής"@el)
AnnotationAssertion(rdfs:label :Wrestler "worstelaar"@nl)
AnnotationAssertion(rdfs:label :Wrestler "lutteur"@fr)
AnnotationAssertion(rdfs:label :Wrestler "wrestler"@en)
SubClassOf(:Wrestler :Athlete)
Declaration(Class(:WrestlingEvent))
AnnotationAssertion(rdfs:label :WrestlingEvent "worstelevenement"@nl)
AnnotationAssertion(rdfs:label :WrestlingEvent "match de catch"@fr)
AnnotationAssertion(rdfs:label :WrestlingEvent "wrestling event"@en)
SubClassOf(:WrestlingEvent :SportsEvent)
Declaration(Class(:Writer))
AnnotationAssertion(rdfs:label :Writer "συγγραφέας"@el)
AnnotationAssertion(rdfs:label :Writer "writer"@en)
AnnotationAssertion(rdfs:label :Writer "auteur"@nl)
AnnotationAssertion(rdfs:label :Writer "작가"@ko)
AnnotationAssertion(rdfs:label :Writer "écrivain"@fr)
AnnotationAssertion(rdfs:label :Writer "schriftsteller"@de)
AnnotationAssertion(rdfs:label :Writer "escritor"@es)
AnnotationAssertion(rdfs:label :Writer "著作家"@ja)
SubClassOf(:Writer :Artist)
Declaration(Class(:WrittenWork))
AnnotationAssertion(rdfs:label :WrittenWork "geschreven werk"@nl)
AnnotationAssertion(rdfs:label :WrittenWork "obra escrita"@es)
AnnotationAssertion(rdfs:comment :WrittenWork "Ein geschriebenes Erzeugnis ist jede Art von Text der geschrieben wurde um ihn zu lesen (z.B. Bücher, Zeitungen, Artikel)."@de)
AnnotationAssertion(rdfs:label :WrittenWork "geschriebenes Erzeugnis"@de)
AnnotationAssertion(rdfs:comment :WrittenWork "Written work is any text written to read it (e.g.: books, newspaper, articles)"@en)
AnnotationAssertion(rdfs:label :WrittenWork "œuvre écrite"@fr)
AnnotationAssertion(rdfs:label :WrittenWork "written work"@en)
SubClassOf(:WrittenWork :Work)
Declaration(Class(:Year))
AnnotationAssertion(rdfs:label :Year "année"@fr)
AnnotationAssertion(rdfs:label :Year "jaar"@nl)
AnnotationAssertion(rdfs:label :Year "Jahr"@de)
AnnotationAssertion(rdfs:label :Year "ano"@pt)
AnnotationAssertion(rdfs:label :Year "έτος"@el)
AnnotationAssertion(rdfs:label :Year "año"@es)
AnnotationAssertion(rdfs:label :Year "年"@ja)
AnnotationAssertion(rdfs:label :Year "year"@en)
SubClassOf(:Year :TimePeriod)
Declaration(Class(:YearInSpaceflight))
AnnotationAssertion(rdfs:label :YearInSpaceflight "year in spaceflight"@en)
AnnotationAssertion(rdfs:label :YearInSpaceflight "année de vols spatiaux"@fr)
SubClassOf(:YearInSpaceflight :TimePeriod)
Declaration(Class(<http://dbpedia.org/ontology/cidoccrm:E4_Period>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/cidoccrm:E4_Period> "E4 Periode"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/cidoccrm:E4_Period> "E4 Period"@en)
EquivalentClasses(<http://dbpedia.org/ontology/cidoccrm:E4_Period> :HistoricalPeriod)
SubClassOf(<http://dbpedia.org/ontology/cidoccrm:E4_Period> owl:Thing)
DisjointClasses(<http://dbpedia.org/ontology/wgs84_pos:SpatialThing> :Organisation)
DisjointClasses(<http://dbpedia.org/ontology/wgs84_pos:SpatialThing> :Work)
EquivalentClasses(<http://purl.org/ontology/bibo/Book> :Book)
EquivalentClasses(<http://schema.org/AdministrativeArea> :AdministrativeRegion)
EquivalentClasses(<http://schema.org/Airport> :Airport)
EquivalentClasses(<http://schema.org/BodyOfWater> :BodyOfWater)
EquivalentClasses(<http://schema.org/Book> :Book)
EquivalentClasses(<http://schema.org/Canal> :Canal)
EquivalentClasses(<http://schema.org/City> :City)
EquivalentClasses(<http://schema.org/CollegeOrUniversity> :College)
EquivalentClasses(<http://schema.org/CollegeOrUniversity> :University)
EquivalentClasses(<http://schema.org/Continent> :Continent)
EquivalentClasses(<http://schema.org/Country> :Country)
EquivalentClasses(<http://schema.org/CreativeWork> :Work)
EquivalentClasses(<http://schema.org/EducationalOrganization> :EducationalInstitution)
EquivalentClasses(<http://schema.org/Event> :Event)
EquivalentClasses(<http://schema.org/GovernmentOrganization> :GovernmentAgency)
EquivalentClasses(<http://schema.org/Hospital> :Hospital)
EquivalentClasses(<http://schema.org/Hotel> :Hotel)
EquivalentClasses(<http://schema.org/LakeBodyOfWater> :Lake)
EquivalentClasses(<http://schema.org/LandmarksOrHistoricalBuildings> :HistoricBuilding)
EquivalentClasses(<http://schema.org/LandmarksOrHistoricalBuildings> :HistoricPlace)
EquivalentClasses(<http://schema.org/Language> :Language)
EquivalentClasses(<http://schema.org/Library> :Library)
EquivalentClasses(<http://schema.org/Mountain> :Mountain)
EquivalentClasses(<http://schema.org/Movie> :Film)
EquivalentClasses(<http://schema.org/Movie> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Movie>)
EquivalentClasses(<http://schema.org/Museum> :Museum)
EquivalentClasses(<http://schema.org/MusicAlbum> :Album)
EquivalentClasses(<http://schema.org/MusicRecording> :Song)
EquivalentClasses(<http://schema.org/Organization> :Organisation)
EquivalentClasses(<http://schema.org/Painting> :Painting)
EquivalentClasses(<http://schema.org/Park> :Park)
EquivalentClasses(<http://schema.org/Person> :Person)
EquivalentClasses(<http://schema.org/Person> <http://www.semanticweb.org/matac93/ontology/fao#Person>)
EquivalentClasses(<http://schema.org/Person> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person>)
EquivalentClasses(<http://schema.org/Place> :Place)
EquivalentClasses(<http://schema.org/RadioStation> :RadioStation)
EquivalentClasses(<http://schema.org/Restaurant> :Restaurant)
EquivalentClasses(<http://schema.org/RiverBodyOfWater> :River)
EquivalentClasses(<http://schema.org/School> :School)
EquivalentClasses(<http://schema.org/Sculpture> :Sculpture)
EquivalentClasses(<http://schema.org/SeaBodyOfWater> :Sea)
EquivalentClasses(<http://schema.org/ShoppingCenter> :ShoppingMall)
EquivalentClasses(<http://schema.org/SkiResort> :SkiArea)
EquivalentClasses(<http://schema.org/SportsEvent> :SportsEvent)
EquivalentClasses(<http://schema.org/SportsTeam> :SportsTeam)
EquivalentClasses(<http://schema.org/StadiumOrArena> :Arena)
EquivalentClasses(<http://schema.org/StadiumOrArena> :Stadium)
EquivalentClasses(<http://schema.org/TVEpisode> :TelevisionEpisode)
EquivalentClasses(<http://schema.org/TelevisionStation> :TelevisionStation)
EquivalentClasses(<http://schema.org/WebPage> :Website)
EquivalentClasses(<http://www.semanticweb.org/matac93/ontology/fao#Person> <http://schema.org/Person>)
EquivalentClasses(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Movie> <http://schema.org/Movie>)
EquivalentClasses(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person> <http://schema.org/Person>)
EquivalentClasses(<http://www.w3.org/2004/02/skos/core#OrderedCollection> :List)
EquivalentClasses(<http://xmlns.com/foaf/0.1/Person> :Person)
Declaration(ObjectProperty(:academicAdvisor))
AnnotationAssertion(rdfs:label :academicAdvisor "ακαδημαϊκοί_σύμβουλοι"@el)
AnnotationAssertion(rdfs:label :academicAdvisor "promotor"@nl)
AnnotationAssertion(rdfs:label :academicAdvisor "academic advisor"@en)
ObjectPropertyDomain(:academicAdvisor :Scientist)
ObjectPropertyRange(:academicAdvisor :Person)
Declaration(ObjectProperty(:academicDiscipline))
AnnotationAssertion(rdfs:label :academicDiscipline "wissenschaftliche Disziplin"@de)
AnnotationAssertion(rdfs:label :academicDiscipline "academic discipline"@en)
AnnotationAssertion(rdfs:comment :academicDiscipline "An academic discipline, or field of study, is a branch of knowledge that is taught and researched at the college or university level. Disciplines are defined (in part), and recognized by the academic journals in which research is published, and the learned societies and academic departments or faculties to which their practitioners belong."@en)
ObjectPropertyDomain(:academicDiscipline :AcademicJournal)
Declaration(ObjectProperty(:academyAward))
AnnotationAssertion(rdfs:label :academyAward "Βραβείο ακαδημίας"@el)
AnnotationAssertion(rdfs:label :academyAward "Academy Award"@en)
ObjectPropertyDomain(:academyAward :Artist)
ObjectPropertyRange(:academyAward :Award)
Declaration(ObjectProperty(:achievement))
AnnotationAssertion(rdfs:label :achievement "haut fait, accomplissement"@fr)
AnnotationAssertion(rdfs:label :achievement "achievement"@en)
AnnotationAssertion(rdfs:label :achievement "κατόρθωμα"@el)
AnnotationAssertion(rdfs:label :achievement "logro"@es)
ObjectPropertyDomain(:achievement :Person)
Declaration(ObjectProperty(:actScore))
AnnotationAssertion(rdfs:comment :actScore "ποιό πρόσφατες μέσες βαθμολογίες ACT"@el)
AnnotationAssertion(rdfs:label :actScore "ACT score"@en)
AnnotationAssertion(rdfs:comment :actScore "most recent average ACT scores"@en)
AnnotationAssertion(rdfs:label :actScore "ACT σκορ"@el)
ObjectPropertyDomain(:actScore :School)
Declaration(ObjectProperty(:actingHeadteacher))
AnnotationAssertion(rdfs:label :actingHeadteacher "acting headteacher"@en)
AnnotationAssertion(rdfs:label :actingHeadteacher "διευθυντής σχολείου"@el)
ObjectPropertyDomain(:actingHeadteacher :School)
ObjectPropertyRange(:actingHeadteacher :Person)
Declaration(ObjectProperty(:addressInRoad))
AnnotationAssertion(rdfs:label :addressInRoad "address in road"@en)
AnnotationAssertion(rdfs:comment :addressInRoad "A building, organisation or other thing that is located in the road."@en)
AnnotationAssertion(rdfs:label :addressInRoad "διεύθυνση στον δρόμο"@el)
AnnotationAssertion(rdfs:comment :addressInRoad "Ένα κτήριο, οργανισμός ή κάτι άλλο που βρίσκεται στον δρόμο."@el)
AnnotationAssertion(rdfs:label :addressInRoad "Adresse in Straße"@de)
ObjectPropertyDomain(:addressInRoad :Road)
Declaration(ObjectProperty(:adjacentSettlement))
AnnotationAssertion(rdfs:label :adjacentSettlement "adjacent settlement of a switzerland settlement"@en)
ObjectPropertyRange(:adjacentSettlement :Settlement)
Declaration(ObjectProperty(:administrativeCenter))
AnnotationAssertion(rdfs:label :administrativeCenter "administrative center"@en)
ObjectPropertyRange(:administrativeCenter :Place)
Declaration(ObjectProperty(:administrativeCollectivity))
AnnotationAssertion(rdfs:label :administrativeCollectivity "διοικητική συλλογικότητα"@el)
AnnotationAssertion(rdfs:label :administrativeCollectivity "administratieve gemeenschap"@nl)
AnnotationAssertion(rdfs:label :administrativeCollectivity "administrative collectivity"@en)
ObjectPropertyDomain(:administrativeCollectivity :Settlement)
ObjectPropertyRange(:administrativeCollectivity :PopulatedPlace)
Declaration(ObjectProperty(:administrativeDistrict))
AnnotationAssertion(rdfs:label :administrativeDistrict "administrative district"@en)
AnnotationAssertion(rdfs:label :administrativeDistrict "provincie"@nl)
AnnotationAssertion(rdfs:label :administrativeDistrict "δήμος"@el)
ObjectPropertyDomain(:administrativeDistrict :Settlement)
ObjectPropertyRange(:administrativeDistrict :PopulatedPlace)
Declaration(ObjectProperty(:administrator))
AnnotationAssertion(rdfs:label :administrator "administrator"@en)
AnnotationAssertion(rdfs:label :administrator "διαχειριστής"@el)
ObjectPropertyDomain(:administrator :School)
ObjectPropertyRange(:administrator :Person)
Declaration(ObjectProperty(:affiliation))
AnnotationAssertion(rdfs:label :affiliation "Europees lidmaatschap"@nl)
AnnotationAssertion(rdfs:label :affiliation "ιστολόγιο"@el)
AnnotationAssertion(rdfs:label :affiliation "affiliation"@en)
ObjectPropertyDomain(:affiliation :Organisation)
ObjectPropertyRange(:affiliation :Organisation)
Declaration(ObjectProperty(:afiAward))
AnnotationAssertion(rdfs:label :afiAward "βραβείο AFI"@el)
AnnotationAssertion(rdfs:label :afiAward "AFI Award"@en)
ObjectPropertyDomain(:afiAward :Artist)
ObjectPropertyRange(:afiAward :Award)
Declaration(ObjectProperty(:aircraftAttack))
AnnotationAssertion(rdfs:label :aircraftAttack "aircraft attack"@en)
AnnotationAssertion(rdfs:label :aircraftAttack "επίθεση αεροσκάφους"@el)
ObjectPropertyDomain(:aircraftAttack :MilitaryUnit)
ObjectPropertyRange(:aircraftAttack :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftBomber))
AnnotationAssertion(rdfs:label :aircraftBomber "aircraft bomber"@en)
AnnotationAssertion(rdfs:label :aircraftBomber "βομβαρδιστικό αεροσκάφος"@el)
ObjectPropertyDomain(:aircraftBomber :MilitaryUnit)
ObjectPropertyRange(:aircraftBomber :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftElectronic))
AnnotationAssertion(rdfs:label :aircraftElectronic "aircraft electronic"@en)
AnnotationAssertion(rdfs:label :aircraftElectronic "ηλεκτρονικό αεροσκάφος"@el)
ObjectPropertyDomain(:aircraftElectronic :MilitaryUnit)
ObjectPropertyRange(:aircraftElectronic :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftFighter))
AnnotationAssertion(rdfs:label :aircraftFighter "aircraft fighter"@en)
AnnotationAssertion(rdfs:label :aircraftFighter "μαχητικό αεροσκάφος"@el)
ObjectPropertyDomain(:aircraftFighter :MilitaryUnit)
ObjectPropertyRange(:aircraftFighter :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopter))
AnnotationAssertion(rdfs:label :aircraftHelicopter "aircraft helicopter"@en)
AnnotationAssertion(rdfs:label :aircraftHelicopter "ελικοφόρο αεροσκάφος"@el)
ObjectPropertyDomain(:aircraftHelicopter :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopter :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterAttack))
AnnotationAssertion(rdfs:label :aircraftHelicopterAttack "aircraft helicopter attack"@en)
AnnotationAssertion(rdfs:label :aircraftHelicopterAttack "επίθεση ελικοφόρων αεροσκαφών"@el)
ObjectPropertyDomain(:aircraftHelicopterAttack :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterAttack :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterCargo))
AnnotationAssertion(rdfs:label :aircraftHelicopterCargo "φορτίο ελικοφόρου αεροσκάφους"@el)
AnnotationAssertion(rdfs:label :aircraftHelicopterCargo "aircraft helicopter cargo"@en)
ObjectPropertyDomain(:aircraftHelicopterCargo :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterCargo :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterMultirole))
AnnotationAssertion(rdfs:label :aircraftHelicopterMultirole "ελικοφόρο αεροσκάφος πολλαπλών ρόλων"@el)
AnnotationAssertion(rdfs:label :aircraftHelicopterMultirole "aircraft helicopter multirole"@en)
ObjectPropertyDomain(:aircraftHelicopterMultirole :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterMultirole :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterObservation))
AnnotationAssertion(rdfs:label :aircraftHelicopterObservation "aircraft helicopter observation"@en)
AnnotationAssertion(rdfs:label :aircraftHelicopterObservation "παρατήρηση ελικοφόρου αεροσκάφους"@el)
ObjectPropertyDomain(:aircraftHelicopterObservation :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterObservation :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterTransport))
AnnotationAssertion(rdfs:label :aircraftHelicopterTransport "μεταφορές που πραγματοποιούνται με ελικοφόρο αεροσκάφος"@el)
AnnotationAssertion(rdfs:label :aircraftHelicopterTransport "aircraft helicopter transport"@en)
ObjectPropertyDomain(:aircraftHelicopterTransport :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterTransport :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftHelicopterUtility))
AnnotationAssertion(rdfs:label :aircraftHelicopterUtility "aircraft helicopter utility"@en)
ObjectPropertyDomain(:aircraftHelicopterUtility :MilitaryUnit)
ObjectPropertyRange(:aircraftHelicopterUtility :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftInterceptor))
AnnotationAssertion(rdfs:label :aircraftInterceptor "aircraft interceptor"@en)
AnnotationAssertion(rdfs:label :aircraftInterceptor "αναχαίτιση αεροσκάφους"@el)
ObjectPropertyDomain(:aircraftInterceptor :MilitaryUnit)
ObjectPropertyRange(:aircraftInterceptor :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftPatrol))
AnnotationAssertion(rdfs:label :aircraftPatrol "περιπολία αεροσκάφους"@el)
AnnotationAssertion(rdfs:label :aircraftPatrol "aircraft patrol"@en)
ObjectPropertyDomain(:aircraftPatrol :MilitaryUnit)
ObjectPropertyRange(:aircraftPatrol :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftRecon))
AnnotationAssertion(rdfs:label :aircraftRecon "aircraft recon"@en)
ObjectPropertyDomain(:aircraftRecon :MilitaryUnit)
ObjectPropertyRange(:aircraftRecon :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftTrainer))
AnnotationAssertion(rdfs:label :aircraftTrainer "aircraft trainer"@en)
ObjectPropertyDomain(:aircraftTrainer :MilitaryUnit)
ObjectPropertyRange(:aircraftTrainer :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftTransport))
AnnotationAssertion(rdfs:label :aircraftTransport "aircraft transport"@en)
AnnotationAssertion(rdfs:label :aircraftTransport "αερομεταφορές"@el)
ObjectPropertyDomain(:aircraftTransport :MilitaryUnit)
ObjectPropertyRange(:aircraftTransport :MeanOfTransportation)
Declaration(ObjectProperty(:aircraftUser))
AnnotationAssertion(rdfs:label :aircraftUser "χρήστης αεροσκάφους"@el)
AnnotationAssertion(rdfs:label :aircraftUser "aircraft user"@en)
AnnotationAssertion(rdfs:label :aircraftUser "usuario del avión"@es)
ObjectPropertyDomain(:aircraftUser :Aircraft)
ObjectPropertyRange(:aircraftUser :Organisation)
Declaration(ObjectProperty(:album))
AnnotationAssertion(rdfs:label :album "album"@nl)
AnnotationAssertion(rdfs:label :album "album"@en)
AnnotationAssertion(rdfs:label :album "από το άλμπουμ"@el)
ObjectPropertyRange(:album :Album)
Declaration(ObjectProperty(:alliance))
AnnotationAssertion(rdfs:label :alliance "alliance"@en)
AnnotationAssertion(rdfs:label :alliance "συμμαχία"@el)
ObjectPropertyDomain(:alliance :Airline)
Declaration(ObjectProperty(:almaMater))
AnnotationAssertion(rdfs:label :almaMater "alma mater"@en)
AnnotationAssertion(rdfs:label :almaMater "σπουδές"@el)
AnnotationAssertion(rdfs:comment :almaMater "schools that they attended"@en)
ObjectPropertyDomain(:almaMater :Person)
ObjectPropertyRange(:almaMater :EducationalInstitution)
Declaration(ObjectProperty(:alongside))
AnnotationAssertion(rdfs:label :alongside "alongside"@en)
AnnotationAssertion(rdfs:label :alongside "δίπλα"@el)
ObjectPropertyRange(:alongside :Person)
Declaration(ObjectProperty(:alpsGroup))
AnnotationAssertion(rdfs:label :alpsGroup "Alps group"@en)
AnnotationAssertion(rdfs:comment :alpsGroup "the Alps group to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsGroup "ομάδα των άλπεων"@el)
AnnotationAssertion(rdfs:label :alpsGroup "gruppo alpino"@it)
ObjectPropertyDomain(:alpsGroup :Mountain)
ObjectPropertyRange(:alpsGroup :MountainRange)
Declaration(ObjectProperty(:alpsMainPart))
AnnotationAssertion(rdfs:label :alpsMainPart "Alps main part"@en)
AnnotationAssertion(rdfs:comment :alpsMainPart "the Alps main part to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsMainPart "κύριο μέρος των άλπεων"@el)
AnnotationAssertion(rdfs:label :alpsMainPart "grande parte alpina"@it)
ObjectPropertyDomain(:alpsMainPart :Mountain)
ObjectPropertyRange(:alpsMainPart :MountainRange)
Declaration(ObjectProperty(:alpsMajorSector))
AnnotationAssertion(rdfs:label :alpsMajorSector "grande settore alpino"@it)
AnnotationAssertion(rdfs:comment :alpsMajorSector "the Alps major sector to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsMajorSector "Alps major sector"@en)
AnnotationAssertion(rdfs:label :alpsMajorSector "σημαντικότερος τομέας των άλπεων"@el)
ObjectPropertyDomain(:alpsMajorSector :Mountain)
ObjectPropertyRange(:alpsMajorSector :MountainRange)
Declaration(ObjectProperty(:alpsSection))
AnnotationAssertion(rdfs:label :alpsSection "sezione alpina"@it)
AnnotationAssertion(rdfs:label :alpsSection "τμήμα των άλπεων"@el)
AnnotationAssertion(rdfs:comment :alpsSection "the Alps section to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsSection "Alps section"@en)
ObjectPropertyDomain(:alpsSection :Mountain)
ObjectPropertyRange(:alpsSection :MountainRange)
Declaration(ObjectProperty(:alpsSubgroup))
AnnotationAssertion(rdfs:label :alpsSubgroup "sottogruppo alpino"@it)
AnnotationAssertion(rdfs:label :alpsSubgroup "υποομάδα των άλπεων"@el)
AnnotationAssertion(rdfs:comment :alpsSubgroup "the Alps subgroup to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsSubgroup "Alps subgroup"@en)
ObjectPropertyDomain(:alpsSubgroup :Mountain)
ObjectPropertyRange(:alpsSubgroup :MountainRange)
Declaration(ObjectProperty(:alpsSubsection))
AnnotationAssertion(rdfs:label :alpsSubsection "Alps subsection"@en)
AnnotationAssertion(rdfs:label :alpsSubsection "sottosezione alpina"@it)
AnnotationAssertion(rdfs:label :alpsSubsection "Alps υποδιαίρεση των άλπεων"@el)
AnnotationAssertion(rdfs:comment :alpsSubsection "the Alps subsection to which the mountain belongs, according to the SOIUSA classification"@en)
ObjectPropertyDomain(:alpsSubsection :Mountain)
ObjectPropertyRange(:alpsSubsection :MountainRange)
Declaration(ObjectProperty(:alpsSupergroup))
AnnotationAssertion(rdfs:label :alpsSupergroup "Alps supergroup"@en)
AnnotationAssertion(rdfs:comment :alpsSupergroup "the Alps supergroup to which the mountain belongs, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsSupergroup "Alps υπερομάδα"@el)
AnnotationAssertion(rdfs:label :alpsSupergroup "supergruppo alpino"@it)
ObjectPropertyDomain(:alpsSupergroup :Mountain)
ObjectPropertyRange(:alpsSupergroup :MountainRange)
Declaration(ObjectProperty(:alumni))
AnnotationAssertion(rdfs:label :alumni "alumni"@en)
AnnotationAssertion(rdfs:label :alumni "απόφοιτοι πανεπιστημίου"@el)
ObjectPropertyDomain(:alumni :EducationalInstitution)
ObjectPropertyRange(:alumni :Person)
Declaration(ObjectProperty(:americanComedyAward))
AnnotationAssertion(rdfs:label :americanComedyAward "American Comedy Award"@en)
AnnotationAssertion(rdfs:label :americanComedyAward "αμερικάνικο βραβείο κωμωδίας"@el)
ObjectPropertyDomain(:americanComedyAward :Comedian)
ObjectPropertyRange(:americanComedyAward :Award)
Declaration(ObjectProperty(:animal))
AnnotationAssertion(rdfs:label :animal "動物"@ja)
AnnotationAssertion(rdfs:label :animal "Tier"@de)
AnnotationAssertion(rdfs:label :animal "ζώο"@el)
AnnotationAssertion(rdfs:label :animal "animal"@en)
AnnotationAssertion(rdfs:label :animal "animal"@fr)
AnnotationAssertion(rdfs:label :animal "beest"@nl)
ObjectPropertyRange(:animal :Animal)
Declaration(ObjectProperty(:animator))
AnnotationAssertion(rdfs:label :animator "animator"@en)
ObjectPropertyDomain(:animator :Cartoon)
ObjectPropertyRange(:animator :Agent)
Declaration(ObjectProperty(:anthem))
AnnotationAssertion(rdfs:label :anthem "volkslied"@nl)
AnnotationAssertion(rdfs:label :anthem "anthem"@en)
AnnotationAssertion(rdfs:label :anthem "ύμνος"@el)
AnnotationAssertion(rdfs:label :anthem "hino"@pt)
ObjectPropertyDomain(:anthem :PopulatedPlace)
ObjectPropertyRange(:anthem :Work)
Declaration(ObjectProperty(:apcPresident))
AnnotationAssertion(rdfs:label :apcPresident "apc president"@en)
ObjectPropertyRange(:apcPresident :Person)
Declaration(ObjectProperty(:appointer))
AnnotationAssertion(rdfs:label :appointer "appointer"@en)
ObjectPropertyRange(:appointer :Person)
Declaration(ObjectProperty(:archipelago))
AnnotationAssertion(rdfs:label :archipelago "archipel"@nl)
AnnotationAssertion(rdfs:label :archipelago "αρχιπέλαγος"@el)
AnnotationAssertion(rdfs:label :archipelago "archipelago"@en)
ObjectPropertyDomain(:archipelago :Atoll)
Declaration(ObjectProperty(:architect))
AnnotationAssertion(rdfs:label :architect "architect"@nl)
AnnotationAssertion(rdfs:label :architect "architect"@en)
AnnotationAssertion(rdfs:label :architect "architecte"@fr)
AnnotationAssertion(rdfs:label :architect "αρχιτέκτονας"@el)
AnnotationAssertion(rdfs:label :architect "Architekt"@de)
ObjectPropertyDomain(:architect :ArchitecturalStructure)
ObjectPropertyRange(:architect :Architect)
Declaration(ObjectProperty(:architectualBureau))
AnnotationAssertion(rdfs:label :architectualBureau "architectual bureau"@en)
AnnotationAssertion(rdfs:label :architectualBureau "αρχιτεκτονική κατασκευή"@el)
ObjectPropertyDomain(:architectualBureau :ArchitecturalStructure)
ObjectPropertyRange(:architectualBureau :Company)
Declaration(ObjectProperty(:architecturalStyle))
AnnotationAssertion(rdfs:label :architecturalStyle "bouwstijl"@nl)
AnnotationAssertion(rdfs:label :architecturalStyle "style architectural"@fr)
AnnotationAssertion(rdfs:label :architecturalStyle "αρχιτεκτονικό στυλ"@el)
AnnotationAssertion(rdfs:label :architecturalStyle "architectural style"@en)
ObjectPropertyDomain(:architecturalStyle :ArchitecturalStructure)
Declaration(ObjectProperty(:areaOfSearch))
AnnotationAssertion(rdfs:label :areaOfSearch "area of search"@en)
AnnotationAssertion(rdfs:label :areaOfSearch "Περιοχή Αναζήτησης"@el)
ObjectPropertyDomain(:areaOfSearch :SiteOfSpecialScientificInterest)
ObjectPropertyRange(:areaOfSearch :PopulatedPlace)
Declaration(ObjectProperty(:arielAward))
AnnotationAssertion(rdfs:label :arielAward "Ariel Award"@el)
AnnotationAssertion(rdfs:label :arielAward "Ariel Award"@en)
ObjectPropertyDomain(:arielAward :Actor)
ObjectPropertyRange(:arielAward :Award)
Declaration(ObjectProperty(:arrondissement))
AnnotationAssertion(rdfs:label :arrondissement "arrondissement"@en)
AnnotationAssertion(rdfs:label :arrondissement "διαμέρισμα"@el)
AnnotationAssertion(rdfs:label :arrondissement "arrondissement"@nl)
AnnotationAssertion(rdfs:label :arrondissement "arrondissement"@fr)
ObjectPropertyDomain(:arrondissement :PopulatedPlace)
ObjectPropertyRange(:arrondissement :PopulatedPlace)
Declaration(ObjectProperty(:artPatron))
AnnotationAssertion(rdfs:comment :artPatron "An influential, wealthy person who supported an artist, craftsman, a scholar or a noble.. See also"@en)
AnnotationAssertion(rdfs:label :artPatron "mécène"@fr)
AnnotationAssertion(rdfs:label :artPatron "patron (art)"@en)
AnnotationAssertion(rdfs:comment :artPatron "Celui qui encourage par ses libéralités les sciences, les lettres et les arts."@fr)
ObjectPropertyDomain(:artPatron :Agent)
ObjectPropertyRange(:artPatron :Artist)
Declaration(ObjectProperty(:artery))
AnnotationAssertion(rdfs:label :artery "artery"@en)
AnnotationAssertion(rdfs:label :artery "αρτηρία"@el)
AnnotationAssertion(rdfs:label :artery "ader"@nl)
ObjectPropertyDomain(:artery :AnatomicalStructure)
ObjectPropertyRange(:artery :Artery)
Declaration(ObjectProperty(:artist))
AnnotationAssertion(rdfs:label :artist "artist"@en)
AnnotationAssertion(rdfs:label :artist "καλλιτέχνης"@el)
AnnotationAssertion(rdfs:label :artist "Interpret"@de)
AnnotationAssertion(rdfs:label :artist "artiest"@nl)
ObjectPropertyDomain(:artist :MusicalWork)
Declaration(ObjectProperty(:aspectRatio))
AnnotationAssertion(rdfs:label :aspectRatio "Aspect Ratio"@en)
AnnotationAssertion(rdfs:label :aspectRatio "λόγος"@el)
AnnotationAssertion(rdfs:label :aspectRatio "Seitenverhältnis"@de)
ObjectPropertyDomain(:aspectRatio :Software)
Declaration(ObjectProperty(:assembly))
AnnotationAssertion(rdfs:label :assembly "assembly"@en)
AnnotationAssertion(rdfs:label :assembly "συνέλευση"@el)
ObjectPropertyDomain(:assembly :MeanOfTransportation)
Declaration(ObjectProperty(:assistantPrincipal))
AnnotationAssertion(rdfs:label :assistantPrincipal "assistant principal"@en)
AnnotationAssertion(rdfs:label :assistantPrincipal "κύριος βοηθός"@el)
ObjectPropertyDomain(:assistantPrincipal :School)
Declaration(ObjectProperty(:associate))
AnnotationAssertion(rdfs:label :associate "associate"@en)
AnnotationAssertion(rdfs:label :associate "συνεργάτης"@el)
ObjectPropertyRange(:associate :Person)
Declaration(ObjectProperty(:associateEditor))
AnnotationAssertion(rdfs:label :associateEditor "συνεργαζόμενος συντάκτης"@el)
AnnotationAssertion(rdfs:label :associateEditor "associate editor"@en)
ObjectPropertyDomain(:associateEditor :Newspaper)
ObjectPropertyRange(:associateEditor :Person)
Declaration(ObjectProperty(:associateStar))
AnnotationAssertion(rdfs:label :associateStar "çevreleyen"@tr)
AnnotationAssertion(rdfs:label :associateStar "associateStar"@en)
AnnotationAssertion(rdfs:label :associateStar "συγγενικός αστέρας"@el)
ObjectPropertyRange(:associateStar :Constellation)
Declaration(ObjectProperty(:associatedAct))
AnnotationAssertion(rdfs:label :associatedAct "συνδεδεμένη πράξη"@el)
AnnotationAssertion(rdfs:label :associatedAct "associated act"@en)
ObjectPropertyDomain(:associatedAct :Artist)
ObjectPropertyRange(:associatedAct :Artist)
Declaration(ObjectProperty(:associatedBand))
AnnotationAssertion(rdfs:label :associatedBand "συνεργαζόμενο συγκρότημα"@el)
AnnotationAssertion(rdfs:label :associatedBand "associated band"@en)
ObjectPropertyRange(:associatedBand :Band)
Declaration(ObjectProperty(:associatedMusicalArtist))
AnnotationAssertion(rdfs:label :associatedMusicalArtist "συνεργάτης-μουσικός καλλιτέχνης"@el)
AnnotationAssertion(rdfs:label :associatedMusicalArtist "associated musical artist"@en)
ObjectPropertyRange(:associatedMusicalArtist :MusicalArtist)
Declaration(ObjectProperty(:associatedRocket))
AnnotationAssertion(rdfs:label :associatedRocket "συνδεόμενος πύραυλος"@el)
AnnotationAssertion(rdfs:label :associatedRocket "associated rocket"@en)
ObjectPropertyDomain(:associatedRocket :LaunchPad)
ObjectPropertyRange(:associatedRocket :Rocket)
Declaration(ObjectProperty(:associationOfLocalGovernment))
AnnotationAssertion(rdfs:label :associationOfLocalGovernment "association of local government"@en)
AnnotationAssertion(rdfs:label :associationOfLocalGovernment "συνεργασία της τοπικής αυτοδιοίκησης"@el)
AnnotationAssertion(rdfs:label :associationOfLocalGovernment "vereniging van lokale overheden"@nl)
ObjectPropertyDomain(:associationOfLocalGovernment :Settlement)
ObjectPropertyRange(:associationOfLocalGovernment :PopulatedPlace)
Declaration(ObjectProperty(:astrologicalSign))
AnnotationAssertion(rdfs:label :astrologicalSign "astrological sign"@en)
AnnotationAssertion(rdfs:label :astrologicalSign "signo astrológico"@pt)
AnnotationAssertion(rdfs:label :astrologicalSign "αστρολογικό ζώδιο"@el)
AnnotationAssertion(rdfs:label :astrologicalSign "Sternzeichen"@de)
ObjectPropertyDomain(:astrologicalSign :Person)
Declaration(ObjectProperty(:athletics))
AnnotationAssertion(rdfs:label :athletics "αθλητισμός"@el)
AnnotationAssertion(rdfs:label :athletics "athletics"@en)
ObjectPropertyDomain(:athletics :University)
Declaration(ObjectProperty(:attorneyGeneral))
AnnotationAssertion(rdfs:comment :attorneyGeneral "de procureur-generaal"@nl)
AnnotationAssertion(rdfs:comment :attorneyGeneral "Public attorney"@en)
AnnotationAssertion(rdfs:label :attorneyGeneral "procureur-generaal"@nl)
AnnotationAssertion(rdfs:label :attorneyGeneral "attorney general"@en)
ObjectPropertyDomain(:attorneyGeneral :LegalCase)
ObjectPropertyRange(:attorneyGeneral :Person)
Declaration(ObjectProperty(:author))
AnnotationAssertion(rdfs:label :author "autor"@de)
AnnotationAssertion(rdfs:label :author "auteur"@nl)
AnnotationAssertion(rdfs:label :author "auteur"@fr)
AnnotationAssertion(rdfs:label :author "συγγραφέας"@el)
AnnotationAssertion(rdfs:label :author "author"@en)
ObjectPropertyDomain(:author :Work)
ObjectPropertyRange(:author :Person)
Declaration(ObjectProperty(:authority))
AnnotationAssertion(rdfs:label :authority "autoriteit"@nl)
AnnotationAssertion(rdfs:label :authority "αρχή"@el)
AnnotationAssertion(rdfs:label :authority "authority"@en)
Declaration(ObjectProperty(:automobilePlatform))
AnnotationAssertion(rdfs:label :automobilePlatform "πλατφόρμα αυτοκινήτων"@el)
AnnotationAssertion(rdfs:label :automobilePlatform "automobile platform"@en)
ObjectPropertyDomain(:automobilePlatform :Automobile)
ObjectPropertyRange(:automobilePlatform :Automobile)
Declaration(ObjectProperty(:autonomy))
AnnotationAssertion(rdfs:label :autonomy "αυτονομία"@el)
AnnotationAssertion(rdfs:label :autonomy "autonomy"@en)
Declaration(ObjectProperty(:availableSmartCard))
AnnotationAssertion(rdfs:comment :availableSmartCard "Έξυπνη κάρτα για το σύστημα πληρωμής των ναύλων για τα δημόσια συστήματα μεταφορών που είναι ή θα είναι διαθέσιμα στο σταθμό."@el)
AnnotationAssertion(rdfs:label :availableSmartCard "available smart card"@en)
AnnotationAssertion(rdfs:comment :availableSmartCard "Smartcard for fare payment system for public transit systems that are or will be available at the station."@en)
AnnotationAssertion(rdfs:label :availableSmartCard "διαθέσιμη έξυπνη κάρτα"@el)
AnnotationAssertion(rdfs:comment :availableSmartCard "Chipkarte für automatische Bezahlsysteme im Personenverkehr die an diesem Bahnhof benutzt werden kann."@de)
AnnotationAssertion(rdfs:label :availableSmartCard "benutzbare Chipkarte"@de)
ObjectPropertyDomain(:availableSmartCard :Station)
Declaration(ObjectProperty(:award))
AnnotationAssertion(rdfs:label :award "onderscheiding"@nl)
AnnotationAssertion(rdfs:label :award "award"@en)
AnnotationAssertion(rdfs:label :award "récompense"@fr)
AnnotationAssertion(rdfs:label :award "Auszeichnung"@de)
AnnotationAssertion(rdfs:label :award "受賞"@ja)
AnnotationAssertion(rdfs:label :award "διακρίσεις"@el)
ObjectPropertyDomain(:award :Person)
ObjectPropertyRange(:award :Award)
Declaration(ObjectProperty(:baftaAward))
AnnotationAssertion(rdfs:label :baftaAward "BAFTA Award"@en)
AnnotationAssertion(rdfs:label :baftaAward "βραβείο BAFTA"@el)
ObjectPropertyDomain(:baftaAward :Artist)
ObjectPropertyRange(:baftaAward :Award)
Declaration(ObjectProperty(:bandMember))
AnnotationAssertion(rdfs:comment :bandMember "Ένα μέλος της μπάντας."@el)
AnnotationAssertion(rdfs:comment :bandMember "A member of the band."@en)
AnnotationAssertion(rdfs:label :bandMember "bandlid"@nl)
AnnotationAssertion(rdfs:label :bandMember "μέλος μπάντας"@el)
AnnotationAssertion(rdfs:label :bandMember "band member"@en)
ObjectPropertyDomain(:bandMember :Band)
ObjectPropertyRange(:bandMember :Person)
Declaration(ObjectProperty(:basedOn))
AnnotationAssertion(rdfs:label :basedOn "op basis van"@nl)
AnnotationAssertion(rdfs:label :basedOn "based on"@en)
AnnotationAssertion(rdfs:label :basedOn "βασισμένο σε"@el)
ObjectPropertyDomain(:basedOn :Work)
ObjectPropertyRange(:basedOn :Work)
Declaration(ObjectProperty(:battle))
AnnotationAssertion(rdfs:label :battle "Schlacht"@de)
AnnotationAssertion(rdfs:label :battle "veldslag"@nl)
AnnotationAssertion(rdfs:label :battle "battle"@en)
ObjectPropertyRange(:battle :MilitaryConflict)
Declaration(ObjectProperty(:beatifiedBy))
AnnotationAssertion(rdfs:label :beatifiedBy "beatified by"@en)
AnnotationAssertion(rdfs:label :beatifiedBy "zalig verklaard door"@nl)
ObjectPropertyDomain(:beatifiedBy :Saint)
ObjectPropertyRange(:beatifiedBy :Person)
Declaration(ObjectProperty(:beatifiedPlace))
AnnotationAssertion(rdfs:label :beatifiedPlace "zalig verklaard plaats"@nl)
AnnotationAssertion(rdfs:label :beatifiedPlace "beatified place"@en)
ObjectPropertyDomain(:beatifiedPlace :Saint)
ObjectPropertyRange(:beatifiedPlace :PopulatedPlace)
Declaration(ObjectProperty(:belgiumMergedSettlement))
AnnotationAssertion(rdfs:label :belgiumMergedSettlement "belgium merged settlement"@en)
Declaration(ObjectProperty(:belgiumPoliticalMajority))
AnnotationAssertion(rdfs:label :belgiumPoliticalMajority "belgium political majority"@en)
ObjectPropertyRange(:belgiumPoliticalMajority :PoliticalParty)
Declaration(ObjectProperty(:belgiumReffBourgmestre))
AnnotationAssertion(rdfs:label :belgiumReffBourgmestre "referent bourgmestre"@en)
ObjectPropertyRange(:belgiumReffBourgmestre :Person)
Declaration(ObjectProperty(:beltwayCity))
AnnotationAssertion(rdfs:label :beltwayCity "beltway city"@en)
ObjectPropertyDomain(:beltwayCity :Road)
ObjectPropertyRange(:beltwayCity :City)
Declaration(ObjectProperty(:bigestCity))
AnnotationAssertion(rdfs:label :bigestCity "bigest city"@en)
ObjectPropertyDomain(:bigestCity :Place)
ObjectPropertyRange(:bigestCity :PopulatedPlace)
Declaration(ObjectProperty(:billed))
AnnotationAssertion(rdfs:label :billed "billed"@en)
ObjectPropertyDomain(:billed :Wrestler)
ObjectPropertyRange(:billed :PopulatedPlace)
Declaration(ObjectProperty(:binomial))
AnnotationAssertion(rdfs:label :binomial "διωνυμικός"@el)
AnnotationAssertion(rdfs:label :binomial "学名"@ja)
AnnotationAssertion(rdfs:label :binomial "binomial"@en)
ObjectPropertyDomain(:binomial :Species)
Declaration(ObjectProperty(:binomialAuthority))
AnnotationAssertion(rdfs:label :binomialAuthority "binomial authority"@en)
AnnotationAssertion(rdfs:label :binomialAuthority "（学名命名者）"@ja)
ObjectPropertyDomain(:binomialAuthority :Species)
Declaration(ObjectProperty(:biome))
AnnotationAssertion(rdfs:label :biome "生物群系"@ja)
AnnotationAssertion(rdfs:label :biome "biome"@en)
Declaration(ObjectProperty(:birthPlace))
AnnotationAssertion(rdfs:label :birthPlace "lieu de naissance"@fr)
AnnotationAssertion(rdfs:label :birthPlace "geboorteplaats"@nl)
AnnotationAssertion(rdfs:label :birthPlace "τόπος_γέννησης"@el)
AnnotationAssertion(rdfs:comment :birthPlace "where the person was born"@en)
AnnotationAssertion(rdfs:label :birthPlace "Geburtsort"@de)
AnnotationAssertion(rdfs:label :birthPlace "birth place"@en)
EquivalentObjectProperties(:birthPlace <http://www.semanticweb.org/matac93/ontology/fao#hometown>)
ObjectPropertyDomain(:birthPlace :Person)
ObjectPropertyRange(:birthPlace :Place)
Declaration(ObjectProperty(:blockAlloy))
AnnotationAssertion(rdfs:label :blockAlloy "block alloy"@en)
AnnotationAssertion(rdfs:label :blockAlloy "κράμα μετάλλου"@el)
ObjectPropertyDomain(:blockAlloy :AutomobileEngine)
Declaration(ObjectProperty(:board))
AnnotationAssertion(rdfs:label :board "επιβιβάζομαι"@el)
AnnotationAssertion(rdfs:label :board "取締役会"@ja)
AnnotationAssertion(rdfs:label :board "board"@en)
AnnotationAssertion(rdfs:label :board "bestuur"@nl)
ObjectPropertyDomain(:board :Person)
Declaration(ObjectProperty(:bodyDiscovered))
AnnotationAssertion(rdfs:label :bodyDiscovered "ανακάλυψη σώματος"@el)
AnnotationAssertion(rdfs:label :bodyDiscovered "body discovered"@en)
AnnotationAssertion(rdfs:label :bodyDiscovered "遺体発見"@ja)
ObjectPropertyDomain(:bodyDiscovered :Person)
Declaration(ObjectProperty(:bodyStyle))
AnnotationAssertion(rdfs:label :bodyStyle "body style"@en)
AnnotationAssertion(rdfs:label :bodyStyle "τύπος σώματος"@el)
ObjectPropertyDomain(:bodyStyle :Automobile)
Declaration(ObjectProperty(:boiler))
AnnotationAssertion(rdfs:label :boiler "boiler"@en)
AnnotationAssertion(rdfs:label :boiler "δοχείο βράσης"@el)
ObjectPropertyDomain(:boiler :Locomotive)
Declaration(ObjectProperty(:boilerPressure))
AnnotationAssertion(rdfs:label :boilerPressure "πίεση δοχείου βράσης"@el)
AnnotationAssertion(rdfs:label :boilerPressure "boiler pressure"@en)
ObjectPropertyDomain(:boilerPressure :Locomotive)
Declaration(ObjectProperty(:booster))
AnnotationAssertion(rdfs:label :booster "booster"@en)
AnnotationAssertion(rdfs:label :booster "προωθητής"@el)
ObjectPropertyDomain(:booster :SpaceMission)
ObjectPropertyRange(:booster :Rocket)
Declaration(ObjectProperty(:border))
AnnotationAssertion(rdfs:label :border "σύνορα"@el)
AnnotationAssertion(rdfs:label :border "border"@en)
ObjectPropertyDomain(:border :Island)
ObjectPropertyRange(:border :PopulatedPlace)
Declaration(ObjectProperty(:borough))
AnnotationAssertion(rdfs:label :borough "stadsdeel"@nl)
AnnotationAssertion(rdfs:label :borough "δήμος"@el)
AnnotationAssertion(rdfs:label :borough "borough"@en)
ObjectPropertyDomain(:borough :PopulatedPlace)
ObjectPropertyRange(:borough :PopulatedPlace)
Declaration(ObjectProperty(:bourgmestre))
AnnotationAssertion(rdfs:label :bourgmestre "bourgmestre"@en)
ObjectPropertyDomain(:bourgmestre :Settlement)
ObjectPropertyRange(:bourgmestre :Person)
Declaration(ObjectProperty(:branchFrom))
AnnotationAssertion(rdfs:label :branchFrom "παράρτημα από"@el)
AnnotationAssertion(rdfs:label :branchFrom "branch from"@en)
ObjectPropertyDomain(:branchFrom :AnatomicalStructure)
ObjectPropertyRange(:branchFrom :AnatomicalStructure)
Declaration(ObjectProperty(:branchTo))
AnnotationAssertion(rdfs:label :branchTo "υποκατάστημα"@el)
AnnotationAssertion(rdfs:label :branchTo "branch to"@en)
ObjectPropertyDomain(:branchTo :AnatomicalStructure)
ObjectPropertyRange(:branchTo :AnatomicalStructure)
Declaration(ObjectProperty(:brand))
AnnotationAssertion(rdfs:label :brand "brand"@en)
AnnotationAssertion(rdfs:label :brand "μάρκα"@el)
ObjectPropertyDomain(:brand :WrestlingEvent)
ObjectPropertyRange(:brand :TelevisionShow)
Declaration(ObjectProperty(:breeder))
AnnotationAssertion(rdfs:label :breeder "κτηνοτρόφος"@el)
AnnotationAssertion(rdfs:label :breeder "breeder"@en)
ObjectPropertyDomain(:breeder :Animal)
ObjectPropertyRange(:breeder :Person)
Declaration(ObjectProperty(:britishComedyAwards))
AnnotationAssertion(rdfs:label :britishComedyAwards "British Comedy Awards"@en)
AnnotationAssertion(rdfs:label :britishComedyAwards "Βρετανικά Βραβεία Κωμωδίας"@el)
ObjectPropertyDomain(:britishComedyAwards :Comedian)
ObjectPropertyRange(:britishComedyAwards :Award)
Declaration(ObjectProperty(:broadcastArea))
AnnotationAssertion(rdfs:label :broadcastArea "περιοχή αναμετάδοσης"@el)
AnnotationAssertion(rdfs:label :broadcastArea "broadcast area"@en)
ObjectPropertyDomain(:broadcastArea :Broadcaster)
ObjectPropertyRange(:broadcastArea :PopulatedPlace)
Declaration(ObjectProperty(:broadcastNetwork))
AnnotationAssertion(rdfs:label :broadcastNetwork "broadcast network"@en)
AnnotationAssertion(rdfs:label :broadcastNetwork "chaîne de télévision généraliste"@fr)
AnnotationAssertion(rdfs:comment :broadcastNetwork "Die Sendergruppe zu dem der Rundfunkveranstalter gehört."@de)
AnnotationAssertion(rdfs:label :broadcastNetwork "Sendergruppe"@de)
AnnotationAssertion(rdfs:label :broadcastNetwork "τηλεοπτικό κανάλι"@el)
AnnotationAssertion(rdfs:comment :broadcastNetwork "The parent broadcast network to which the broadcaster belongs."@en)
ObjectPropertyDomain(:broadcastNetwork :Broadcaster)
ObjectPropertyRange(:broadcastNetwork :BroadcastNetwork)
Declaration(ObjectProperty(:bronzeMedalist))
AnnotationAssertion(rdfs:label :bronzeMedalist "χάλκινο μετάλλιο"@el)
AnnotationAssertion(rdfs:label :bronzeMedalist "bronze medalist"@en)
AnnotationAssertion(rdfs:label :bronzeMedalist "medalha de bronze"@pt)
ObjectPropertyDomain(:bronzeMedalist :SportsEvent)
ObjectPropertyRange(:bronzeMedalist :Person)
Declaration(ObjectProperty(:builder))
AnnotationAssertion(rdfs:label :builder "builder"@en)
AnnotationAssertion(rdfs:label :builder "οικοδόμος"@el)
AnnotationAssertion(rdfs:label :builder "bouwer"@nl)
Declaration(ObjectProperty(:building))
AnnotationAssertion(rdfs:label :building "gebouw"@nl)
AnnotationAssertion(rdfs:label :building "building"@en)
AnnotationAssertion(rdfs:label :building "κτίριο"@el)
ObjectPropertyDomain(:building :Island)
ObjectPropertyRange(:building :Building)
Declaration(ObjectProperty(:buildingType))
AnnotationAssertion(rdfs:comment :buildingType "Type is te algemeen. We moeten soorten muziek van soorten gebouwen kunnen onderscheiden"@nl)
AnnotationAssertion(rdfs:comment :buildingType "Type is too general. We should be able to distinguish types of music from types of architecture"@en)
AnnotationAssertion(rdfs:label :buildingType "buildingType"@en)
AnnotationAssertion(rdfs:comment :buildingType "Ο τύπος είναι πολύ γενικό.Θα πρέπει να είναι σε θέση να διακρίνουν τα είδη της μουσικής από τους τύπους της αρχιτεκτονικής"@el)
AnnotationAssertion(rdfs:label :buildingType "Τύπος κτιρίου"@el)
AnnotationAssertion(rdfs:label :buildingType "soort gebouw"@nl)
ObjectPropertyDomain(:buildingType :Building)
Declaration(ObjectProperty(:buriedPlace))
AnnotationAssertion(rdfs:label :buriedPlace "begraafplaats"@nl)
AnnotationAssertion(rdfs:comment :buriedPlace "The place where the person has been buried."@en)
AnnotationAssertion(rdfs:comment :buriedPlace "De plaats waar een persoon is begraven."@nl)
AnnotationAssertion(rdfs:label :buriedPlace "buried place"@en)
AnnotationAssertion(rdfs:comment :buriedPlace "Ο τόπος όπου το πρόσωπο έχει θαφτεί."@el)
AnnotationAssertion(rdfs:label :buriedPlace "τόπος θαψίματος"@el)
ObjectPropertyDomain(:buriedPlace :Person)
ObjectPropertyRange(:buriedPlace :Place)
Declaration(ObjectProperty(:campus))
AnnotationAssertion(rdfs:label :campus "campus"@en)
ObjectPropertyDomain(:campus :University)
Declaration(ObjectProperty(:canonizedBy))
AnnotationAssertion(rdfs:label :canonizedBy "heilig verklaard door"@nl)
AnnotationAssertion(rdfs:label :canonizedBy "canonized by"@en)
ObjectPropertyDomain(:canonizedBy :Saint)
ObjectPropertyRange(:canonizedBy :Person)
Declaration(ObjectProperty(:canonizedPlace))
AnnotationAssertion(rdfs:label :canonizedPlace "canonized place"@en)
AnnotationAssertion(rdfs:label :canonizedPlace "heiligverklaring plaats"@nl)
ObjectPropertyDomain(:canonizedPlace :Saint)
ObjectPropertyRange(:canonizedPlace :PopulatedPlace)
Declaration(ObjectProperty(:canton))
AnnotationAssertion(rdfs:label :canton "canton"@fr)
AnnotationAssertion(rdfs:label :canton "kanton"@nl)
AnnotationAssertion(rdfs:label :canton "canton"@en)
ObjectPropertyDomain(:canton :Settlement)
ObjectPropertyRange(:canton :Settlement)
Declaration(ObjectProperty(:capital))
AnnotationAssertion(rdfs:label :capital "capital"@fr)
AnnotationAssertion(rdfs:label :capital "Hauptstadt"@de)
AnnotationAssertion(rdfs:label :capital "πρωτεύουσα"@el)
AnnotationAssertion(rdfs:label :capital "capital"@en)
AnnotationAssertion(rdfs:label :capital "capital"@pt)
AnnotationAssertion(rdfs:label :capital "hoofdstad"@nl)
ObjectPropertyDomain(:capital :PopulatedPlace)
ObjectPropertyRange(:capital :City)
Declaration(ObjectProperty(:capitalCountry))
AnnotationAssertion(rdfs:label :capitalCountry "capital country"@en)
ObjectPropertyDomain(:capitalCountry :Island)
ObjectPropertyRange(:capitalCountry :Country)
Declaration(ObjectProperty(:capitalDistrict))
AnnotationAssertion(rdfs:label :capitalDistrict "capital district"@en)
ObjectPropertyDomain(:capitalDistrict :Island)
ObjectPropertyRange(:capitalDistrict :PopulatedPlace)
Declaration(ObjectProperty(:capitalMountain))
AnnotationAssertion(rdfs:label :capitalMountain "capital mountain"@en)
ObjectPropertyDomain(:capitalMountain :Island)
ObjectPropertyRange(:capitalMountain :Mountain)
Declaration(ObjectProperty(:capitalPlace))
AnnotationAssertion(rdfs:label :capitalPlace "capital place"@en)
ObjectPropertyDomain(:capitalPlace :Island)
ObjectPropertyRange(:capitalPlace :PopulatedPlace)
Declaration(ObjectProperty(:capitalPosition))
AnnotationAssertion(rdfs:label :capitalPosition "capital position"@en)
ObjectPropertyDomain(:capitalPosition :Island)
ObjectPropertyRange(:capitalPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:capitalRegion))
AnnotationAssertion(rdfs:label :capitalRegion "capital region"@en)
ObjectPropertyDomain(:capitalRegion :Island)
ObjectPropertyRange(:capitalRegion :PopulatedPlace)
Declaration(ObjectProperty(:careerStation))
AnnotationAssertion(rdfs:comment :careerStation "this property links to a step in the career of a person, e.g. a soccer player, holding information on the time span, matches and goals he or she achieved at a club."@en)
AnnotationAssertion(rdfs:label :careerStation "career station"@en)
AnnotationAssertion(rdfs:label :careerStation "Karrierestation"@de)
AnnotationAssertion(rdfs:label :careerStation "carrièrestap"@nl)
ObjectPropertyDomain(:careerStation :Person)
ObjectPropertyRange(:careerStation :CareerStation)
Declaration(ObjectProperty(:category))
AnnotationAssertion(rdfs:label :category "κατηγορία"@el)
AnnotationAssertion(rdfs:label :category "Kategorie"@cs)
AnnotationAssertion(rdfs:label :category "Kategorie"@de)
AnnotationAssertion(rdfs:label :category "catégorie"@fr)
AnnotationAssertion(rdfs:label :category "category"@en)
Declaration(ObjectProperty(:causedBy))
AnnotationAssertion(rdfs:label :causedBy "caused by"@en)
AnnotationAssertion(rdfs:label :causedBy "casus"@fr)
ObjectPropertyDomain(:causedBy :Event)
Declaration(ObjectProperty(:ceo))
AnnotationAssertion(rdfs:label :ceo "Geschäftsführer"@de)
AnnotationAssertion(rdfs:label :ceo "chief executive officer"@en)
ObjectPropertyDomain(:ceo :Organisation)
ObjectPropertyRange(:ceo :Person)
Declaration(ObjectProperty(:ceremonialCounty))
AnnotationAssertion(rdfs:label :ceremonialCounty "Ceremonial County"@en)
ObjectPropertyDomain(:ceremonialCounty :PopulatedPlace)
ObjectPropertyRange(:ceremonialCounty :PopulatedPlace)
Declaration(ObjectProperty(:cesarAward))
AnnotationAssertion(rdfs:label :cesarAward "Cesar Award"@en)
ObjectPropertyDomain(:cesarAward :Artist)
ObjectPropertyRange(:cesarAward :Award)
Declaration(ObjectProperty(:chain))
AnnotationAssertion(rdfs:label :chain "chain"@en)
AnnotationAssertion(rdfs:label :chain "kette"@de)
AnnotationAssertion(rdfs:comment :chain "The chain of Hotels this instance is associated with."@en)
AnnotationAssertion(rdfs:label :chain "αλυσίδα"@el)
ObjectPropertyDomain(:chain :Hotel)
ObjectPropertyRange(:chain :Company)
Declaration(ObjectProperty(:chairLabel))
AnnotationAssertion(rdfs:label :chairLabel "chair label"@en)
Declaration(ObjectProperty(:chairman))
AnnotationAssertion(rdfs:label :chairman "chairman"@en)
ObjectPropertyRange(:chairman :Person)
Declaration(ObjectProperty(:chairperson))
AnnotationAssertion(rdfs:label :chairperson "voorzitter"@nl)
AnnotationAssertion(rdfs:label :chairperson "chairperson"@en)
ObjectPropertyDomain(:chairperson :Organisation)
ObjectPropertyRange(:chairperson :Person)
Declaration(ObjectProperty(:champion))
AnnotationAssertion(rdfs:label :champion "Campeón"@es)
AnnotationAssertion(rdfs:label :champion "champion"@en)
AnnotationAssertion(rdfs:comment :champion "winner of a competition"@en)
AnnotationAssertion(rdfs:label :champion "champion"@fr)
ObjectPropertyDomain(:champion :SportsEvent)
ObjectPropertyRange(:champion :Athlete)
Declaration(ObjectProperty(:championInDouble))
AnnotationAssertion(rdfs:label :championInDouble "kampioen dubbel"@nl)
AnnotationAssertion(rdfs:label :championInDouble "champion en double"@fr)
AnnotationAssertion(rdfs:comment :championInDouble "winner of a competition in the double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInDouble "champion in double"@en)
AnnotationAssertion(rdfs:label :championInDouble "Campeón en doble"@es)
ObjectPropertyDomain(:championInDouble :SportsEvent)
ObjectPropertyRange(:championInDouble :Athlete)
Declaration(ObjectProperty(:championInDoubleFemale))
AnnotationAssertion(rdfs:comment :championInDoubleFemale "winner of a competition in the female double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInDoubleFemale "champion en double femmes"@fr)
AnnotationAssertion(rdfs:label :championInDoubleFemale "Campeón en doble mujeres"@es)
AnnotationAssertion(rdfs:label :championInDoubleFemale "champion in double female"@en)
ObjectPropertyDomain(:championInDoubleFemale :SportsEvent)
ObjectPropertyRange(:championInDoubleFemale :Athlete)
Declaration(ObjectProperty(:championInDoubleMale))
AnnotationAssertion(rdfs:comment :championInDoubleMale "winner of a competition in the male double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInDoubleMale "Campeón en doble hombres"@es)
AnnotationAssertion(rdfs:label :championInDoubleMale "champion en double hommes"@fr)
AnnotationAssertion(rdfs:label :championInDoubleMale "champion in double male"@en)
ObjectPropertyDomain(:championInDoubleMale :SportsEvent)
ObjectPropertyRange(:championInDoubleMale :Athlete)
Declaration(ObjectProperty(:championInMixedDouble))
AnnotationAssertion(rdfs:label :championInMixedDouble "champion en double mixte"@fr)
AnnotationAssertion(rdfs:label :championInMixedDouble "Campeón en doble mixto"@es)
AnnotationAssertion(rdfs:label :championInMixedDouble "kampioen gemengd dubbelspel"@nl)
AnnotationAssertion(rdfs:label :championInMixedDouble "champion in mixed double"@en)
AnnotationAssertion(rdfs:comment :championInMixedDouble "winner of a competition in the mixed double session (as in tennis)"@en)
ObjectPropertyDomain(:championInMixedDouble :SportsEvent)
ObjectPropertyRange(:championInMixedDouble :Athlete)
Declaration(ObjectProperty(:championInSingle))
AnnotationAssertion(rdfs:label :championInSingle "kampioen enkelspel"@nl)
AnnotationAssertion(rdfs:label :championInSingle "Campeón en simple"@es)
AnnotationAssertion(rdfs:comment :championInSingle "winner of a competition in the single session, to distinguish from the double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInSingle "champion en simple"@fr)
AnnotationAssertion(rdfs:label :championInSingle "champion in single"@en)
ObjectPropertyDomain(:championInSingle :SportsEvent)
ObjectPropertyRange(:championInSingle :Athlete)
Declaration(ObjectProperty(:championInSingleFemale))
AnnotationAssertion(rdfs:comment :championInSingleFemale "winner of a competition in the single female session, to distinguish from the double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInSingleFemale "Campeón en simple mujeres"@es)
AnnotationAssertion(rdfs:label :championInSingleFemale "champion in single female"@en)
AnnotationAssertion(rdfs:label :championInSingleFemale "champion en simple femmes"@fr)
ObjectPropertyDomain(:championInSingleFemale :SportsEvent)
ObjectPropertyRange(:championInSingleFemale :Athlete)
Declaration(ObjectProperty(:championInSingleMale))
AnnotationAssertion(rdfs:comment :championInSingleMale "winner of a competition in the single male session, to distinguish from the double session (as in tennis)"@en)
AnnotationAssertion(rdfs:label :championInSingleMale "Campeón en simple hombres"@es)
AnnotationAssertion(rdfs:label :championInSingleMale "champion en simple homme"@fr)
AnnotationAssertion(rdfs:label :championInSingleMale "champion in single male"@en)
ObjectPropertyDomain(:championInSingleMale :SportsEvent)
ObjectPropertyRange(:championInSingleMale :Athlete)
Declaration(ObjectProperty(:chancellor))
AnnotationAssertion(rdfs:label :chancellor "chancellor"@en)
AnnotationAssertion(rdfs:label :chancellor "Kanzler"@de)
ObjectPropertyRange(:chancellor :Person)
Declaration(ObjectProperty(:channel))
AnnotationAssertion(rdfs:label :channel "kanaal"@nl)
AnnotationAssertion(rdfs:label :channel "channel"@en)
AnnotationAssertion(rdfs:label :channel "κανάλι"@el)
ObjectPropertyRange(:channel :Broadcaster)
Declaration(ObjectProperty(:chaplain))
AnnotationAssertion(rdfs:label :chaplain "chaplain"@en)
ObjectPropertyDomain(:chaplain :School)
ObjectPropertyRange(:chaplain :Person)
Declaration(ObjectProperty(:chef))
AnnotationAssertion(rdfs:label :chef "chef"@el)
AnnotationAssertion(rdfs:label :chef "chef cuisinier"@fr)
AnnotationAssertion(rdfs:label :chef "chef"@en)
AnnotationAssertion(rdfs:label :chef "sous-chef"@nl)
ObjectPropertyDomain(:chef :Restaurant)
ObjectPropertyRange(:chef :Person)
Declaration(ObjectProperty(:chiefEditor))
AnnotationAssertion(rdfs:label :chiefEditor "chief editor"@en)
AnnotationAssertion(rdfs:label :chiefEditor "hoofdredacteur"@nl)
ObjectPropertyDomain(:chiefEditor :Work)
ObjectPropertyRange(:chiefEditor :Person)
Declaration(ObjectProperty(:chiefPlace))
AnnotationAssertion(rdfs:label :chiefPlace "chief place"@en)
ObjectPropertyRange(:chiefPlace :PopulatedPlace)
Declaration(ObjectProperty(:child))
AnnotationAssertion(rdfs:label :child "child"@en)
AnnotationAssertion(rdfs:label :child "子供"@ja)
AnnotationAssertion(rdfs:label :child "παιδί"@el)
AnnotationAssertion(rdfs:label :child "kind"@nl)
AnnotationAssertion(rdfs:label :child "طفل"@ar)
AnnotationAssertion(rdfs:label :child "Kind"@de)
ObjectPropertyDomain(:child :Person)
ObjectPropertyRange(:child :Person)
Declaration(ObjectProperty(:childOrganisation))
AnnotationAssertion(rdfs:label :childOrganisation "dochterorganisatie"@nl)
AnnotationAssertion(rdfs:label :childOrganisation "child organisation"@en)
ObjectPropertyDomain(:childOrganisation :Organisation)
ObjectPropertyRange(:childOrganisation :Organisation)
Declaration(ObjectProperty(:choreographer))
AnnotationAssertion(rdfs:label :choreographer "choreographer"@en)
AnnotationAssertion(rdfs:label :choreographer "choreograaf"@nl)
ObjectPropertyDomain(:choreographer :FigureSkater)
ObjectPropertyRange(:choreographer :Person)
Declaration(ObjectProperty(:cinematography))
AnnotationAssertion(rdfs:label :cinematography "cinematografie"@nl)
AnnotationAssertion(rdfs:label :cinematography "cinematography"@en)
ObjectPropertyDomain(:cinematography :Film)
ObjectPropertyRange(:cinematography :Person)
Declaration(ObjectProperty(:citizenship))
AnnotationAssertion(rdfs:label :citizenship "citizenship"@en)
AnnotationAssertion(rdfs:label :citizenship "burgerschap"@nl)
AnnotationAssertion(rdfs:label :citizenship "Staatsangehörigkeit"@de)
AnnotationAssertion(rdfs:label :citizenship "υπηκοότητα"@el)
ObjectPropertyDomain(:citizenship :Person)
Declaration(ObjectProperty(:city))
AnnotationAssertion(rdfs:label :city "ville"@fr)
AnnotationAssertion(rdfs:label :city "Stadt"@de)
AnnotationAssertion(rdfs:label :city "stad"@nl)
AnnotationAssertion(rdfs:label :city "city"@en)
AnnotationAssertion(rdfs:label :city "πόλη"@el)
ObjectPropertyRange(:city :City)
Declaration(ObjectProperty(:class))
AnnotationAssertion(rdfs:label :class "class"@en)
AnnotationAssertion(rdfs:label :class "klasse"@nl)
AnnotationAssertion(rdfs:label :class "τάξη"@el)
ObjectPropertyDomain(:class :MeanOfTransportation)
Declaration(ObjectProperty(:classis))
AnnotationAssertion(rdfs:label :classis "綱_(分類学)"@ja)
AnnotationAssertion(rdfs:label :classis "classis"@en)
AnnotationAssertion(rdfs:label :classis "klasse"@nl)
AnnotationAssertion(rdfs:comment :classis "the living thing class (from the Latin \"classis\"), according to the biological taxonomy"@en)
ObjectPropertyDomain(:classis :Species)
Declaration(ObjectProperty(:climate))
AnnotationAssertion(rdfs:label :climate "klimaat"@nl)
AnnotationAssertion(rdfs:label :climate "clima"@pt)
AnnotationAssertion(rdfs:label :climate "klima"@de)
AnnotationAssertion(rdfs:label :climate "climate"@en)
ObjectPropertyDomain(:climate :Place)
Declaration(ObjectProperty(:closingFilm))
AnnotationAssertion(rdfs:label :closingFilm "closing film"@en)
ObjectPropertyDomain(:closingFilm :FilmFestival)
ObjectPropertyRange(:closingFilm :Film)
Declaration(ObjectProperty(:club))
AnnotationAssertion(rdfs:label :club "ομάδα"@el)
AnnotationAssertion(rdfs:label :club "club"@nl)
AnnotationAssertion(rdfs:label :club "club"@en)
EquivalentObjectProperties(:club :team)
ObjectPropertyDomain(:club :Athlete)
ObjectPropertyRange(:club :SportsTeam)
Declaration(ObjectProperty(:clubsRecordGoalscorer))
AnnotationAssertion(rdfs:label :clubsRecordGoalscorer "clubs record goalscorer"@en)
ObjectPropertyDomain(:clubsRecordGoalscorer :SoccerClub)
ObjectPropertyRange(:clubsRecordGoalscorer :Person)
Declaration(ObjectProperty(:cluster))
AnnotationAssertion(rdfs:label :cluster "birlik"@tr)
AnnotationAssertion(rdfs:label :cluster "cluster"@en)
ObjectPropertyDomain(:cluster :Galaxy)
Declaration(ObjectProperty(:coExecutiveProducer))
AnnotationAssertion(rdfs:label :coExecutiveProducer "co executive producer"@en)
ObjectPropertyDomain(:coExecutiveProducer :TelevisionShow)
ObjectPropertyRange(:coExecutiveProducer :Person)
Declaration(ObjectProperty(:coProducer))
AnnotationAssertion(rdfs:label :coProducer "co producer"@en)
ObjectPropertyDomain(:coProducer :TelevisionShow)
ObjectPropertyRange(:coProducer :Person)
Declaration(ObjectProperty(:coach))
AnnotationAssertion(rdfs:label :coach "coach"@en)
AnnotationAssertion(rdfs:label :coach "προπονητής"@el)
ObjectPropertyRange(:coach :Person)
Declaration(ObjectProperty(:coachedTeam))
AnnotationAssertion(rdfs:label :coachedTeam "coached team"@en)
ObjectPropertyDomain(:coachedTeam :CollegeCoach)
ObjectPropertyRange(:coachedTeam :SportsTeam)
Declaration(ObjectProperty(:collectionSize))
AnnotationAssertion(rdfs:label :collectionSize "country"@en)
AnnotationAssertion(rdfs:label :collectionSize "蔵書数"@ja)
Declaration(ObjectProperty(:college))
AnnotationAssertion(rdfs:label :college "haute école"@fr)
AnnotationAssertion(rdfs:label :college "κολλέγιο"@el)
AnnotationAssertion(rdfs:label :college "college"@en)
ObjectPropertyRange(:college :College)
Declaration(ObjectProperty(:colour))
AnnotationAssertion(rdfs:label :colour "kleur"@nl)
AnnotationAssertion(rdfs:comment :colour "A colour represented by its entity."@en)
AnnotationAssertion(rdfs:label :colour "colour"@en)
AnnotationAssertion(rdfs:label :colour "Farbe"@de)
AnnotationAssertion(rdfs:label :colour "couleur"@fr)
AnnotationAssertion(rdfs:label :colour "χρώμα"@el)
AnnotationAssertion(rdfs:label :colour "色"@ja)
ObjectPropertyRange(:colour :Colour)
Declaration(ObjectProperty(:comic))
AnnotationAssertion(rdfs:label :comic "comic"@en)
ObjectPropertyDomain(:comic :FictionalCharacter)
ObjectPropertyRange(:comic :Comic)
Declaration(ObjectProperty(:commandStructure))
AnnotationAssertion(rdfs:label :commandStructure "command structure"@en)
ObjectPropertyDomain(:commandStructure :MilitaryUnit)
ObjectPropertyRange(:commandStructure :MilitaryUnit)
Declaration(ObjectProperty(:commandant))
AnnotationAssertion(rdfs:label :commandant "commandant"@en)
ObjectPropertyRange(:commandant :Person)
Declaration(ObjectProperty(:commander))
AnnotationAssertion(rdfs:label :commander "commander"@en)
ObjectPropertyRange(:commander :Person)
Declaration(ObjectProperty(:committeeInLegislature))
AnnotationAssertion(rdfs:label :committeeInLegislature "committee in legislature"@en)
AnnotationAssertion(rdfs:comment :committeeInLegislature "Committee in the legislature (eg.: Committee on Economic and Monetary Affairs of the European Parliament)."@en)
AnnotationAssertion(rdfs:label :committeeInLegislature "Ausschuss in der Legislative"@de)
ObjectPropertyDomain(:committeeInLegislature :Legislature)
Declaration(ObjectProperty(:commune))
AnnotationAssertion(rdfs:label :commune "commune"@fr)
AnnotationAssertion(rdfs:label :commune "commune"@en)
ObjectPropertyDomain(:commune :Settlement)
ObjectPropertyRange(:commune :Settlement)
Declaration(ObjectProperty(:company))
AnnotationAssertion(rdfs:label :company "εταιρεία"@el)
AnnotationAssertion(rdfs:label :company "company"@en)
AnnotationAssertion(rdfs:label :company "organisatie"@nl)
AnnotationAssertion(rdfs:label :company "会社"@ja)
ObjectPropertyRange(:company :Organisation)
Declaration(ObjectProperty(:comparable))
AnnotationAssertion(rdfs:comment :comparable "similar, unrelated rockets"@en)
AnnotationAssertion(rdfs:label :comparable "comparable"@en)
ObjectPropertyDomain(:comparable :Rocket)
ObjectPropertyRange(:comparable :Rocket)
Declaration(ObjectProperty(:competition))
AnnotationAssertion(rdfs:label :competition "competition"@en)
AnnotationAssertion(rdfs:label :competition "competición"@es)
AnnotationAssertion(rdfs:label :competition "competition"@fr)
ObjectPropertyDomain(:competition :SportCompetitionResult)
ObjectPropertyRange(:competition :Event)
Declaration(ObjectProperty(:compiler))
AnnotationAssertion(rdfs:label :compiler "compiler"@en)
AnnotationAssertion(rdfs:comment :compiler "For compilation albums: the person or entity responsible for selecting the album's track listing."@en)
ObjectPropertyDomain(:compiler :Album)
ObjectPropertyRange(:compiler :Person)
Declaration(ObjectProperty(:complexion))
AnnotationAssertion(rdfs:label :complexion "cor da pele"@pt)
AnnotationAssertion(rdfs:label :complexion "complexion"@en)
ObjectPropertyDomain(:complexion :Person)
Declaration(ObjectProperty(:component))
AnnotationAssertion(rdfs:label :component "component"@en)
ObjectPropertyDomain(:component :Brain)
ObjectPropertyRange(:component :AnatomicalStructure)
Declaration(ObjectProperty(:composer))
AnnotationAssertion(rdfs:label :composer "componist"@nl)
AnnotationAssertion(rdfs:label :composer "συνθέτης"@el)
AnnotationAssertion(rdfs:label :composer "composer"@en)
AnnotationAssertion(rdfs:label :composer "Komponist"@de)
AnnotationAssertion(rdfs:label :composer "compositeur"@fr)
ObjectPropertyRange(:composer :Person)
Declaration(ObjectProperty(:computingInput))
AnnotationAssertion(rdfs:label :computingInput "Computing input"@en)
ObjectPropertyDomain(:computingInput :Software)
Declaration(ObjectProperty(:computingMedia))
AnnotationAssertion(rdfs:label :computingMedia "Computing Media"@en)
ObjectPropertyDomain(:computingMedia :Software)
Declaration(ObjectProperty(:computingPlatform))
AnnotationAssertion(rdfs:comment :computingPlatform "some sort of hardware architecture or software framework, that allows this software to run"@en)
AnnotationAssertion(rdfs:label :computingPlatform "computing platform"@en)
ObjectPropertyDomain(:computingPlatform :Software)
AnnotationAssertion(rdfs:label :configuration "configuration"@en)
AnnotationAssertion(rdfs:label :configuration "configuration"@fr)
ObjectPropertyRange(:configuration <http://dbpedia.org/datatype/engineConfiguration>)
Declaration(ObjectProperty(:congressionalDistrict))
AnnotationAssertion(rdfs:label :congressionalDistrict "congressional district"@en)
ObjectPropertyDomain(:congressionalDistrict :AdministrativeRegion)
Declaration(ObjectProperty(:connotation))
AnnotationAssertion(rdfs:comment :connotation "A meaning of a word or phrase that is suggested or implied, as opposed to a denotation, or literal meaning."@en)
AnnotationAssertion(rdfs:label :connotation "connotation"@en)
Declaration(ObjectProperty(:constellation))
AnnotationAssertion(rdfs:label :constellation "Takımyıldız"@tr)
AnnotationAssertion(rdfs:label :constellation "gwiazdozbiór"@pl)
AnnotationAssertion(rdfs:label :constellation "constellation"@en)
AnnotationAssertion(rdfs:label :constellation "stelsel"@nl)
ObjectPropertyDomain(:constellation :Galaxy)
Declaration(ObjectProperty(:construction))
AnnotationAssertion(rdfs:label :construction "Konstruktion"@de)
AnnotationAssertion(rdfs:label :construction "construction"@en)
ObjectPropertyDomain(:construction :ArchitecturalStructure)
Declaration(ObjectProperty(:constructionMaterial))
AnnotationAssertion(rdfs:label :constructionMaterial "construction material"@en)
AnnotationAssertion(rdfs:comment :constructionMaterial "Construction material (eg. concrete, steel, iron, stone, brick, wood)."@en)
AnnotationAssertion(rdfs:label :constructionMaterial "Baumaterial"@de)
AnnotationAssertion(rdfs:label :constructionMaterial "bouwmateriaal"@nl)
ObjectPropertyDomain(:constructionMaterial :ArchitecturalStructure)
Declaration(ObjectProperty(:continent))
AnnotationAssertion(rdfs:label :continent "continente"@it)
AnnotationAssertion(rdfs:label :continent "continent"@en)
AnnotationAssertion(rdfs:comment :continent "links a country to the continent it belongs"@en)
ObjectPropertyDomain(:continent :Country)
ObjectPropertyRange(:continent :Continent)
Declaration(ObjectProperty(:contractor))
AnnotationAssertion(rdfs:label :contractor "aannemer"@nl)
AnnotationAssertion(rdfs:label :contractor "contractor"@en)
ObjectPropertyDomain(:contractor :Skyscraper)
ObjectPropertyRange(:contractor :Company)
Declaration(ObjectProperty(:coolingSystem))
AnnotationAssertion(rdfs:label :coolingSystem "cooling system"@en)
ObjectPropertyDomain(:coolingSystem :AutomobileEngine)
Declaration(ObjectProperty(:costumeDesigner))
AnnotationAssertion(rdfs:label :costumeDesigner "costumista"@it)
AnnotationAssertion(rdfs:comment :costumeDesigner "the person who is responsible for the film costume design"@en)
AnnotationAssertion(rdfs:label :costumeDesigner "costume designer"@en)
ObjectPropertyDomain(:costumeDesigner :Film)
ObjectPropertyRange(:costumeDesigner :Person)
Declaration(ObjectProperty(:councilArea))
AnnotationAssertion(rdfs:label :councilArea "Council area"@en)
ObjectPropertyDomain(:councilArea :PopulatedPlace)
ObjectPropertyRange(:councilArea :PopulatedPlace)
Declaration(ObjectProperty(:country))
AnnotationAssertion(rdfs:label :country "χώρα"@el)
AnnotationAssertion(rdfs:label :country "país"@pt)
AnnotationAssertion(rdfs:label :country "país"@es)
AnnotationAssertion(rdfs:label :country "Land"@de)
AnnotationAssertion(rdfs:label :country "country"@en)
AnnotationAssertion(rdfs:label :country "pays"@fr)
AnnotationAssertion(rdfs:label :country "land"@nl)
ObjectPropertyRange(:country :Country)
Declaration(ObjectProperty(:countryOrigin))
AnnotationAssertion(rdfs:label :countryOrigin "country origin"@en)
ObjectPropertyDomain(:countryOrigin :Rocket)
ObjectPropertyRange(:countryOrigin :Country)
Declaration(ObjectProperty(:countryWithFirstAstronaut))
AnnotationAssertion(rdfs:label :countryWithFirstAstronaut "country with first astronaut"@en)
ObjectPropertyDomain(:countryWithFirstAstronaut :YearInSpaceflight)
ObjectPropertyRange(:countryWithFirstAstronaut :Country)
Declaration(ObjectProperty(:countryWithFirstSatellite))
AnnotationAssertion(rdfs:label :countryWithFirstSatellite "country with first satellite"@en)
ObjectPropertyDomain(:countryWithFirstSatellite :YearInSpaceflight)
ObjectPropertyRange(:countryWithFirstSatellite :Country)
Declaration(ObjectProperty(:countryWithFirstSatelliteLaunched))
AnnotationAssertion(rdfs:label :countryWithFirstSatelliteLaunched "country with first satellite launched"@en)
ObjectPropertyDomain(:countryWithFirstSatelliteLaunched :YearInSpaceflight)
ObjectPropertyRange(:countryWithFirstSatelliteLaunched :Country)
Declaration(ObjectProperty(:countryWithFirstSpaceflight))
AnnotationAssertion(rdfs:label :countryWithFirstSpaceflight "country with first spaceflight"@en)
ObjectPropertyDomain(:countryWithFirstSpaceflight :YearInSpaceflight)
ObjectPropertyRange(:countryWithFirstSpaceflight :Country)
Declaration(ObjectProperty(:county))
AnnotationAssertion(rdfs:label :county "contae"@ga)
AnnotationAssertion(rdfs:label :county "provincie"@nl)
AnnotationAssertion(rdfs:label :county "county"@en)
AnnotationAssertion(rdfs:label :county "Επαρχία"@el)
AnnotationAssertion(rdfs:label :county "hrabstwo"@pl)
AnnotationAssertion(rdfs:label :county "Bezirk"@de)
ObjectPropertyRange(:county :PopulatedPlace)
Declaration(ObjectProperty(:countySeat))
AnnotationAssertion(rdfs:label :countySeat "provincie zetel"@nl)
AnnotationAssertion(rdfs:label :countySeat "county seat"@en)
ObjectPropertyDomain(:countySeat :PopulatedPlace)
Declaration(ObjectProperty(:coverArtist))
AnnotationAssertion(rdfs:label :coverArtist "cover artist"@en)
AnnotationAssertion(rdfs:comment :coverArtist "Cover artist"@en)
AnnotationAssertion(rdfs:label :coverArtist "cover artist"@nl)
ObjectPropertyDomain(:coverArtist :Book)
ObjectPropertyRange(:coverArtist :Person)
Declaration(ObjectProperty(:cpu))
AnnotationAssertion(rdfs:label :cpu "CPU"@en)
ObjectPropertyDomain(:cpu :Software)
Declaration(ObjectProperty(:creativeDirector))
AnnotationAssertion(rdfs:label :creativeDirector "creative director"@en)
ObjectPropertyDomain(:creativeDirector :TelevisionShow)
ObjectPropertyRange(:creativeDirector :Person)
Declaration(ObjectProperty(:creator))
AnnotationAssertion(rdfs:label :creator "maker"@nl)
AnnotationAssertion(rdfs:label :creator "creator"@en)
ObjectPropertyDomain(:creator :Work)
ObjectPropertyRange(:creator :Person)
Declaration(ObjectProperty(:creatorOfDish))
AnnotationAssertion(rdfs:comment :creatorOfDish "The person that creates (invents) the food (eg. Caesar Cardini is the creator of the Caesar salad)."@en)
AnnotationAssertion(rdfs:label :creatorOfDish "creator of dish"@en)
ObjectPropertyDomain(:creatorOfDish :Food)
ObjectPropertyRange(:creatorOfDish :Person)
Declaration(ObjectProperty(:crew))
AnnotationAssertion(rdfs:label :crew "πλήρωμα"@el)
AnnotationAssertion(rdfs:label :crew "crew"@en)
AnnotationAssertion(rdfs:label :crew "Crew"@de)
ObjectPropertyDomain(:crew :Spacecraft)
ObjectPropertyRange(:crew :SpaceMission)
Declaration(ObjectProperty(:crewMember))
AnnotationAssertion(rdfs:label :crewMember "crew member"@en)
ObjectPropertyDomain(:crewMember :SpaceMission)
ObjectPropertyRange(:crewMember :Astronaut)
Declaration(ObjectProperty(:crosses))
AnnotationAssertion(rdfs:label :crosses "crosses"@en)
AnnotationAssertion(rdfs:label :crosses "διασχίζει"@el)
ObjectPropertyDomain(:crosses :Bridge)
ObjectPropertyRange(:crosses :River)
Declaration(ObjectProperty(:cultivatedVariety))
AnnotationAssertion(rdfs:label :cultivatedVariety "cultivar"@en)
AnnotationAssertion(rdfs:comment :cultivatedVariety "Name of the cultivar (cultivated variety)"@en)
ObjectPropertyDomain(:cultivatedVariety :Plant)
ObjectPropertyRange(:cultivatedVariety :CultivatedVariety)
Declaration(ObjectProperty(:curator))
AnnotationAssertion(rdfs:label :curator "conservator"@nl)
AnnotationAssertion(rdfs:label :curator "curator"@en)
ObjectPropertyDomain(:curator :Museum)
ObjectPropertyRange(:curator :Person)
Declaration(ObjectProperty(:currency))
AnnotationAssertion(rdfs:label :currency "currency"@en)
AnnotationAssertion(rdfs:label :currency "devise"@fr)
AnnotationAssertion(rdfs:label :currency "valuta"@nl)
AnnotationAssertion(rdfs:label :currency "Währung"@de)
AnnotationAssertion(rdfs:label :currency "moeda"@pt)
ObjectPropertyRange(:currency :Currency)
Declaration(ObjectProperty(:currentMember))
AnnotationAssertion(rdfs:label :currentMember "current member"@en)
ObjectPropertyDomain(:currentMember :SportsTeam)
ObjectPropertyRange(:currentMember :Person)
Declaration(ObjectProperty(:currentPartner))
AnnotationAssertion(rdfs:label :currentPartner "current partner"@en)
ObjectPropertyDomain(:currentPartner :FigureSkater)
ObjectPropertyRange(:currentPartner :Person)
Declaration(ObjectProperty(:currentProduction))
AnnotationAssertion(rdfs:comment :currentProduction "The current production running in the theatre."@en)
AnnotationAssertion(rdfs:label :currentProduction "current production"@en)
ObjectPropertyDomain(:currentProduction :Theatre)
Declaration(ObjectProperty(:currentTeamMember))
AnnotationAssertion(rdfs:comment :currentTeamMember "A current member of an athletic team."@en)
AnnotationAssertion(rdfs:label :currentTeamMember "current team member"@en)
ObjectPropertyDomain(:currentTeamMember :SportsTeam)
ObjectPropertyRange(:currentTeamMember :TeamMember)
Declaration(ObjectProperty(:currentWorldChampion))
AnnotationAssertion(rdfs:label :currentWorldChampion "current world champion"@en)
AnnotationAssertion(rdfs:label :currentWorldChampion "huidig wereldkampioen"@nl)
AnnotationAssertion(rdfs:label :currentWorldChampion "actual Campeón del mundo"@es)
AnnotationAssertion(rdfs:label :currentWorldChampion "champion du monde actuel"@fr)
ObjectPropertyDomain(:currentWorldChampion :Sport)
ObjectPropertyRange(:currentWorldChampion :Agent)
Declaration(ObjectProperty(:custodian))
AnnotationAssertion(rdfs:label :custodian "custodian"@en)
ObjectPropertyDomain(:custodian :School)
ObjectPropertyRange(:custodian :Person)
Declaration(ObjectProperty(:daira))
AnnotationAssertion(rdfs:label :daira "daira"@en)
ObjectPropertyRange(:daira :Place)
Declaration(ObjectProperty(:dam))
AnnotationAssertion(rdfs:label :dam "dam"@en)
ObjectPropertyDomain(:dam :Animal)
ObjectPropertyRange(:dam :Animal)
Declaration(ObjectProperty(:damsire))
AnnotationAssertion(rdfs:label :damsire "damsire"@en)
ObjectPropertyDomain(:damsire :Animal)
ObjectPropertyRange(:damsire :Animal)
Declaration(ObjectProperty(:daylightSavingTimeZone))
AnnotationAssertion(rdfs:label :daylightSavingTimeZone "daylight saving time zone"@en)
ObjectPropertyDomain(:daylightSavingTimeZone :Place)
Declaration(ObjectProperty(:deFactoLanguage))
AnnotationAssertion(rdfs:label :deFactoLanguage "de facto language"@en)
EquivalentObjectProperties(:deFactoLanguage :language)
ObjectPropertyRange(:deFactoLanguage :Language)
Declaration(ObjectProperty(:dean))
AnnotationAssertion(rdfs:label :dean "dean"@en)
AnnotationAssertion(rdfs:label :dean "decaan"@nl)
AnnotationAssertion(rdfs:label :dean "πρύτανης"@el)
ObjectPropertyDomain(:dean :EducationalInstitution)
ObjectPropertyRange(:dean :Person)
Declaration(ObjectProperty(:deanery))
AnnotationAssertion(rdfs:label :deanery "proosdij"@nl)
AnnotationAssertion(rdfs:label :deanery "deanery"@en)
AnnotationAssertion(rdfs:comment :deanery "Dioceses and parishes should know which deaneries there are"@en)
ObjectPropertyDomain(:deanery <http://dbpedia.org/ontology/Diocese,_Parish>)
ObjectPropertyRange(:deanery :Deanery)
Declaration(ObjectProperty(:deathCause))
AnnotationAssertion(rdfs:label :deathCause "αιτία_θανάτου"@el)
AnnotationAssertion(rdfs:label :deathCause "Todesursache"@de)
AnnotationAssertion(rdfs:label :deathCause "doodsoorzaak"@nl)
AnnotationAssertion(rdfs:label :deathCause "death cause"@en)
ObjectPropertyDomain(:deathCause :Person)
Declaration(ObjectProperty(:deathPlace))
AnnotationAssertion(rdfs:label :deathPlace "τόπος_θανάτου"@el)
AnnotationAssertion(rdfs:label :deathPlace "lieu de décès"@fr)
AnnotationAssertion(rdfs:label :deathPlace "Sterbeort"@de)
AnnotationAssertion(rdfs:label :deathPlace "死没地"@ja)
AnnotationAssertion(rdfs:label :deathPlace "death place"@en)
AnnotationAssertion(rdfs:comment :deathPlace "the place where they died"@en)
AnnotationAssertion(rdfs:label :deathPlace "plaats van overlijden"@nl)
ObjectPropertyDomain(:deathPlace :Person)
ObjectPropertyRange(:deathPlace :Place)
Declaration(ObjectProperty(:debutTeam))
AnnotationAssertion(rdfs:label :debutTeam "debut team"@en)
ObjectPropertyDomain(:debutTeam :Athlete)
ObjectPropertyRange(:debutTeam :SportsTeam)
Declaration(ObjectProperty(:delegateMayor))
AnnotationAssertion(rdfs:label :delegateMayor "delegate mayor"@en)
ObjectPropertyDomain(:delegateMayor :PopulatedPlace)
ObjectPropertyRange(:delegateMayor :Person)
Declaration(ObjectProperty(:denomination))
AnnotationAssertion(rdfs:label :denomination "denomination"@en)
ObjectPropertyDomain(:denomination :School)
Declaration(ObjectProperty(:department))
AnnotationAssertion(rdfs:label :department "department"@en)
AnnotationAssertion(rdfs:label :department "afdeling"@nl)
AnnotationAssertion(rdfs:label :department "eskualdea"@eu)
AnnotationAssertion(rdfs:label :department "département"@fr)
ObjectPropertyDomain(:department :PopulatedPlace)
ObjectPropertyRange(:department :PopulatedPlace)
Declaration(ObjectProperty(:deputy))
AnnotationAssertion(rdfs:label :deputy "deputy"@en)
ObjectPropertyRange(:deputy :Person)
Declaration(ObjectProperty(:derivative))
AnnotationAssertion(rdfs:label :derivative "derivative"@en)
ObjectPropertyDomain(:derivative :MusicGenre)
ObjectPropertyRange(:derivative :MusicGenre)
Declaration(ObjectProperty(:designCompany))
AnnotationAssertion(rdfs:label :designCompany "designer company"@en)
ObjectPropertyDomain(:designCompany :MeanOfTransportation)
ObjectPropertyRange(:designCompany :Company)
Declaration(ObjectProperty(:designer))
AnnotationAssertion(rdfs:label :designer "designer"@en)
AnnotationAssertion(rdfs:label :designer "σχεδιαστής"@el)
ObjectPropertyRange(:designer :Person)
Declaration(ObjectProperty(:destination))
AnnotationAssertion(rdfs:label :destination "προορισμός"@el)
AnnotationAssertion(rdfs:label :destination "destination"@en)
ObjectPropertyDomain(:destination :Airline)
ObjectPropertyRange(:destination :PopulatedPlace)
Declaration(ObjectProperty(:developer))
AnnotationAssertion(rdfs:label :developer "developer"@en)
AnnotationAssertion(rdfs:label :developer "ontwikkelaar"@nl)
AnnotationAssertion(rdfs:label :developer "Entwickler"@de)
AnnotationAssertion(rdfs:label :developer "développeur"@fr)
ObjectPropertyRange(:developer :Company)
Declaration(ObjectProperty(:dfE))
AnnotationAssertion(rdfs:label :dfE "DfE"@en)
AnnotationAssertion(rdfs:comment :dfE "DfE number of a school in England or Wales"@en)
ObjectPropertyDomain(:dfE :School)
Declaration(ObjectProperty(:diocese))
AnnotationAssertion(rdfs:label :diocese "bisdom"@nl)
AnnotationAssertion(rdfs:label :diocese "diocese"@en)
AnnotationAssertion(rdfs:comment :diocese "A religious administrative body above the parish level"@en)
ObjectPropertyDomain(:diocese <http://dbpedia.org/ontology/Parish,_Deanery>)
ObjectPropertyRange(:diocese :Diocese)
Declaration(ObjectProperty(:director))
AnnotationAssertion(rdfs:label :director "σκηνοθέτης"@el)
AnnotationAssertion(rdfs:label :director "regisseur"@nl)
AnnotationAssertion(rdfs:label :director "directeur"@fr)
AnnotationAssertion(rdfs:label :director "Regisseur"@de)
AnnotationAssertion(rdfs:label :director "director"@en)
ObjectPropertyRange(:director :Person)
Declaration(ObjectProperty(:disciple))
AnnotationAssertion(rdfs:label :disciple "disciple"@en)
AnnotationAssertion(rdfs:comment :disciple "A person who learns from another, especially one who then teaches others.."@en)
AnnotationAssertion(rdfs:comment :disciple "Celui qui apprend d’un maître quelque science ou quelque art libéral."@fr)
AnnotationAssertion(rdfs:label :disciple "élève"@fr)
ObjectPropertyDomain(:disciple :Artist)
ObjectPropertyRange(:disciple :Artist)
Declaration(ObjectProperty(:discipline))
AnnotationAssertion(rdfs:label :discipline "discipline"@en)
ObjectPropertyDomain(:discipline :Agent)
Declaration(ObjectProperty(:discoverer))
AnnotationAssertion(rdfs:label :discoverer "discoverer"@en)
AnnotationAssertion(rdfs:label :discoverer "Ανακαλύφθηκε από"@el)
ObjectPropertyRange(:discoverer :Person)
Declaration(ObjectProperty(:distributingCompany))
AnnotationAssertion(rdfs:label :distributingCompany "distributing company"@en)
ObjectPropertyDomain(:distributingCompany :RecordLabel)
ObjectPropertyRange(:distributingCompany :Company)
Declaration(ObjectProperty(:distributingLabel))
AnnotationAssertion(rdfs:label :distributingLabel "distributing label"@en)
ObjectPropertyDomain(:distributingLabel :RecordLabel)
ObjectPropertyRange(:distributingLabel :RecordLabel)
Declaration(ObjectProperty(:distributor))
AnnotationAssertion(rdfs:label :distributor "distributor"@en)
AnnotationAssertion(rdfs:label :distributor "allumeur"@fr)
ObjectPropertyRange(:distributor :Organisation)
Declaration(ObjectProperty(:district))
AnnotationAssertion(rdfs:label :district "district"@en)
AnnotationAssertion(rdfs:label :district "streek"@nl)
AnnotationAssertion(rdfs:label :district "Bezirk"@de)
AnnotationAssertion(rdfs:label :district "distrito"@pt)
AnnotationAssertion(rdfs:label :district "περιοχή"@el)
ObjectPropertyDomain(:district :Place)
ObjectPropertyRange(:district :PopulatedPlace)
Declaration(ObjectProperty(:division))
AnnotationAssertion(rdfs:label :division "verdeling"@nl)
AnnotationAssertion(rdfs:label :division "division"@en)
Declaration(ObjectProperty(:doctoralAdvisor))
AnnotationAssertion(rdfs:label :doctoralAdvisor "διδακτορικός_σύμβουλος"@el)
AnnotationAssertion(rdfs:label :doctoralAdvisor "doctoral advisor"@en)
ObjectPropertyDomain(:doctoralAdvisor :Scientist)
ObjectPropertyRange(:doctoralAdvisor :Person)
Declaration(ObjectProperty(:doctoralStudent))
AnnotationAssertion(rdfs:label :doctoralStudent "διδακτορικοί_φοιτητές"@el)
AnnotationAssertion(rdfs:label :doctoralStudent "doctoraalstudent"@nl)
AnnotationAssertion(rdfs:label :doctoralStudent "doctoral student"@en)
ObjectPropertyDomain(:doctoralStudent :Scientist)
ObjectPropertyRange(:doctoralStudent :Person)
Declaration(ObjectProperty(:domain))
AnnotationAssertion(rdfs:label :domain "domein"@nl)
AnnotationAssertion(rdfs:label :domain "ドメイン_(分類学)"@ja)
AnnotationAssertion(rdfs:label :domain "domain"@en)
ObjectPropertyDomain(:domain :Species)
Declaration(ObjectProperty(:draftTeam))
AnnotationAssertion(rdfs:label :draftTeam "draft team"@en)
ObjectPropertyDomain(:draftTeam :Athlete)
ObjectPropertyRange(:draftTeam :SportsTeam)
Declaration(ObjectProperty(:drainsFrom))
AnnotationAssertion(rdfs:label :drainsFrom "drains from"@en)
ObjectPropertyDomain(:drainsFrom :AnatomicalStructure)
ObjectPropertyRange(:drainsFrom :AnatomicalStructure)
Declaration(ObjectProperty(:drainsTo))
AnnotationAssertion(rdfs:label :drainsTo "drains to"@en)
ObjectPropertyDomain(:drainsTo :AnatomicalStructure)
ObjectPropertyRange(:drainsTo :AnatomicalStructure)
Declaration(ObjectProperty(:drama))
AnnotationAssertion(rdfs:label :drama "drama"@en)
ObjectPropertyDomain(:drama :FictionalCharacter)
ObjectPropertyRange(:drama :Drama)
Declaration(ObjectProperty(:dubber))
AnnotationAssertion(rdfs:label :dubber "dubber"@en)
AnnotationAssertion(rdfs:comment :dubber "the person who dubs another person e.g. an actor or a fictional character in movies"@en)
ObjectPropertyDomain(:dubber :Person)
ObjectPropertyRange(:dubber :Person)
Declaration(ObjectProperty(:editing))
AnnotationAssertion(rdfs:label :editing "editing"@en)
ObjectPropertyDomain(:editing :Film)
ObjectPropertyRange(:editing :Person)
Declaration(ObjectProperty(:editor))
AnnotationAssertion(rdfs:label :editor "redacteur"@nl)
AnnotationAssertion(rdfs:label :editor "editor"@en)
AnnotationAssertion(rdfs:label :editor "Herausgeber"@de)
AnnotationAssertion(rdfs:label :editor "συντάκτης"@el)
ObjectPropertyRange(:editor :Agent)
Declaration(ObjectProperty(:education))
AnnotationAssertion(rdfs:label :education "education"@en)
AnnotationAssertion(rdfs:label :education "opleiding"@nl)
AnnotationAssertion(rdfs:label :education "教育"@ja)
AnnotationAssertion(rdfs:label :education "éducation"@fr)
ObjectPropertyDomain(:education :Person)
Declaration(ObjectProperty(:educationSystem))
AnnotationAssertion(rdfs:label :educationSystem "education system"@en)
ObjectPropertyDomain(:educationSystem :EducationalInstitution)
Declaration(ObjectProperty(:elementAbove))
AnnotationAssertion(rdfs:label :elementAbove "element above"@en)
AnnotationAssertion(rdfs:comment :elementAbove "Элемент снизу под текущим элементом в таблице Д.И.Менделеева"@ru)
AnnotationAssertion(rdfs:label :elementAbove "элемент снизу"@ru)
AnnotationAssertion(rdfs:label :elementAbove "hoger element"@nl)
AnnotationAssertion(rdfs:comment :elementAbove "element placed above to current element in table of D.I.Mendeleev"@en)
ObjectPropertyRange(:elementAbove :ChemicalSubstance)
Declaration(ObjectProperty(:emmyAward))
AnnotationAssertion(rdfs:label :emmyAward "Emmy Award"@en)
ObjectPropertyDomain(:emmyAward :Artist)
ObjectPropertyRange(:emmyAward :Award)
Declaration(ObjectProperty(:employer))
AnnotationAssertion(rdfs:label :employer "employer"@en)
AnnotationAssertion(rdfs:label :employer "θέσεις_εργασίας"@el)
AnnotationAssertion(rdfs:label :employer "雇用者"@ja)
ObjectPropertyDomain(:employer :Person)
ObjectPropertyRange(:employer :Organisation)
Declaration(ObjectProperty(:endPoint))
AnnotationAssertion(rdfs:label :endPoint "σημείο_τέλους"@el)
AnnotationAssertion(rdfs:label :endPoint "end point"@en)
ObjectPropertyDomain(:endPoint :Canal)
ObjectPropertyRange(:endPoint :Place)
Declaration(ObjectProperty(:endingTheme))
AnnotationAssertion(rdfs:label :endingTheme "ending theme"@en)
ObjectPropertyDomain(:endingTheme :TelevisionShow)
ObjectPropertyRange(:endingTheme :Work)
Declaration(ObjectProperty(:enemy))
AnnotationAssertion(rdfs:label :enemy "enemy"@en)
ObjectPropertyDomain(:enemy :FictionalCharacter)
ObjectPropertyRange(:enemy :Species)
Declaration(ObjectProperty(:engine))
AnnotationAssertion(rdfs:label :engine "motor"@pt)
AnnotationAssertion(rdfs:label :engine "μηχανή"@el)
AnnotationAssertion(rdfs:label :engine "engine"@en)
ObjectPropertyDomain(:engine :Automobile)
ObjectPropertyRange(:engine :AutomobileEngine)
Declaration(ObjectProperty(:engineType))
AnnotationAssertion(rdfs:label :engineType "engine type"@en)
ObjectPropertyDomain(:engineType :MeanOfTransportation)
Declaration(ObjectProperty(:engineer))
AnnotationAssertion(rdfs:label :engineer "engineer"@en)
AnnotationAssertion(rdfs:label :engineer "ingenieur"@nl)
AnnotationAssertion(rdfs:label :engineer "μηχανικός"@el)
AnnotationAssertion(rdfs:label :engineer "Ingenieur"@de)
ObjectPropertyRange(:engineer :Person)
Declaration(ObjectProperty(:enshrinedDeity))
AnnotationAssertion(rdfs:label :enshrinedDeity "祭神"@ja)
AnnotationAssertion(rdfs:label :enshrinedDeity "enshrined deity"@en)
ObjectPropertyDomain(:enshrinedDeity :Shrine)
ObjectPropertyRange(:enshrinedDeity :Deity)
Declaration(ObjectProperty(:entourage))
AnnotationAssertion(rdfs:label :entourage "entourage"@en)
ObjectPropertyDomain(:entourage :FictionalCharacter)
ObjectPropertyRange(:entourage :Species)
Declaration(ObjectProperty(:equipment))
AnnotationAssertion(rdfs:label :equipment "equipment"@en)
AnnotationAssertion(rdfs:label :equipment "εξοπλισμός"@el)
ObjectPropertyDomain(:equipment :Activity)
Declaration(ObjectProperty(:era))
AnnotationAssertion(rdfs:label :era "εποχή"@el)
AnnotationAssertion(rdfs:label :era "era"@en)
Declaration(ObjectProperty(:ethnicGroup))
AnnotationAssertion(rdfs:label :ethnicGroup "ethnie"@de)
AnnotationAssertion(rdfs:label :ethnicGroup "ethnic group"@en)
AnnotationAssertion(rdfs:label :ethnicGroup "etnia"@it)
ObjectPropertyDomain(:ethnicGroup :PopulatedPlace)
ObjectPropertyRange(:ethnicGroup :EthnicGroup)
Declaration(ObjectProperty(:ethnicity))
AnnotationAssertion(rdfs:label :ethnicity "ethnicity"@en)
AnnotationAssertion(rdfs:label :ethnicity "ethnische zugehörigkeit"@de)
AnnotationAssertion(rdfs:label :ethnicity "etnia"@it)
ObjectPropertyDomain(:ethnicity :Person)
ObjectPropertyRange(:ethnicity :EthnicGroup)
Declaration(ObjectProperty(:europeanAffiliation))
AnnotationAssertion(rdfs:label :europeanAffiliation "european affiliation"@en)
AnnotationAssertion(rdfs:label :europeanAffiliation "afiliacao europeia"@pt)
ObjectPropertyDomain(:europeanAffiliation :PoliticalParty)
Declaration(ObjectProperty(:europeanParliamentGroup))
AnnotationAssertion(rdfs:label :europeanParliamentGroup "grupo parlamentar europeu"@pt)
AnnotationAssertion(rdfs:label :europeanParliamentGroup "european parliament group"@en)
ObjectPropertyDomain(:europeanParliamentGroup :PoliticalParty)
Declaration(ObjectProperty(:event))
AnnotationAssertion(rdfs:label :event "event"@en)
AnnotationAssertion(rdfs:label :event "evento"@pt)
ObjectPropertyRange(:event :Event)
Declaration(ObjectProperty(:executiveHeadteacher))
AnnotationAssertion(rdfs:label :executiveHeadteacher "executive headteacher"@en)
ObjectPropertyDomain(:executiveHeadteacher :School)
ObjectPropertyRange(:executiveHeadteacher :Person)
Declaration(ObjectProperty(:executiveProducer))
AnnotationAssertion(rdfs:label :executiveProducer "executive producer"@en)
ObjectPropertyRange(:executiveProducer :Person)
Declaration(ObjectProperty(:explorer))
AnnotationAssertion(rdfs:label :explorer "kaşif"@tr)
AnnotationAssertion(rdfs:label :explorer "explorer"@en)
ObjectPropertyDomain(:explorer :Galaxy)
Declaration(ObjectProperty(:eyeColor))
AnnotationAssertion(rdfs:label :eyeColor "cor dos olhos"@pt)
AnnotationAssertion(rdfs:label :eyeColor "Augenfarbe"@de)
AnnotationAssertion(rdfs:label :eyeColor "eye color"@en)
ObjectPropertyDomain(:eyeColor :Person)
Declaration(ObjectProperty(:family))
AnnotationAssertion(rdfs:label :family "οικογένεια"@el)
AnnotationAssertion(rdfs:label :family "familie"@nl)
AnnotationAssertion(rdfs:label :family "rodzina"@pl)
AnnotationAssertion(rdfs:label :family "family"@en)
AnnotationAssertion(rdfs:label :family "familie"@de)
AnnotationAssertion(rdfs:label :family "科_(分類学)"@ja)
AnnotationAssertion(rdfs:label :family "famille"@fr)
ObjectPropertyDomain(:family :Species)
ObjectPropertyRange(:family :Species)
Declaration(ObjectProperty(:fastestDriver))
AnnotationAssertion(rdfs:label :fastestDriver "fastest driver"@en)
ObjectPropertyDomain(:fastestDriver :GrandPrix)
ObjectPropertyRange(:fastestDriver :Person)
Declaration(ObjectProperty(:fastestDriverCountry))
AnnotationAssertion(rdfs:label :fastestDriverCountry "fastest driver country"@en)
ObjectPropertyDomain(:fastestDriverCountry :GrandPrix)
ObjectPropertyRange(:fastestDriverCountry :Country)
Declaration(ObjectProperty(:fastestDriverTeam))
AnnotationAssertion(rdfs:label :fastestDriverTeam "fastest driver team"@en)
ObjectPropertyDomain(:fastestDriverTeam :GrandPrix)
ObjectPropertyRange(:fastestDriverTeam :SportsTeam)
Declaration(ObjectProperty(:father))
AnnotationAssertion(rdfs:label :father "father"@en)
ObjectPropertyDomain(:father :Person)
ObjectPropertyRange(:father :Person)
Declaration(ObjectProperty(:features))
AnnotationAssertion(rdfs:label :features "kenmerk"@nl)
AnnotationAssertion(rdfs:label :features "features"@en)
AnnotationAssertion(rdfs:label :features "χαρακτηριστικό"@el)
ObjectPropertyDomain(:features :ArchitecturalStructure)
ObjectPropertyRange(:features :Work)
Declaration(ObjectProperty(:federalState))
AnnotationAssertion(rdfs:label :federalState "federal state"@en)
AnnotationAssertion(rdfs:label :federalState "provincie"@nl)
AnnotationAssertion(rdfs:label :federalState "Bundesland"@de)
ObjectPropertyDomain(:federalState :Settlement)
ObjectPropertyRange(:federalState :PopulatedPlace)
Declaration(ObjectProperty(:field))
AnnotationAssertion(rdfs:label :field "field"@en)
ObjectPropertyDomain(:field :Artist)
Declaration(ObjectProperty(:film))
AnnotationAssertion(rdfs:label :film "film"@en)
AnnotationAssertion(rdfs:label :film "ταινία"@el)
AnnotationAssertion(rdfs:label :film "film"@de)
AnnotationAssertion(rdfs:label :film "film"@fr)
AnnotationAssertion(rdfs:label :film "film"@nl)
ObjectPropertyDomain(:film :FilmFestival)
ObjectPropertyRange(:film :Film)
Declaration(ObjectProperty(:filmFareAward))
AnnotationAssertion(rdfs:label :filmFareAward "Film Fare Award"@en)
ObjectPropertyDomain(:filmFareAward :Artist)
ObjectPropertyRange(:filmFareAward :Award)
Declaration(ObjectProperty(:firstAppearance))
AnnotationAssertion(rdfs:label :firstAppearance "first appearance"@en)
ObjectPropertyDomain(:firstAppearance :FictionalCharacter)
Declaration(ObjectProperty(:firstAscentPerson))
AnnotationAssertion(rdfs:label :firstAscentPerson "person that first ascented a mountain"@en)
ObjectPropertyDomain(:firstAscentPerson :Mountain)
ObjectPropertyRange(:firstAscentPerson :Person)
Declaration(ObjectProperty(:firstDriver))
AnnotationAssertion(rdfs:label :firstDriver "first driver"@en)
ObjectPropertyDomain(:firstDriver :GrandPrix)
ObjectPropertyRange(:firstDriver :Person)
Declaration(ObjectProperty(:firstDriverCountry))
AnnotationAssertion(rdfs:label :firstDriverCountry "first driver country"@en)
ObjectPropertyDomain(:firstDriverCountry :GrandPrix)
ObjectPropertyRange(:firstDriverCountry :Country)
Declaration(ObjectProperty(:firstDriverTeam))
AnnotationAssertion(rdfs:label :firstDriverTeam "winning team"@en)
ObjectPropertyDomain(:firstDriverTeam :GrandPrix)
ObjectPropertyRange(:firstDriverTeam :SportsTeam)
Declaration(ObjectProperty(:firstFlight))
AnnotationAssertion(rdfs:label :firstFlight "first flight"@en)
ObjectPropertyDomain(:firstFlight :SpaceShuttle)
ObjectPropertyRange(:firstFlight :SpaceMission)
Declaration(ObjectProperty(:firstLaunchRocket))
AnnotationAssertion(rdfs:label :firstLaunchRocket "first launch rocket"@en)
ObjectPropertyDomain(:firstLaunchRocket :LaunchPad)
ObjectPropertyRange(:firstLaunchRocket :Rocket)
Declaration(ObjectProperty(:firstLeader))
AnnotationAssertion(rdfs:label :firstLeader "firstLeader"@en)
AnnotationAssertion(rdfs:label :firstLeader "πρώτος ηγέτης"@el)
ObjectPropertyRange(:firstLeader :Person)
Declaration(ObjectProperty(:firstOlympicEvent))
AnnotationAssertion(rdfs:label :firstOlympicEvent "first olympic event"@en)
AnnotationAssertion(rdfs:label :firstOlympicEvent "première épreuve olympique"@fr)
ObjectPropertyDomain(:firstOlympicEvent :Sport)
ObjectPropertyRange(:firstOlympicEvent :OlympicEvent)
Declaration(ObjectProperty(:firstOwner))
AnnotationAssertion(rdfs:label :firstOwner "premier propriétaire"@fr)
AnnotationAssertion(rdfs:label :firstOwner "primer dueño"@es)
AnnotationAssertion(rdfs:label :firstOwner "first owner"@en)
ObjectPropertyRange(:firstOwner :Agent)
Declaration(ObjectProperty(:firstPopularVote))
AnnotationAssertion(rdfs:label :firstPopularVote "firstPopularVote"@en)
ObjectPropertyRange(:firstPopularVote :Person)
Declaration(ObjectProperty(:firstRace))
AnnotationAssertion(rdfs:label :firstRace "first race"@en)
ObjectPropertyDomain(:firstRace :FormulaOneRacer)
ObjectPropertyRange(:firstRace :GrandPrix)
Declaration(ObjectProperty(:firstWin))
AnnotationAssertion(rdfs:label :firstWin "first win"@en)
ObjectPropertyDomain(:firstWin :FormulaOneRacer)
ObjectPropertyRange(:firstWin :GrandPrix)
Declaration(ObjectProperty(:firstWinner))
AnnotationAssertion(rdfs:label :firstWinner "first winner"@en)
AnnotationAssertion(rdfs:label :firstWinner "πρώτος νικητής"@el)
ObjectPropertyDomain(:firstWinner :Race)
ObjectPropertyRange(:firstWinner :Person)
Declaration(ObjectProperty(:flagBearer))
AnnotationAssertion(rdfs:label :flagBearer "flag bearer"@en)
ObjectPropertyDomain(:flagBearer :OlympicResult)
ObjectPropertyRange(:flagBearer :Person)
Declaration(ObjectProperty(:followingEvent))
ObjectPropertyDomain(:followingEvent :Event)
ObjectPropertyRange(:followingEvent :Event)
Declaration(ObjectProperty(:follows))
AnnotationAssertion(rdfs:label :follows "follows"@en)
Declaration(ObjectProperty(:footedness))
AnnotationAssertion(rdfs:label :footedness "Footedness"@en)
AnnotationAssertion(rdfs:label :footedness "habilidade com o pé"@pt)
AnnotationAssertion(rdfs:comment :footedness "a preference to put one's left or right foot forward in surfing, wakeboarding, skateboarding, wakeskating, snowboarding and mountainboarding. The term is sometimes applied to the foot a footballer uses to kick."@en)
ObjectPropertyDomain(:footedness :Sport)
ObjectPropertyRange(:footedness :Person)
Declaration(ObjectProperty(:foresterDistrict))
AnnotationAssertion(rdfs:label :foresterDistrict "foresterDistrict"@en)
ObjectPropertyDomain(:foresterDistrict :Place)
Declaration(ObjectProperty(:format))
AnnotationAssertion(rdfs:label :format "formaat"@nl)
AnnotationAssertion(rdfs:label :format "format"@el)
AnnotationAssertion(rdfs:label :format "format"@en)
AnnotationAssertion(rdfs:label :format "format"@fr)
Declaration(ObjectProperty(:formerBandMember))
AnnotationAssertion(rdfs:comment :formerBandMember "A former member of the band."@en)
AnnotationAssertion(rdfs:label :formerBandMember "former band member"@en)
AnnotationAssertion(rdfs:label :formerBandMember "voormalig bandlid"@nl)
ObjectPropertyDomain(:formerBandMember :Band)
ObjectPropertyRange(:formerBandMember :Person)
Declaration(ObjectProperty(:formerBroadcastNetwork))
AnnotationAssertion(rdfs:label :formerBroadcastNetwork "former broadcast network"@en)
AnnotationAssertion(rdfs:comment :formerBroadcastNetwork "A former parent broadcast network to which the broadcaster once belonged."@en)
AnnotationAssertion(rdfs:label :formerBroadcastNetwork "ancienne chaîne de télévision généraliste"@fr)
AnnotationAssertion(rdfs:label :formerBroadcastNetwork "ehemalige Sendergruppe"@de)
AnnotationAssertion(rdfs:comment :formerBroadcastNetwork "Eine ehemalige Sendergruppe zu dem der Rundfunkveranstalter gehört hat."@de)
ObjectPropertyDomain(:formerBroadcastNetwork :Broadcaster)
ObjectPropertyRange(:formerBroadcastNetwork :BroadcastNetwork)
Declaration(ObjectProperty(:formerChoreographer))
AnnotationAssertion(rdfs:label :formerChoreographer "former choreographer"@en)
ObjectPropertyDomain(:formerChoreographer :FigureSkater)
ObjectPropertyRange(:formerChoreographer :Person)
Declaration(ObjectProperty(:formerCoach))
AnnotationAssertion(rdfs:label :formerCoach "former coach"@en)
ObjectPropertyDomain(:formerCoach :FigureSkater)
ObjectPropertyRange(:formerCoach :Person)
Declaration(ObjectProperty(:formerHighschool))
AnnotationAssertion(rdfs:label :formerHighschool "former highschool"@en)
ObjectPropertyDomain(:formerHighschool :NationalCollegiateAthleticAssociationAthlete)
ObjectPropertyRange(:formerHighschool :EducationalInstitution)
Declaration(ObjectProperty(:formerPartner))
AnnotationAssertion(rdfs:label :formerPartner "former partner"@en)
ObjectPropertyDomain(:formerPartner :FigureSkater)
ObjectPropertyRange(:formerPartner :Person)
Declaration(ObjectProperty(:formerTeam))
AnnotationAssertion(rdfs:label :formerTeam "former team"@en)
AnnotationAssertion(rdfs:label :formerTeam "voormalig team"@nl)
ObjectPropertyDomain(:formerTeam :Athlete)
ObjectPropertyRange(:formerTeam :SportsTeam)
Declaration(ObjectProperty(:foundationPlace))
AnnotationAssertion(rdfs:label :foundationPlace "foundation place"@en)
ObjectPropertyDomain(:foundationPlace :Organisation)
ObjectPropertyRange(:foundationPlace :City)
Declaration(ObjectProperty(:foundedBy))
AnnotationAssertion(rdfs:label :foundedBy "gegründet von"@de)
AnnotationAssertion(rdfs:comment :foundedBy "Identifys the founder of the described entity. This can be a person or a organisation for instance."@en)
AnnotationAssertion(rdfs:label :foundedBy "gesticht door"@nl)
AnnotationAssertion(rdfs:label :foundedBy "founded by"@en)
ObjectPropertyRange(:foundedBy :Agent)
Declaration(ObjectProperty(:founder))
AnnotationAssertion(rdfs:label :founder "Founder"@en)
AnnotationAssertion(rdfs:label :founder "Ιδρυτής"@el)
Declaration(ObjectProperty(:foundingPerson))
AnnotationAssertion(rdfs:label :foundingPerson "stichter"@nl)
AnnotationAssertion(rdfs:label :foundingPerson "founding person"@en)
AnnotationAssertion(rdfs:label :foundingPerson "Gründer"@de)
AnnotationAssertion(rdfs:label :foundingPerson "Ιδρυτής"@el)
ObjectPropertyDomain(:foundingPerson :PopulatedPlace)
ObjectPropertyRange(:foundingPerson :Person)
Declaration(ObjectProperty(:fourthCommander))
AnnotationAssertion(rdfs:label :fourthCommander "fourth commander"@en)
ObjectPropertyDomain(:fourthCommander :MilitaryUnit)
ObjectPropertyRange(:fourthCommander :Person)
Declaration(ObjectProperty(:frazioni))
AnnotationAssertion(rdfs:label :frazioni "frazioni"@en)
ObjectPropertyDomain(:frazioni :Settlement)
ObjectPropertyRange(:frazioni :PopulatedPlace)
Declaration(ObjectProperty(:fuel))
AnnotationAssertion(rdfs:label :fuel "carburant"@fr)
AnnotationAssertion(rdfs:label :fuel "fuel"@en)
AnnotationAssertion(rdfs:label :fuel "καύσιμα"@el)
AnnotationAssertion(rdfs:label :fuel "Treibstoff"@de)
AnnotationAssertion(rdfs:label :fuel "brandstof"@nl)
Declaration(ObjectProperty(:fuelSystem))
AnnotationAssertion(rdfs:label :fuelSystem "fuel system"@en)
ObjectPropertyDomain(:fuelSystem :AutomobileEngine)
AnnotationAssertion(rdfs:label :fuelType "fuel type"@en)
ObjectPropertyRange(:fuelType <http://dbpedia.org/datatype/fuelType>)
Declaration(ObjectProperty(:fundedBy))
AnnotationAssertion(rdfs:label :fundedBy "funded by"@en)
AnnotationAssertion(rdfs:comment :fundedBy "A organisation financing the research project."@en)
ObjectPropertyDomain(:fundedBy :ResearchProject)
ObjectPropertyRange(:fundedBy :Organisation)
Declaration(ObjectProperty(:gameArtist))
AnnotationAssertion(rdfs:label :gameArtist "game artist"@en)
AnnotationAssertion(rdfs:label :gameArtist "ゲームデザイナー"@ja)
AnnotationAssertion(rdfs:comment :gameArtist "A game artist is an artist who creates art for one or more types of games. Game artists are responsible for all of the aspects of game development that call for visual art."@en)
ObjectPropertyDomain(:gameArtist :VideoGame)
ObjectPropertyRange(:gameArtist :Person)
Declaration(ObjectProperty(:gameEngine))
AnnotationAssertion(rdfs:label :gameEngine "ゲームエンジン"@ja)
AnnotationAssertion(rdfs:label :gameEngine "Game Engine"@en)
ObjectPropertyDomain(:gameEngine :VideoGame)
Declaration(ObjectProperty(:garrison))
AnnotationAssertion(rdfs:label :garrison "garrison"@en)
ObjectPropertyDomain(:garrison :MilitaryUnit)
ObjectPropertyRange(:garrison :PopulatedPlace)
Declaration(ObjectProperty(:gaudiAward))
AnnotationAssertion(rdfs:comment :gaudiAward "Awards of the Catalan Academy of Cinema"@en)
AnnotationAssertion(rdfs:label :gaudiAward "Gaudí Award"@en)
AnnotationAssertion(rdfs:label :gaudiAward "Premis Gaudí"@ca)
ObjectPropertyDomain(:gaudiAward :Artist)
ObjectPropertyRange(:gaudiAward :Award)
Declaration(ObjectProperty(:geminiAward))
AnnotationAssertion(rdfs:label :geminiAward "Gemini Award"@en)
ObjectPropertyDomain(:geminiAward :Actor)
ObjectPropertyRange(:geminiAward :Award)
Declaration(ObjectProperty(:gender))
AnnotationAssertion(rdfs:label :gender "geslacht"@nl)
AnnotationAssertion(rdfs:label :gender "Geschlecht"@de)
AnnotationAssertion(rdfs:label :gender "φύλο"@el)
AnnotationAssertion(rdfs:label :gender "gender"@en)
Declaration(ObjectProperty(:geneLocation))
AnnotationAssertion(rdfs:label :geneLocation "Gene Location"@en)
AnnotationAssertion(rdfs:label :geneLocation "遺伝子座"@ja)
ObjectPropertyDomain(:geneLocation :Gene)
ObjectPropertyRange(:geneLocation :GeneLocation)
Declaration(ObjectProperty(:generalManager))
AnnotationAssertion(rdfs:label :generalManager "general manager"@en)
ObjectPropertyDomain(:generalManager :SportsTeam)
ObjectPropertyRange(:generalManager :Person)
Declaration(ObjectProperty(:genre))
AnnotationAssertion(rdfs:label :genre "genre"@en)
AnnotationAssertion(rdfs:label :genre "genre"@fr)
AnnotationAssertion(rdfs:label :genre "genre"@nl)
AnnotationAssertion(rdfs:label :genre "είδος"@el)
AnnotationAssertion(rdfs:label :genre "ジャンル"@ja)
Declaration(ObjectProperty(:genus))
AnnotationAssertion(rdfs:label :genus "geslacht"@nl)
AnnotationAssertion(rdfs:label :genus "属_(分類学)"@ja)
AnnotationAssertion(rdfs:label :genus "genus"@en)
ObjectPropertyDomain(:genus :Species)
Declaration(ObjectProperty(:geolocDepartment))
AnnotationAssertion(rdfs:label :geolocDepartment "geolocDepartment"@en)
ObjectPropertyDomain(:geolocDepartment :Settlement)
ObjectPropertyRange(:geolocDepartment :PopulatedPlace)
Declaration(ObjectProperty(:giniCoefficientCategory))
AnnotationAssertion(rdfs:label :giniCoefficientCategory "gini coefficient category"@en)
AnnotationAssertion(rdfs:label :giniCoefficientCategory "categoria do coeficiente de Gini"@pt)
ObjectPropertyDomain(:giniCoefficientCategory :PopulatedPlace)
Declaration(ObjectProperty(:goldMedalist))
AnnotationAssertion(rdfs:label :goldMedalist "gold medalist"@en)
AnnotationAssertion(rdfs:label :goldMedalist "medalha de ouro"@pt)
ObjectPropertyDomain(:goldMedalist :SportsEvent)
ObjectPropertyRange(:goldMedalist :Person)
Declaration(ObjectProperty(:goldenCalfAward))
AnnotationAssertion(rdfs:label :goldenCalfAward "Golden Calf Award"@en)
ObjectPropertyDomain(:goldenCalfAward :Actor)
ObjectPropertyRange(:goldenCalfAward :Award)
Declaration(ObjectProperty(:goldenGlobeAward))
AnnotationAssertion(rdfs:label :goldenGlobeAward "Golden Globe Award"@en)
ObjectPropertyDomain(:goldenGlobeAward :Artist)
ObjectPropertyRange(:goldenGlobeAward :Award)
Declaration(ObjectProperty(:goldenRaspberryAward))
AnnotationAssertion(rdfs:label :goldenRaspberryAward "Golden Raspberry Award"@en)
ObjectPropertyDomain(:goldenRaspberryAward :Actor)
ObjectPropertyRange(:goldenRaspberryAward :Award)
Declaration(ObjectProperty(:governingBody))
AnnotationAssertion(rdfs:label :governingBody "Verwaltungsgremium"@de)
AnnotationAssertion(rdfs:label :governingBody "governing body"@en)
AnnotationAssertion(rdfs:label :governingBody "bestuursorgaan"@nl)
AnnotationAssertion(rdfs:comment :governingBody "Body that owns/operates the Place."@en)
ObjectPropertyDomain(:governingBody :Place)
ObjectPropertyRange(:governingBody :Organisation)
Declaration(ObjectProperty(:government))
AnnotationAssertion(rdfs:label :government "government"@en)
AnnotationAssertion(rdfs:label :government "gouvernement"@fr)
ObjectPropertyDomain(:government :Island)
Declaration(ObjectProperty(:governmentCountry))
AnnotationAssertion(rdfs:label :governmentCountry "government country"@en)
ObjectPropertyDomain(:governmentCountry :Island)
ObjectPropertyRange(:governmentCountry :Country)
Declaration(ObjectProperty(:governmentMountain))
AnnotationAssertion(rdfs:label :governmentMountain "government mountain"@en)
ObjectPropertyDomain(:governmentMountain :Island)
ObjectPropertyRange(:governmentMountain :Mountain)
Declaration(ObjectProperty(:governmentPlace))
AnnotationAssertion(rdfs:label :governmentPlace "government place"@en)
ObjectPropertyDomain(:governmentPlace :Island)
ObjectPropertyRange(:governmentPlace :PopulatedPlace)
Declaration(ObjectProperty(:governmentPosition))
AnnotationAssertion(rdfs:label :governmentPosition "government position"@en)
ObjectPropertyDomain(:governmentPosition :Island)
ObjectPropertyRange(:governmentPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:governmentRegion))
AnnotationAssertion(rdfs:label :governmentRegion "government region"@en)
ObjectPropertyDomain(:governmentRegion :Island)
ObjectPropertyRange(:governmentRegion :PopulatedPlace)
Declaration(ObjectProperty(:governmentType))
AnnotationAssertion(rdfs:label :governmentType "government type"@en)
AnnotationAssertion(rdfs:label :governmentType "staatsvorm"@nl)
AnnotationAssertion(rdfs:comment :governmentType "broadly, the type of structure of its government"@en)
AnnotationAssertion(rdfs:label :governmentType "tipo de governo"@pt)
AnnotationAssertion(rdfs:label :governmentType "Staatsform"@de)
ObjectPropertyRange(:governmentType :GovernmentType)
Declaration(ObjectProperty(:governor))
AnnotationAssertion(rdfs:label :governor "governor"@en)
AnnotationAssertion(rdfs:label :governor "κυβερνήτης"@el)
AnnotationAssertion(rdfs:label :governor "gouverneur"@fr)
ObjectPropertyRange(:governor :Person)
Declaration(ObjectProperty(:governorGeneral))
AnnotationAssertion(rdfs:label :governorGeneral "governor general"@en)
ObjectPropertyRange(:governorGeneral :Person)
Declaration(ObjectProperty(:goyaAward))
AnnotationAssertion(rdfs:label :goyaAward "Goya Award"@en)
ObjectPropertyDomain(:goyaAward :Artist)
ObjectPropertyRange(:goyaAward :Award)
Declaration(ObjectProperty(:grades))
AnnotationAssertion(rdfs:label :grades "grades"@en)
AnnotationAssertion(rdfs:label :grades "βαθμοί"@el)
ObjectPropertyDomain(:grades :School)
Declaration(ObjectProperty(:grammyAward))
AnnotationAssertion(rdfs:label :grammyAward "Grammy Award"@en)
ObjectPropertyDomain(:grammyAward :Artist)
ObjectPropertyRange(:grammyAward :Award)
Declaration(ObjectProperty(:grandsire))
AnnotationAssertion(rdfs:label :grandsire "grandsire"@en)
ObjectPropertyDomain(:grandsire :Animal)
ObjectPropertyRange(:grandsire :Animal)
Declaration(ObjectProperty(:ground))
AnnotationAssertion(rdfs:label :ground "ground"@en)
ObjectPropertyDomain(:ground :SoccerClub)
ObjectPropertyRange(:ground :Place)
Declaration(ObjectProperty(:growingGrape))
AnnotationAssertion(rdfs:label :growingGrape "growing grape"@en)
ObjectPropertyDomain(:growingGrape :WineRegion)
ObjectPropertyRange(:growingGrape :Grape)
Declaration(ObjectProperty(:guest))
AnnotationAssertion(rdfs:label :guest "επισκέπτης"@el)
AnnotationAssertion(rdfs:label :guest "guest"@en)
ObjectPropertyDomain(:guest :TelevisionEpisode)
ObjectPropertyRange(:guest :Person)
Declaration(ObjectProperty(:hairColor))
AnnotationAssertion(rdfs:label :hairColor "hair color"@en)
AnnotationAssertion(rdfs:label :hairColor "cor do cabelo"@pt)
AnnotationAssertion(rdfs:label :hairColor "Haarfarbe"@de)
ObjectPropertyDomain(:hairColor :Person)
Declaration(ObjectProperty(:handedness))
AnnotationAssertion(rdfs:label :handedness "handedness"@en)
AnnotationAssertion(rdfs:comment :handedness "an attribute of humans defined by their unequal distribution of fine motor skill between the left and right hands."@en)
AnnotationAssertion(rdfs:label :handedness "habilidade com a mao"@pt)
ObjectPropertyDomain(:handedness :Person)
Declaration(ObjectProperty(:hasChannel))
AnnotationAssertion(rdfs:label :hasChannel "has channel"@en)
Declaration(ObjectProperty(:hasInput))
AnnotationAssertion(rdfs:label :hasInput "has input"@en)
Declaration(ObjectProperty(:hasJunctionWith))
AnnotationAssertion(rdfs:label :hasJunctionWith "σύνδεση"@el)
AnnotationAssertion(rdfs:label :hasJunctionWith "has junction with"@en)
ObjectPropertyDomain(:hasJunctionWith :Canal)
ObjectPropertyRange(:hasJunctionWith :Canal)
Declaration(ObjectProperty(:hasVariant))
AnnotationAssertion(rdfs:comment :hasVariant "variant or variation, for example all variations of a color"@en)
AnnotationAssertion(rdfs:label :hasVariant "variant of variatie"@nl)
AnnotationAssertion(rdfs:label :hasVariant "variant or variation"@en)
Declaration(ObjectProperty(:head))
AnnotationAssertion(rdfs:label :head "head"@en)
ObjectPropertyDomain(:head :EducationalInstitution)
ObjectPropertyRange(:head :Person)
Declaration(ObjectProperty(:headAlloy))
AnnotationAssertion(rdfs:label :headAlloy "head alloy"@en)
ObjectPropertyDomain(:headAlloy :AutomobileEngine)
Declaration(ObjectProperty(:headChef))
AnnotationAssertion(rdfs:label :headChef "chef-kok"@nl)
AnnotationAssertion(rdfs:label :headChef "head chef"@en)
ObjectPropertyDomain(:headChef :Restaurant)
ObjectPropertyRange(:headChef :Person)
Declaration(ObjectProperty(:headquarter))
AnnotationAssertion(rdfs:label :headquarter "Hauptsitz"@de)
AnnotationAssertion(rdfs:label :headquarter "headquarter"@en)
AnnotationAssertion(rdfs:label :headquarter "αρχηγείο"@el)
ObjectPropertyDomain(:headquarter :Organisation)
ObjectPropertyRange(:headquarter :PopulatedPlace)
Declaration(ObjectProperty(:headteacher))
AnnotationAssertion(rdfs:label :headteacher "head teacher"@en)
ObjectPropertyDomain(:headteacher :School)
ObjectPropertyRange(:headteacher :Person)
Declaration(ObjectProperty(:heir))
AnnotationAssertion(rdfs:label :heir "heir"@en)
AnnotationAssertion(rdfs:label :heir "Erbe"@de)
ObjectPropertyDomain(:heir :Monarch)
ObjectPropertyRange(:heir :Person)
Declaration(ObjectProperty(:heritageRegister))
AnnotationAssertion(rdfs:label :heritageRegister "inventaire du patrimoine"@fr)
AnnotationAssertion(rdfs:comment :heritageRegister "registered in a heritage register : inventory of cultural properties, natural and man-made, tangible and intangible, movable and immovable, that are deemed to be of sufficient heritage value to be separately identified and recorded."@en)
AnnotationAssertion(rdfs:comment :heritageRegister "inscrit à un inventaires dédiés à la conservation du patrimoine, naturel ou culturel, existants dans le monde."@fr)
AnnotationAssertion(rdfs:label :heritageRegister "heritage register"@en)
ObjectPropertyDomain(:heritageRegister :Place)
Declaration(ObjectProperty(:highestMountain))
AnnotationAssertion(rdfs:label :highestMountain "highest mountain"@en)
ObjectPropertyRange(:highestMountain :Mountain)
Declaration(ObjectProperty(:highestPlace))
AnnotationAssertion(rdfs:label :highestPlace "highest place"@en)
ObjectPropertyRange(:highestPlace :PopulatedPlace)
Declaration(ObjectProperty(:highestPoint))
AnnotationAssertion(rdfs:label :highestPoint "highest point of a norwegian settlement"@en)
ObjectPropertyRange(:highestPoint :Place)
Declaration(ObjectProperty(:highestPosition))
AnnotationAssertion(rdfs:label :highestPosition "highest position"@en)
ObjectPropertyRange(:highestPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:highestRegion))
AnnotationAssertion(rdfs:label :highestRegion "hoogste regio"@nl)
AnnotationAssertion(rdfs:label :highestRegion "highest region"@en)
ObjectPropertyDomain(:highestRegion :Island)
ObjectPropertyRange(:highestRegion :PopulatedPlace)
Declaration(ObjectProperty(:highestState))
AnnotationAssertion(rdfs:label :highestState "highest state"@en)
ObjectPropertyDomain(:highestState :Island)
ObjectPropertyRange(:highestState :PopulatedPlace)
Declaration(ObjectProperty(:highschool))
AnnotationAssertion(rdfs:label :highschool "highschool"@en)
ObjectPropertyRange(:highschool :School)
Declaration(ObjectProperty(:highwaySystem))
AnnotationAssertion(rdfs:label :highwaySystem "highway system"@en)
AnnotationAssertion(rdfs:comment :highwaySystem "the highway system that a route is part of"@en)
ObjectPropertyDomain(:highwaySystem :Road)
Declaration(ObjectProperty(:homeArena))
AnnotationAssertion(rdfs:label :homeArena "home arena"@en)
ObjectPropertyRange(:homeArena :Arena)
Declaration(ObjectProperty(:homeStadium))
AnnotationAssertion(rdfs:label :homeStadium "home stadium"@en)
ObjectPropertyRange(:homeStadium :Stadium)
Declaration(ObjectProperty(:homeport))
AnnotationAssertion(rdfs:label :homeport "homeport"@en)
ObjectPropertyDomain(:homeport :Ship)
Declaration(ObjectProperty(:hometown))
AnnotationAssertion(rdfs:label :hometown "Heimatort"@de)
AnnotationAssertion(rdfs:label :hometown "home town"@en)
ObjectPropertyDomain(:hometown :Person)
ObjectPropertyRange(:hometown :Settlement)
Declaration(ObjectProperty(:honours))
AnnotationAssertion(rdfs:label :honours "honours"@en)
AnnotationAssertion(rdfs:label :honours "eerbewijzen"@nl)
AnnotationAssertion(rdfs:label :honours "διακρίσεις"@el)
ObjectPropertyDomain(:honours :Agent)
Declaration(ObjectProperty(:house))
AnnotationAssertion(rdfs:label :house "σπίτι"@el)
AnnotationAssertion(rdfs:label :house "house"@en)
ObjectPropertyDomain(:house :Legislature)
ObjectPropertyRange(:house :Legislature)
Declaration(ObjectProperty(:hubAirport))
AnnotationAssertion(rdfs:label :hubAirport "hub airport"@en)
ObjectPropertyDomain(:hubAirport :Airline)
ObjectPropertyRange(:hubAirport :Airport)
Declaration(ObjectProperty(:humanDevelopmentIndexRankingCategory))
AnnotationAssertion(rdfs:label :humanDevelopmentIndexRankingCategory "human development index (HDI) category"@en)
AnnotationAssertion(rdfs:label :humanDevelopmentIndexRankingCategory "categoria do indice de desenvolvimento humano (IDH)"@pt)
ObjectPropertyDomain(:humanDevelopmentIndexRankingCategory :PopulatedPlace)
Declaration(ObjectProperty(:hybrid))
AnnotationAssertion(rdfs:label :hybrid "hybrid"@en)
AnnotationAssertion(rdfs:comment :hybrid "Plants from which another plant (or cultivar) has been developed from"@en)
ObjectPropertyDomain(:hybrid :Plant)
ObjectPropertyRange(:hybrid :Plant)
Declaration(ObjectProperty(:ideology))
AnnotationAssertion(rdfs:label :ideology "ideologie"@nl)
AnnotationAssertion(rdfs:label :ideology "ιδεολογία"@el)
AnnotationAssertion(rdfs:label :ideology "ideologia"@pt)
AnnotationAssertion(rdfs:label :ideology "Ideologie"@de)
AnnotationAssertion(rdfs:label :ideology "ideology"@en)
ObjectPropertyDomain(:ideology :Agent)
ObjectPropertyRange(:ideology :Ideology)
Declaration(ObjectProperty(:iftaAward))
AnnotationAssertion(rdfs:label :iftaAward "IFTA Award"@en)
ObjectPropertyDomain(:iftaAward :Actor)
ObjectPropertyRange(:iftaAward :Award)
Declaration(ObjectProperty(:illustrator))
AnnotationAssertion(rdfs:label :illustrator "illustrateur"@fr)
AnnotationAssertion(rdfs:label :illustrator "illustrator"@en)
AnnotationAssertion(rdfs:label :illustrator "illustrator"@nl)
AnnotationAssertion(rdfs:comment :illustrator "Illustrator (where used throughout and a major feature)"@en)
ObjectPropertyDomain(:illustrator :Book)
ObjectPropertyRange(:illustrator :Person)
Declaration(ObjectProperty(:incumbent))
AnnotationAssertion(rdfs:label :incumbent "incumbent"@en)
AnnotationAssertion(rdfs:label :incumbent "plaatsbekleder"@nl)
ObjectPropertyRange(:incumbent :Person)
Declaration(ObjectProperty(:industry))
AnnotationAssertion(rdfs:label :industry "industry"@en)
AnnotationAssertion(rdfs:label :industry "industrie"@fr)
ObjectPropertyDomain(:industry :Company)
Declaration(ObjectProperty(:inflow))
AnnotationAssertion(rdfs:label :inflow "inflow"@en)
AnnotationAssertion(rdfs:label :inflow "εισροή"@el)
ObjectPropertyDomain(:inflow :Lake)
ObjectPropertyRange(:inflow :River)
Declaration(ObjectProperty(:influenced))
AnnotationAssertion(rdfs:label :influenced "influenced"@en)
AnnotationAssertion(rdfs:label :influenced "a influencé"@fr)
AnnotationAssertion(rdfs:label :influenced "επηρέασε"@el)
ObjectPropertyDomain(:influenced :Person)
ObjectPropertyRange(:influenced :Person)
Declaration(ObjectProperty(:influencedBy))
AnnotationAssertion(rdfs:label :influencedBy "επιρροές"@el)
AnnotationAssertion(rdfs:label :influencedBy "influencé par"@fr)
AnnotationAssertion(rdfs:label :influencedBy "beïnvloed door"@nl)
AnnotationAssertion(rdfs:label :influencedBy "influenced by"@en)
ObjectPropertyDomain(:influencedBy :Person)
ObjectPropertyRange(:influencedBy :Person)
Declaration(ObjectProperty(:ingredient))
AnnotationAssertion(rdfs:label :ingredient "Zutat"@de)
AnnotationAssertion(rdfs:label :ingredient "ingredient"@en)
AnnotationAssertion(rdfs:comment :ingredient "An ingredient is a substance that forms part of a mixture (in a general sense). Here it is used in the context of recipes that specify which ingredients are used to prepare a specific dish or drink."@en)
ObjectPropertyDomain(:ingredient :Food)
Declaration(ObjectProperty(:innervates))
AnnotationAssertion(rdfs:label :innervates "innervates"@en)
ObjectPropertyDomain(:innervates :Nerve)
ObjectPropertyRange(:innervates :AnatomicalStructure)
Declaration(ObjectProperty(:institution))
AnnotationAssertion(rdfs:label :institution "institution"@en)
AnnotationAssertion(rdfs:label :institution "institutie"@nl)
ObjectPropertyDomain(:institution :Person)
ObjectPropertyRange(:institution :Organisation)
Declaration(ObjectProperty(:instrument))
AnnotationAssertion(rdfs:label :instrument "instrument"@nl)
AnnotationAssertion(rdfs:label :instrument "όργανο"@el)
AnnotationAssertion(rdfs:label :instrument "instrument"@en)
ObjectPropertyDomain(:instrument :Artist)
ObjectPropertyRange(:instrument :Instrument)
Declaration(ObjectProperty(:intercommunality))
AnnotationAssertion(rdfs:label :intercommunality "intercommunality"@en)
ObjectPropertyRange(:intercommunality :PopulatedPlace)
Declaration(ObjectProperty(:internationalAffiliation))
AnnotationAssertion(rdfs:label :internationalAffiliation "afiliacao internacional"@pt)
AnnotationAssertion(rdfs:label :internationalAffiliation "international affiliation"@en)
ObjectPropertyDomain(:internationalAffiliation :PoliticalParty)
Declaration(ObjectProperty(:isPartOf))
AnnotationAssertion(rdfs:label :isPartOf "is part of"@en)
AnnotationAssertion(rdfs:label :isPartOf "ist ein Teil von"@de)
Declaration(ObjectProperty(:isPartOfAnatomicalStructure))
AnnotationAssertion(rdfs:label :isPartOfAnatomicalStructure "is part of anatomical structure"@en)
AnnotationAssertion(rdfs:label :isPartOfAnatomicalStructure "ist ein Teil von anatomischer Struktur"@de)
ObjectPropertyDomain(:isPartOfAnatomicalStructure :Brain)
ObjectPropertyRange(:isPartOfAnatomicalStructure :AnatomicalStructure)
Declaration(ObjectProperty(:isPartOfMilitaryConflict))
AnnotationAssertion(rdfs:label :isPartOfMilitaryConflict "is part of military conflict"@en)
ObjectPropertyDomain(:isPartOfMilitaryConflict :MilitaryConflict)
ObjectPropertyRange(:isPartOfMilitaryConflict :MilitaryConflict)
Declaration(ObjectProperty(:isPartOfWineRegion))
AnnotationAssertion(rdfs:label :isPartOfWineRegion "is part of wine region"@en)
ObjectPropertyDomain(:isPartOfWineRegion :WineRegion)
ObjectPropertyRange(:isPartOfWineRegion :WineRegion)
Declaration(ObjectProperty(:island))
AnnotationAssertion(rdfs:label :island "island"@en)
AnnotationAssertion(rdfs:label :island "νησιά"@el)
ObjectPropertyDomain(:island :Lake)
ObjectPropertyRange(:island :Island)
Declaration(ObjectProperty(:iso6391Code))
AnnotationAssertion(rdfs:label :iso6391Code "ISO 639-1 code"@nl)
AnnotationAssertion(rdfs:label :iso6391Code "kod ISO 639-1"@pl)
AnnotationAssertion(rdfs:label :iso6391Code "ISO 639-1 code"@en)
ObjectPropertyDomain(:iso6391Code :Language)
Declaration(ObjectProperty(:iso6392Code))
AnnotationAssertion(rdfs:label :iso6392Code "ISO 639-2 code"@en)
AnnotationAssertion(rdfs:label :iso6392Code "kod ISO 639-2"@pl)
AnnotationAssertion(rdfs:label :iso6392Code "ISO 639-2 code"@nl)
ObjectPropertyDomain(:iso6392Code :Language)
Declaration(ObjectProperty(:iso6393Code))
AnnotationAssertion(rdfs:label :iso6393Code "ISO 639-3 code"@en)
AnnotationAssertion(rdfs:label :iso6393Code "kod ISO 639-3"@pl)
AnnotationAssertion(rdfs:label :iso6393Code "ISO 639-3 code"@nl)
ObjectPropertyDomain(:iso6393Code :Language)
Declaration(ObjectProperty(:isoCodeRegion))
AnnotationAssertion(rdfs:label :isoCodeRegion "ISO regiocode"@nl)
AnnotationAssertion(rdfs:label :isoCodeRegion "ISO region code"@en)
ObjectPropertyDomain(:isoCodeRegion :Settlement)
Declaration(ObjectProperty(:jockey))
AnnotationAssertion(rdfs:label :jockey "jockey"@en)
ObjectPropertyDomain(:jockey :RaceHorse)
ObjectPropertyRange(:jockey :Jockey)
Declaration(ObjectProperty(:jointCommunity))
AnnotationAssertion(rdfs:label :jointCommunity "joint community"@en)
ObjectPropertyDomain(:jointCommunity :Settlement)
ObjectPropertyRange(:jointCommunity :PopulatedPlace)
Declaration(ObjectProperty(:judge))
AnnotationAssertion(rdfs:label :judge "rechter"@nl)
AnnotationAssertion(rdfs:comment :judge "leading judge"@en)
AnnotationAssertion(rdfs:label :judge "judge"@en)
ObjectPropertyDomain(:judge :LegalCase)
ObjectPropertyRange(:judge :Judge)
Declaration(ObjectProperty(:jureLanguage))
AnnotationAssertion(rdfs:label :jureLanguage "jure language"@en)
EquivalentObjectProperties(:jureLanguage :language)
ObjectPropertyRange(:jureLanguage :Language)
Declaration(ObjectProperty(:jurisdiction))
AnnotationAssertion(rdfs:label :jurisdiction "Zuständigkeit"@de)
AnnotationAssertion(rdfs:comment :jurisdiction "Die Zuständigkeit oder Kompetenz legt im öffentlichen Recht fest, welche Behörde bzw. welches Gericht im Einzelfall rechtlich zu hoheitlichem Handeln ermächtigt und verpflichtet ist."@de)
AnnotationAssertion(rdfs:comment :jurisdiction "Jurisdiction is the practical authority granted to a formally constituted legal body or to a political leader to deal with and make pronouncements on legal matters and, by implication, to administer justice within a defined area of responsibility."@en)
AnnotationAssertion(rdfs:label :jurisdiction "jurisdiction"@en)
Declaration(ObjectProperty(:keyPerson))
AnnotationAssertion(rdfs:label :keyPerson "key person"@en)
ObjectPropertyRange(:keyPerson :Person)
Declaration(ObjectProperty(:kingdom))
AnnotationAssertion(rdfs:label :kingdom "kingdom"@en)
AnnotationAssertion(rdfs:label :kingdom "界_(分類学)"@ja)
AnnotationAssertion(rdfs:label :kingdom "regno"@it)
AnnotationAssertion(rdfs:label :kingdom "reich"@de)
AnnotationAssertion(rdfs:label :kingdom "βασίλειο"@el)
AnnotationAssertion(rdfs:label :kingdom "rijk"@nl)
ObjectPropertyDomain(:kingdom :Species)
Declaration(ObjectProperty(:knownFor))
AnnotationAssertion(rdfs:label :knownFor "known for"@en)
AnnotationAssertion(rdfs:label :knownFor "bekannt für"@de)
AnnotationAssertion(rdfs:label :knownFor "bekend om"@nl)
AnnotationAssertion(rdfs:label :knownFor "γνωστός_για"@el)
AnnotationAssertion(rdfs:label :knownFor "conocido por"@es)
AnnotationAssertion(rdfs:label :knownFor "connu pour"@fr)
ObjectPropertyDomain(:knownFor :Person)
Declaration(ObjectProperty(:lake))
AnnotationAssertion(rdfs:label :lake "vastest lake"@en)
ObjectPropertyDomain(:lake :Place)
ObjectPropertyRange(:lake :BodyOfWater)
Declaration(ObjectProperty(:landeshauptmann))
AnnotationAssertion(rdfs:label :landeshauptmann "landeshauptmann"@en)
ObjectPropertyRange(:landeshauptmann :Person)
Declaration(ObjectProperty(:landingVehicle))
AnnotationAssertion(rdfs:label :landingVehicle "landing vehicle"@en)
ObjectPropertyDomain(:landingVehicle :SpaceMission)
ObjectPropertyRange(:landingVehicle :SpaceMission)
Declaration(ObjectProperty(:language))
AnnotationAssertion(rdfs:label :language "Sprache"@de)
AnnotationAssertion(rdfs:label :language "language"@en)
AnnotationAssertion(rdfs:label :language "língua"@pt)
AnnotationAssertion(rdfs:label :language "langue"@fr)
AnnotationAssertion(rdfs:label :language "γλώσσα"@el)
AnnotationAssertion(rdfs:label :language "taal"@nl)
EquivalentObjectProperties(:language :deFactoLanguage)
EquivalentObjectProperties(:language :jureLanguage)
ObjectPropertyRange(:language :Language)
Declaration(ObjectProperty(:languageCode))
AnnotationAssertion(rdfs:label :languageCode "kod językowy"@pl)
AnnotationAssertion(rdfs:label :languageCode "language code"@en)
ObjectPropertyDomain(:languageCode :Language)
Declaration(ObjectProperty(:languageFamily))
AnnotationAssertion(rdfs:label :languageFamily "family"@en)
AnnotationAssertion(rdfs:label :languageFamily "taalfamilie"@nl)
AnnotationAssertion(rdfs:label :languageFamily "rodzina"@pl)
ObjectPropertyDomain(:languageFamily :Language)
Declaration(ObjectProperty(:languageRegulator))
AnnotationAssertion(rdfs:label :languageRegulator "taal instituut"@nl)
AnnotationAssertion(rdfs:label :languageRegulator "language regulator or academy"@en)
ObjectPropertyRange(:languageRegulator :Language)
Declaration(ObjectProperty(:largestCity))
AnnotationAssertion(rdfs:label :largestCity "largest city"@en)
ObjectPropertyDomain(:largestCity :PopulatedPlace)
ObjectPropertyRange(:largestCity :PopulatedPlace)
Declaration(ObjectProperty(:largestCountry))
AnnotationAssertion(rdfs:label :largestCountry "largest country"@en)
AnnotationAssertion(rdfs:label :largestCountry "maior país"@pt)
ObjectPropertyDomain(:largestCountry :PopulatedPlace)
ObjectPropertyRange(:largestCountry :PopulatedPlace)
Declaration(ObjectProperty(:largestMetro))
AnnotationAssertion(rdfs:label :largestMetro "largest metro"@en)
ObjectPropertyDomain(:largestMetro :Settlement)
ObjectPropertyRange(:largestMetro :PopulatedPlace)
Declaration(ObjectProperty(:largestSettlement))
AnnotationAssertion(rdfs:label :largestSettlement "grootste plaats"@nl)
AnnotationAssertion(rdfs:label :largestSettlement "largest settlement"@en)
ObjectPropertyDomain(:largestSettlement :PopulatedPlace)
ObjectPropertyRange(:largestSettlement :PopulatedPlace)
Declaration(ObjectProperty(:lastAppearance))
AnnotationAssertion(rdfs:label :lastAppearance "last appearance"@en)
ObjectPropertyDomain(:lastAppearance :FictionalCharacter)
Declaration(ObjectProperty(:lastFlight))
AnnotationAssertion(rdfs:label :lastFlight "last flight"@en)
ObjectPropertyDomain(:lastFlight :SpaceShuttle)
ObjectPropertyRange(:lastFlight :SpaceMission)
Declaration(ObjectProperty(:lastLaunchRocket))
AnnotationAssertion(rdfs:label :lastLaunchRocket "last launch rocket"@en)
ObjectPropertyDomain(:lastLaunchRocket :LaunchPad)
ObjectPropertyRange(:lastLaunchRocket :Rocket)
Declaration(ObjectProperty(:lastRace))
AnnotationAssertion(rdfs:label :lastRace "τελευταίος αγώνας"@el)
AnnotationAssertion(rdfs:label :lastRace "last race"@en)
ObjectPropertyDomain(:lastRace :FormulaOneRacer)
ObjectPropertyRange(:lastRace :GrandPrix)
Declaration(ObjectProperty(:lastWin))
AnnotationAssertion(rdfs:label :lastWin "last win"@en)
AnnotationAssertion(rdfs:label :lastWin "τελευταία νίκη"@el)
ObjectPropertyDomain(:lastWin :FormulaOneRacer)
ObjectPropertyRange(:lastWin :GrandPrix)
Declaration(ObjectProperty(:launchPad))
AnnotationAssertion(rdfs:label :launchPad "launch pad"@en)
ObjectPropertyDomain(:launchPad :SpaceMission)
ObjectPropertyRange(:launchPad :LaunchPad)
Declaration(ObjectProperty(:launchSite))
AnnotationAssertion(rdfs:label :launchSite "launch site"@en)
ObjectPropertyDomain(:launchSite :SpaceMission)
ObjectPropertyRange(:launchSite :Building)
Declaration(ObjectProperty(:launchVehicle))
AnnotationAssertion(rdfs:label :launchVehicle "launch vehicle"@en)
ObjectPropertyDomain(:launchVehicle :SpaceMission)
Declaration(ObjectProperty(:laurenceOlivierAward))
AnnotationAssertion(rdfs:label :laurenceOlivierAward "Laurence Olivier Award"@en)
ObjectPropertyDomain(:laurenceOlivierAward :Actor)
ObjectPropertyRange(:laurenceOlivierAward :Award)
Declaration(ObjectProperty(:layout))
AnnotationAssertion(rdfs:label :layout "layout"@en)
ObjectPropertyDomain(:layout :Automobile)
Declaration(ObjectProperty(:leader))
AnnotationAssertion(rdfs:label :leader "lider"@pt)
AnnotationAssertion(rdfs:label :leader "ηγέτης"@el)
AnnotationAssertion(rdfs:label :leader "leader"@en)
AnnotationAssertion(rdfs:label :leader "leider"@nl)
ObjectPropertyRange(:leader :Person)
Declaration(ObjectProperty(:leaderFunction))
AnnotationAssertion(rdfs:label :leaderFunction "leaderFunction"@en)
ObjectPropertyDomain(:leaderFunction :Organisation)
ObjectPropertyRange(:leaderFunction :PersonFunction)
Declaration(ObjectProperty(:leaderName))
AnnotationAssertion(rdfs:label :leaderName "όνομα_αρχηγού"@el)
AnnotationAssertion(rdfs:label :leaderName "président"@fr)
AnnotationAssertion(rdfs:label :leaderName "leader name"@en)
AnnotationAssertion(rdfs:label :leaderName "naam leider"@nl)
ObjectPropertyDomain(:leaderName :PopulatedPlace)
ObjectPropertyRange(:leaderName :Person)
Declaration(ObjectProperty(:leaderParty))
AnnotationAssertion(rdfs:label :leaderParty "Regierungspartei"@de)
AnnotationAssertion(rdfs:label :leaderParty "leader party"@en)
AnnotationAssertion(rdfs:label :leaderParty "regeringspartij"@nl)
AnnotationAssertion(rdfs:label :leaderParty "partido do lider"@pt)
AnnotationAssertion(rdfs:label :leaderParty "κόμμα_αρχηγού"@el)
ObjectPropertyDomain(:leaderParty :PopulatedPlace)
Declaration(ObjectProperty(:league))
AnnotationAssertion(rdfs:label :league "πρωτάθλημα"@el)
AnnotationAssertion(rdfs:label :league "Liga"@de)
AnnotationAssertion(rdfs:label :league "league"@en)
ObjectPropertyRange(:league :SportsLeague)
Declaration(ObjectProperty(:leftChild))
AnnotationAssertion(rdfs:label :leftChild "left child"@en)
ObjectPropertyDomain(:leftChild :Island)
ObjectPropertyRange(:leftChild :Island)
Declaration(ObjectProperty(:leftTributary))
AnnotationAssertion(rdfs:label :leftTributary "left tributary"@en)
AnnotationAssertion(rdfs:label :leftTributary "αριστεροί_παραπόταμοι"@el)
ObjectPropertyDomain(:leftTributary :River)
ObjectPropertyRange(:leftTributary :River)
Declaration(ObjectProperty(:legalForm))
AnnotationAssertion(rdfs:label :legalForm "Rechtsform"@de)
AnnotationAssertion(rdfs:label :legalForm "rechtsvorm"@nl)
AnnotationAssertion(rdfs:label :legalForm "legal form"@en)
AnnotationAssertion(rdfs:comment :legalForm "Die Rechtsform definiert die juristischen Rahmenbedingungen einer Organisation bzw. Unternehmens."@de)
AnnotationAssertion(rdfs:comment :legalForm "There are many types of business entity defined in the legal systems of various countries. These include corporations, cooperatives, partnerships, sole traders, limited liability company and other specialized types of organization."@en)
ObjectPropertyDomain(:legalForm :Organisation)
Declaration(ObjectProperty(:lessPopulatedCountry))
AnnotationAssertion(rdfs:label :lessPopulatedCountry "less populated country"@en)
AnnotationAssertion(rdfs:label :lessPopulatedCountry "país menos povoado"@pt)
ObjectPropertyDomain(:lessPopulatedCountry :Country)
ObjectPropertyRange(:lessPopulatedCountry :Country)
Declaration(ObjectProperty(:lessPopulousCountry))
AnnotationAssertion(rdfs:label :lessPopulousCountry "país menos populoso"@pt)
AnnotationAssertion(rdfs:label :lessPopulousCountry "less populous country"@en)
ObjectPropertyDomain(:lessPopulousCountry :Country)
ObjectPropertyRange(:lessPopulousCountry :Country)
Declaration(ObjectProperty(:license))
AnnotationAssertion(rdfs:label :license "license"@en)
AnnotationAssertion(rdfs:label :license "άδεια"@el)
AnnotationAssertion(rdfs:label :license "licence"@fr)
AnnotationAssertion(rdfs:label :license "licentie"@nl)
ObjectPropertyDomain(:license :Work)
Declaration(ObjectProperty(:lieutenancyArea))
AnnotationAssertion(rdfs:label :lieutenancyArea "Lieutenancy area"@en)
ObjectPropertyDomain(:lieutenancyArea :PopulatedPlace)
ObjectPropertyRange(:lieutenancyArea :PopulatedPlace)
Declaration(ObjectProperty(:lieutenant))
AnnotationAssertion(rdfs:label :lieutenant "lieutenant"@en)
AnnotationAssertion(rdfs:label :lieutenant "lieutenant"@fr)
ObjectPropertyRange(:lieutenant :Person)
Declaration(ObjectProperty(:linkedTo))
AnnotationAssertion(rdfs:label :linkedTo "linked to"@en)
ObjectPropertyDomain(:linkedTo :SkiResort)
ObjectPropertyRange(:linkedTo :Place)
Declaration(ObjectProperty(:listItemOf))
AnnotationAssertion(rdfs:label :listItemOf "list item"@en)
AnnotationAssertion(rdfs:label :listItemOf "lijst items"@nl)
AnnotationAssertion(rdfs:label :listItemOf "αντικείμενο λίστας"@el)
Declaration(ObjectProperty(:literaryGenre))
AnnotationAssertion(rdfs:label :literaryGenre "literary genre"@en)
AnnotationAssertion(rdfs:label :literaryGenre "literair genre"@nl)
AnnotationAssertion(rdfs:comment :literaryGenre "A literary genre is a category of literary composition. Genres may be determined by literary technique, tone, content, or even (as in the case of fiction) length."@en)
AnnotationAssertion(rdfs:label :literaryGenre "literarische Gattung"@de)
ObjectPropertyDomain(:literaryGenre :WrittenWork)
Declaration(ObjectProperty(:localAuthority))
AnnotationAssertion(rdfs:label :localAuthority "local authority"@en)
Declaration(ObjectProperty(:localizationThumbnail))
AnnotationAssertion(rdfs:label :localizationThumbnail "thumbnail localization"@en)
ObjectPropertyDomain(:localizationThumbnail :PopulatedPlace)
Declaration(ObjectProperty(:locatedInArea))
AnnotationAssertion(rdfs:label :locatedInArea "located in area"@en)
AnnotationAssertion(rdfs:label :locatedInArea "landstreek"@nl)
ObjectPropertyDomain(:locatedInArea :Place)
ObjectPropertyRange(:locatedInArea :Place)
Declaration(ObjectProperty(:location))
AnnotationAssertion(rdfs:label :location "emplacement"@fr)
AnnotationAssertion(rdfs:label :location "τοποθεσία"@el)
AnnotationAssertion(rdfs:label :location "location"@en)
AnnotationAssertion(rdfs:label :location "Standort"@de)
AnnotationAssertion(rdfs:label :location "localização"@pt)
AnnotationAssertion(rdfs:label :location "locatie"@nl)
ObjectPropertyRange(:location :Place)
Declaration(ObjectProperty(:locationCity))
AnnotationAssertion(rdfs:comment :locationCity "City the thing is located."@en)
AnnotationAssertion(rdfs:label :locationCity "location city"@en)
AnnotationAssertion(rdfs:label :locationCity "ville"@fr)
AnnotationAssertion(rdfs:label :locationCity "locatie stad"@nl)
ObjectPropertyDomain(:locationCity :Organisation)
ObjectPropertyRange(:locationCity :City)
Declaration(ObjectProperty(:locationCountry))
AnnotationAssertion(rdfs:label :locationCountry "location country"@en)
AnnotationAssertion(rdfs:comment :locationCountry "Country the thing is located."@en)
AnnotationAssertion(rdfs:label :locationCountry "Χώρα"@el)
AnnotationAssertion(rdfs:label :locationCountry "país de localização"@pt)
ObjectPropertyRange(:locationCountry :Country)
Declaration(ObjectProperty(:lounge))
AnnotationAssertion(rdfs:label :lounge "lounge"@en)
ObjectPropertyDomain(:lounge :Airline)
Declaration(ObjectProperty(:lowestMountain))
AnnotationAssertion(rdfs:label :lowestMountain "χαμηλώτερο βουνό"@el)
AnnotationAssertion(rdfs:label :lowestMountain "lowest mountain"@en)
ObjectPropertyRange(:lowestMountain :Mountain)
Declaration(ObjectProperty(:lowestPlace))
AnnotationAssertion(rdfs:label :lowestPlace "lowest place"@en)
ObjectPropertyRange(:lowestPlace :PopulatedPlace)
Declaration(ObjectProperty(:lowestPosition))
AnnotationAssertion(rdfs:label :lowestPosition "lowest position"@en)
ObjectPropertyRange(:lowestPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:lowestRegion))
AnnotationAssertion(rdfs:label :lowestRegion "lowest region"@en)
ObjectPropertyDomain(:lowestRegion :Island)
ObjectPropertyRange(:lowestRegion :PopulatedPlace)
Declaration(ObjectProperty(:lowestState))
AnnotationAssertion(rdfs:label :lowestState "lowest state"@en)
ObjectPropertyDomain(:lowestState :Island)
ObjectPropertyRange(:lowestState :PopulatedPlace)
Declaration(ObjectProperty(:lunarRover))
AnnotationAssertion(rdfs:label :lunarRover "lunar rover"@en)
ObjectPropertyDomain(:lunarRover :SpaceMission)
ObjectPropertyRange(:lunarRover :MeanOfTransportation)
Declaration(ObjectProperty(:lymph))
AnnotationAssertion(rdfs:label :lymph "lymph"@en)
ObjectPropertyDomain(:lymph :AnatomicalStructure)
ObjectPropertyRange(:lymph :Lymph)
Declaration(ObjectProperty(:lyrics))
AnnotationAssertion(rdfs:label :lyrics "lyrics"@en)
AnnotationAssertion(rdfs:label :lyrics "parolier"@fr)
AnnotationAssertion(rdfs:label :lyrics "歌詞"@ja)
AnnotationAssertion(rdfs:label :lyrics "στίχοι"@el)
ObjectPropertyDomain(:lyrics :Musical)
ObjectPropertyRange(:lyrics :Person)
Declaration(ObjectProperty(:magazine))
AnnotationAssertion(rdfs:label :magazine "magazine"@en)
AnnotationAssertion(rdfs:label :magazine "περιοδικό"@el)
ObjectPropertyDomain(:magazine :WrittenWork)
ObjectPropertyRange(:magazine :Magazine)
Declaration(ObjectProperty(:maidenFlightRocket))
AnnotationAssertion(rdfs:label :maidenFlightRocket "maiden flight rocket"@en)
ObjectPropertyDomain(:maidenFlightRocket :YearInSpaceflight)
ObjectPropertyRange(:maidenFlightRocket :Rocket)
Declaration(ObjectProperty(:mainInterest))
AnnotationAssertion(rdfs:label :mainInterest "main interest"@en)
Declaration(ObjectProperty(:mainOrgan))
AnnotationAssertion(rdfs:label :mainOrgan "main organ"@en)
ObjectPropertyDomain(:mainOrgan :Organisation)
Declaration(ObjectProperty(:maintainedBy))
AnnotationAssertion(rdfs:label :maintainedBy "maintained by"@en)
AnnotationAssertion(rdfs:label :maintainedBy "gewartet von"@de)
ObjectPropertyDomain(:maintainedBy :ArchitecturalStructure)
Declaration(ObjectProperty(:majorIsland))
AnnotationAssertion(rdfs:label :majorIsland "maior ilha"@pt)
AnnotationAssertion(rdfs:label :majorIsland "major island"@en)
ObjectPropertyDomain(:majorIsland :Island)
ObjectPropertyRange(:majorIsland :Island)
Declaration(ObjectProperty(:majorLake))
AnnotationAssertion(rdfs:label :majorLake "major lake"@en)
AnnotationAssertion(rdfs:label :majorLake "maior lago"@pt)
ObjectPropertyDomain(:majorLake :NaturalPlace)
Declaration(ObjectProperty(:majorShrine))
AnnotationAssertion(rdfs:label :majorShrine "schrijn"@nl)
AnnotationAssertion(rdfs:label :majorShrine "major shrine"@en)
ObjectPropertyDomain(:majorShrine :Saint)
Declaration(ObjectProperty(:majorVolcano))
AnnotationAssertion(rdfs:label :majorVolcano "major volcano"@en)
AnnotationAssertion(rdfs:label :majorVolcano "maior vulcão"@pt)
ObjectPropertyDomain(:majorVolcano :NaturalPlace)
Declaration(ObjectProperty(:makeupArtist))
AnnotationAssertion(rdfs:label :makeupArtist "makeup artist"@en)
AnnotationAssertion(rdfs:comment :makeupArtist "the person who is responsible for the actors makeup"@en)
AnnotationAssertion(rdfs:label :makeupArtist "truccatore"@it)
ObjectPropertyDomain(:makeupArtist :Film)
ObjectPropertyRange(:makeupArtist :Person)
Declaration(ObjectProperty(:management))
AnnotationAssertion(rdfs:label :management "management"@fr)
AnnotationAssertion(rdfs:label :management "management"@en)
Declaration(ObjectProperty(:managementCountry))
AnnotationAssertion(rdfs:label :managementCountry "management country"@en)
ObjectPropertyDomain(:managementCountry :Island)
ObjectPropertyRange(:managementCountry :Country)
Declaration(ObjectProperty(:managementMountain))
AnnotationAssertion(rdfs:label :managementMountain "management mountain"@en)
ObjectPropertyRange(:managementMountain :Mountain)
Declaration(ObjectProperty(:managementPlace))
AnnotationAssertion(rdfs:label :managementPlace "management place"@en)
ObjectPropertyRange(:managementPlace :PopulatedPlace)
Declaration(ObjectProperty(:managementPosition))
AnnotationAssertion(rdfs:label :managementPosition "management position"@en)
ObjectPropertyRange(:managementPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:managementRegion))
AnnotationAssertion(rdfs:label :managementRegion "management region"@en)
ObjectPropertyDomain(:managementRegion :Island)
ObjectPropertyRange(:managementRegion :PopulatedPlace)
Declaration(ObjectProperty(:manager))
AnnotationAssertion(rdfs:label :manager "προπονητής"@el)
AnnotationAssertion(rdfs:label :manager "manager"@en)
ObjectPropertyDomain(:manager :SoccerClub)
ObjectPropertyRange(:manager :Person)
Declaration(ObjectProperty(:managerClub))
AnnotationAssertion(rdfs:label :managerClub "manager club"@en)
ObjectPropertyDomain(:managerClub :SoccerPlayer)
ObjectPropertyRange(:managerClub :SportsTeam)
Declaration(ObjectProperty(:managingEditor))
AnnotationAssertion(rdfs:label :managingEditor "managing editor"@en)
ObjectPropertyDomain(:managingEditor :Newspaper)
ObjectPropertyRange(:managingEditor :Person)
Declaration(ObjectProperty(:manufacturer))
AnnotationAssertion(rdfs:label :manufacturer "κατασκευαστής"@el)
AnnotationAssertion(rdfs:label :manufacturer "manufacturer"@en)
ObjectPropertyRange(:manufacturer :Organisation)
Declaration(ObjectProperty(:map))
AnnotationAssertion(rdfs:comment :map "A map of the place."@en)
AnnotationAssertion(rdfs:label :map "mapa"@pt)
AnnotationAssertion(rdfs:label :map "map"@en)
AnnotationAssertion(rdfs:label :map "carte"@fr)
AnnotationAssertion(rdfs:comment :map "Χάρτης μιας περιοχής."@el)
AnnotationAssertion(rdfs:label :map "Landkarte"@de)
AnnotationAssertion(rdfs:comment :map "Eine Landkarte des Ortes."@de)
AnnotationAssertion(rdfs:label :map "χάρτης"@el)
AnnotationAssertion(rdfs:label :map "kaart"@nl)
ObjectPropertyDomain(:map :Place)
Declaration(ObjectProperty(:march))
AnnotationAssertion(rdfs:label :march "marcha"@pt)
AnnotationAssertion(rdfs:label :march "march"@en)
ObjectPropertyDomain(:march :MilitaryUnit)
ObjectPropertyRange(:march :MusicalWork)
Declaration(ObjectProperty(:massif))
AnnotationAssertion(rdfs:label :massif "massif"@en)
ObjectPropertyDomain(:massif :SkiResort)
ObjectPropertyRange(:massif :Place)
Declaration(ObjectProperty(:mayor))
AnnotationAssertion(rdfs:label :mayor "burgemeester"@nl)
AnnotationAssertion(rdfs:label :mayor "maire"@fr)
AnnotationAssertion(rdfs:label :mayor "mayor"@en)
AnnotationAssertion(rdfs:label :mayor "δήμαρχος"@el)
ObjectPropertyDomain(:mayor :PopulatedPlace)
ObjectPropertyRange(:mayor :Mayor)
Declaration(ObjectProperty(:medalist))
AnnotationAssertion(rdfs:label :medalist "medalist"@en)
AnnotationAssertion(rdfs:label :medalist "medalhista"@pt)
ObjectPropertyDomain(:medalist :SportsEvent)
ObjectPropertyRange(:medalist :Person)
Declaration(ObjectProperty(:mediaType))
AnnotationAssertion(rdfs:comment :mediaType "Print / On-line (then binding types etc. if relevant)"@en)
AnnotationAssertion(rdfs:label :mediaType "mediatype"@nl)
AnnotationAssertion(rdfs:label :mediaType "media type"@en)
ObjectPropertyDomain(:mediaType :Book)
Declaration(ObjectProperty(:meetingBuilding))
AnnotationAssertion(rdfs:label :meetingBuilding "meeting building"@en)
ObjectPropertyDomain(:meetingBuilding :Legislature)
ObjectPropertyRange(:meetingBuilding :Building)
Declaration(ObjectProperty(:meetingCity))
AnnotationAssertion(rdfs:label :meetingCity "meeting city"@en)
ObjectPropertyDomain(:meetingCity :Legislature)
ObjectPropertyRange(:meetingCity :Settlement)
Declaration(ObjectProperty(:meetingRoad))
AnnotationAssertion(rdfs:label :meetingRoad "zusammentreffende Straße"@de)
AnnotationAssertion(rdfs:comment :meetingRoad "A road that crosses another road at the junction."@en)
AnnotationAssertion(rdfs:label :meetingRoad "meeting road"@en)
AnnotationAssertion(rdfs:comment :meetingRoad "Eine Straße die an der Kreuzung eine andere Straße kreuzt."@de)
ObjectPropertyDomain(:meetingRoad :RoadJunction)
ObjectPropertyRange(:meetingRoad :Road)
Declaration(ObjectProperty(:memberOfParliament))
AnnotationAssertion(rdfs:label :memberOfParliament "Member of Parliament"@en)
ObjectPropertyRange(:memberOfParliament :Person)
Declaration(ObjectProperty(:mentor))
AnnotationAssertion(rdfs:label :mentor "mentor"@en)
AnnotationAssertion(rdfs:comment :mentor "Celui qui sert de guide, de conseiller à quelqu’un."@fr)
AnnotationAssertion(rdfs:label :mentor "mentor"@fr)
AnnotationAssertion(rdfs:comment :mentor "A wise and trusted counselor or teacher"@en)
ObjectPropertyDomain(:mentor :Artist)
ObjectPropertyRange(:mentor :Artist)
Declaration(ObjectProperty(:mergedIntoParty))
AnnotationAssertion(rdfs:label :mergedIntoParty "Aufgegangen in Partei"@de)
AnnotationAssertion(rdfs:label :mergedIntoParty "merged into party"@en)
ObjectPropertyDomain(:mergedIntoParty :PoliticalParty)
ObjectPropertyRange(:mergedIntoParty :PoliticalParty)
Declaration(ObjectProperty(:metropolitanBorough))
AnnotationAssertion(rdfs:label :metropolitanBorough "stadswijk"@nl)
AnnotationAssertion(rdfs:label :metropolitanBorough "metropolitan borough"@en)
ObjectPropertyDomain(:metropolitanBorough :PopulatedPlace)
ObjectPropertyRange(:metropolitanBorough :PopulatedPlace)
Declaration(ObjectProperty(:militaryBranch))
AnnotationAssertion(rdfs:label :militaryBranch "military branch"@en)
AnnotationAssertion(rdfs:comment :militaryBranch "The service branch (Army, Navy, etc.) a person is part of."@en)
ObjectPropertyDomain(:militaryBranch :Person)
ObjectPropertyRange(:militaryBranch :MilitaryUnit)
Declaration(ObjectProperty(:militaryRank))
AnnotationAssertion(rdfs:comment :militaryRank "The highest rank achieved by a person."@en)
AnnotationAssertion(rdfs:label :militaryRank "military rank"@en)
ObjectPropertyDomain(:militaryRank :MilitaryPerson)
Declaration(ObjectProperty(:militaryUnit))
AnnotationAssertion(rdfs:label :militaryUnit "military unit"@en)
AnnotationAssertion(rdfs:comment :militaryUnit "For persons who are not notable as commanding officers, the unit (company, battalion, regiment, etc.) in which they served."@en)
ObjectPropertyDomain(:militaryUnit :MilitaryPerson)
ObjectPropertyRange(:militaryUnit :MilitaryUnit)
Declaration(ObjectProperty(:millType))
AnnotationAssertion(rdfs:label :millType "τύπος μύλου"@el)
AnnotationAssertion(rdfs:label :millType "mill type"@en)
AnnotationAssertion(rdfs:label :millType "molen-type"@nl)
ObjectPropertyDomain(:millType :Mill)
Declaration(ObjectProperty(:mission))
AnnotationAssertion(rdfs:label :mission "αποστολή"@el)
AnnotationAssertion(rdfs:label :mission "mission"@en)
ObjectPropertyDomain(:mission :Aircraft)
ObjectPropertyRange(:mission :SpaceMission)
Declaration(ObjectProperty(:monarch))
AnnotationAssertion(rdfs:label :monarch "monarch"@en)
AnnotationAssertion(rdfs:label :monarch "monarch"@nl)
ObjectPropertyRange(:monarch :Person)
Declaration(ObjectProperty(:mostDownPoint))
AnnotationAssertion(rdfs:label :mostDownPoint "most down point of a norwegian settlement"@en)
ObjectPropertyRange(:mostDownPoint :Place)
Declaration(ObjectProperty(:mostPopulatedCountry))
AnnotationAssertion(rdfs:label :mostPopulatedCountry "most populated country"@en)
AnnotationAssertion(rdfs:label :mostPopulatedCountry "país mais povoado"@pt)
ObjectPropertyDomain(:mostPopulatedCountry :Country)
ObjectPropertyRange(:mostPopulatedCountry :Country)
Declaration(ObjectProperty(:mostPopulousCountry))
AnnotationAssertion(rdfs:label :mostPopulousCountry "most populous country"@en)
AnnotationAssertion(rdfs:label :mostPopulousCountry "país mais populoso"@pt)
ObjectPropertyDomain(:mostPopulousCountry :Country)
ObjectPropertyRange(:mostPopulousCountry :Country)
Declaration(ObjectProperty(:mostWins))
AnnotationAssertion(rdfs:label :mostWins "most wins"@en)
ObjectPropertyDomain(:mostWins :Race)
Declaration(ObjectProperty(:mother))
AnnotationAssertion(rdfs:label :mother "mother"@en)
ObjectPropertyDomain(:mother :Person)
ObjectPropertyRange(:mother :Person)
Declaration(ObjectProperty(:mountainRange))
AnnotationAssertion(rdfs:label :mountainRange "bergketen"@nl)
AnnotationAssertion(rdfs:label :mountainRange "mountain range"@en)
ObjectPropertyDomain(:mountainRange :Mountain)
ObjectPropertyRange(:mountainRange :MountainRange)
Declaration(ObjectProperty(:mouthCountry))
AnnotationAssertion(rdfs:label :mouthCountry "χώρες_λεκάνης"@el)
AnnotationAssertion(rdfs:label :mouthCountry "mouth country"@en)
ObjectPropertyDomain(:mouthCountry :River)
ObjectPropertyRange(:mouthCountry :Country)
Declaration(ObjectProperty(:mouthDistrict))
AnnotationAssertion(rdfs:label :mouthDistrict "mouth district"@en)
ObjectPropertyDomain(:mouthDistrict :River)
ObjectPropertyRange(:mouthDistrict :PopulatedPlace)
Declaration(ObjectProperty(:mouthMountain))
AnnotationAssertion(rdfs:label :mouthMountain "mouth mountain"@en)
ObjectPropertyDomain(:mouthMountain :River)
ObjectPropertyRange(:mouthMountain :Mountain)
Declaration(ObjectProperty(:mouthPlace))
AnnotationAssertion(rdfs:label :mouthPlace "mouth place"@en)
ObjectPropertyDomain(:mouthPlace :River)
ObjectPropertyRange(:mouthPlace :PopulatedPlace)
Declaration(ObjectProperty(:mouthPosition))
AnnotationAssertion(rdfs:label :mouthPosition "lugar de desembocadura"@es)
AnnotationAssertion(rdfs:label :mouthPosition "mouth position"@en)
ObjectPropertyDomain(:mouthPosition :River)
ObjectPropertyRange(:mouthPosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:mouthRegion))
AnnotationAssertion(rdfs:label :mouthRegion "mouth region"@en)
ObjectPropertyDomain(:mouthRegion :River)
ObjectPropertyRange(:mouthRegion :PopulatedPlace)
Declaration(ObjectProperty(:mouthState))
AnnotationAssertion(rdfs:label :mouthState "mouth state"@en)
ObjectPropertyDomain(:mouthState :River)
ObjectPropertyRange(:mouthState :PopulatedPlace)
Declaration(ObjectProperty(:movement))
AnnotationAssertion(rdfs:label :movement "mouvement artistique"@fr)
AnnotationAssertion(rdfs:label :movement "movement"@en)
AnnotationAssertion(rdfs:label :movement "beweging"@nl)
AnnotationAssertion(rdfs:comment :movement "artistic movement or school with which artist is associated"@en)
ObjectPropertyDomain(:movement :Artist)
Declaration(ObjectProperty(:movie))
AnnotationAssertion(rdfs:label :movie "movie"@en)
ObjectPropertyDomain(:movie :FictionalCharacter)
ObjectPropertyRange(:movie :Film)
Declaration(ObjectProperty(:municipality))
AnnotationAssertion(rdfs:label :municipality "plaats"@nl)
AnnotationAssertion(rdfs:label :municipality "municipalité"@fr)
AnnotationAssertion(rdfs:label :municipality "municipality"@en)
ObjectPropertyRange(:municipality :PopulatedPlace)
Declaration(ObjectProperty(:museum))
AnnotationAssertion(rdfs:label :museum "museum"@de)
AnnotationAssertion(rdfs:label :museum "μουσείο"@el)
AnnotationAssertion(rdfs:label :museum "museum"@en)
AnnotationAssertion(rdfs:label :museum "博物館"@ja)
ObjectPropertyDomain(:museum :Artwork)
ObjectPropertyRange(:museum :Museum)
Declaration(ObjectProperty(:museumType))
AnnotationAssertion(rdfs:label :museumType "museumType"@en)
AnnotationAssertion(rdfs:comment :museumType "This property has been added  because 'buildingType' is much more about the place, whereas 'museumType' is about the way the place is being (or:was) used"@en)
AnnotationAssertion(rdfs:label :museumType "soort museum"@nl)
AnnotationAssertion(rdfs:comment :museumType "Nieuw type is nodig omdat Museum eigenlijk geen subklasse van Building is, maar meer te maken heeft met de functie van het gebouw. 'Museumtype' is dan ook meer thema- en collectiegerelateerd"@nl)
ObjectPropertyDomain(:museumType :Museum)
Declaration(ObjectProperty(:musicBy))
AnnotationAssertion(rdfs:label :musicBy "music by"@en)
ObjectPropertyDomain(:musicBy :Musical)
ObjectPropertyRange(:musicBy :Person)
Declaration(ObjectProperty(:musicComposer))
AnnotationAssertion(rdfs:label :musicComposer "music composer"@en)
AnnotationAssertion(rdfs:label :musicComposer "μουσική"@el)
AnnotationAssertion(rdfs:label :musicComposer "komponist"@de)
AnnotationAssertion(rdfs:label :musicComposer "componist"@nl)
ObjectPropertyDomain(:musicComposer :Work)
ObjectPropertyRange(:musicComposer :MusicalArtist)
Declaration(ObjectProperty(:musicFusionGenre))
AnnotationAssertion(rdfs:label :musicFusionGenre "music fusion genre"@en)
ObjectPropertyDomain(:musicFusionGenre :MusicGenre)
ObjectPropertyRange(:musicFusionGenre :MusicGenre)
Declaration(ObjectProperty(:musicSubgenre))
AnnotationAssertion(rdfs:label :musicSubgenre "music subgenre"@en)
ObjectPropertyDomain(:musicSubgenre :MusicGenre)
ObjectPropertyRange(:musicSubgenre :MusicGenre)
Declaration(ObjectProperty(:musicType))
AnnotationAssertion(rdfs:comment :musicType "Type is te algemeen. We moeten soorten muziek van soorten gebouwen kunnen onderscheiden"@nl)
AnnotationAssertion(rdfs:label :musicType "soort muziekwerk"@nl)
AnnotationAssertion(rdfs:label :musicType "musicType"@en)
AnnotationAssertion(rdfs:comment :musicType "Type is too general. We should be able to distinguish types of music from types of architecture"@en)
ObjectPropertyDomain(:musicType :MusicalWork)
Declaration(ObjectProperty(:musicalArtist))
AnnotationAssertion(rdfs:label :musicalArtist "musical artist"@en)
ObjectPropertyDomain(:musicalArtist :Single)
ObjectPropertyRange(:musicalArtist :MusicalArtist)
Declaration(ObjectProperty(:musicalBand))
AnnotationAssertion(rdfs:label :musicalBand "musical band"@en)
ObjectPropertyDomain(:musicalBand :Single)
ObjectPropertyRange(:musicalBand :Band)
Declaration(ObjectProperty(:musicians))
AnnotationAssertion(rdfs:label :musicians "musicians"@en)
AnnotationAssertion(rdfs:label :musicians "μουσικοί"@el)
ObjectPropertyDomain(:musicians :Instrument)
ObjectPropertyRange(:musicians :MusicalArtist)
Declaration(ObjectProperty(:naacpImageAward))
AnnotationAssertion(rdfs:label :naacpImageAward "NAACP Image Award"@en)
ObjectPropertyDomain(:naacpImageAward :Actor)
ObjectPropertyRange(:naacpImageAward :Award)
Declaration(ObjectProperty(:namedAfter))
AnnotationAssertion(rdfs:label :namedAfter "named after"@en)
ObjectPropertyDomain(:namedAfter :SpaceShuttle)
Declaration(ObjectProperty(:narrator))
AnnotationAssertion(rdfs:label :narrator "narrator"@en)
ObjectPropertyDomain(:narrator :Film)
ObjectPropertyRange(:narrator :Person)
Declaration(ObjectProperty(:nationalAffiliation))
AnnotationAssertion(rdfs:label :nationalAffiliation "national affiliation"@en)
AnnotationAssertion(rdfs:label :nationalAffiliation "afiliacao nacional"@pt)
ObjectPropertyDomain(:nationalAffiliation :PoliticalParty)
Declaration(ObjectProperty(:nationalFilmAward))
AnnotationAssertion(rdfs:label :nationalFilmAward "National Film Award"@en)
ObjectPropertyDomain(:nationalFilmAward :Actor)
ObjectPropertyRange(:nationalFilmAward :Award)
Declaration(ObjectProperty(:nationalOlympicCommittee))
AnnotationAssertion(rdfs:label :nationalOlympicCommittee "National Olympic Committee"@en)
ObjectPropertyDomain(:nationalOlympicCommittee :OlympicResult)
Declaration(ObjectProperty(:nationalTeam))
AnnotationAssertion(rdfs:label :nationalTeam "national team"@en)
AnnotationAssertion(rdfs:label :nationalTeam "nationaal team"@nl)
ObjectPropertyDomain(:nationalTeam :Athlete)
ObjectPropertyRange(:nationalTeam :SportsTeam)
Declaration(ObjectProperty(:nationality))
AnnotationAssertion(rdfs:label :nationality "nationality"@en)
AnnotationAssertion(rdfs:label :nationality "国籍"@ja)
AnnotationAssertion(rdfs:label :nationality "Nationalität"@de)
AnnotationAssertion(rdfs:label :nationality "nacionalidade"@pt)
AnnotationAssertion(rdfs:label :nationality "nationaliteit"@nl)
AnnotationAssertion(rdfs:label :nationality "nationalité"@fr)
AnnotationAssertion(rdfs:label :nationality "εθνικότητα"@el)
ObjectPropertyDomain(:nationality :Person)
ObjectPropertyRange(:nationality :Country)
Declaration(ObjectProperty(:nearestCity))
AnnotationAssertion(rdfs:label :nearestCity "nearest city"@en)
AnnotationAssertion(rdfs:label :nearestCity "πόλη"@el)
AnnotationAssertion(rdfs:label :nearestCity "dichtstbijzijnde stad"@nl)
ObjectPropertyDomain(:nearestCity :Place)
ObjectPropertyRange(:nearestCity :PopulatedPlace)
Declaration(ObjectProperty(:neighboringMunicipality))
AnnotationAssertion(rdfs:label :neighboringMunicipality "neighboring municipality"@en)
AnnotationAssertion(rdfs:label :neighboringMunicipality "municipío adjacente"@pt)
AnnotationAssertion(rdfs:label :neighboringMunicipality "aangrenzende gemeente"@nl)
ObjectPropertyDomain(:neighboringMunicipality :PopulatedPlace)
ObjectPropertyRange(:neighboringMunicipality :PopulatedPlace)
Declaration(ObjectProperty(:nerve))
AnnotationAssertion(rdfs:label :nerve "nerve"@en)
ObjectPropertyDomain(:nerve :AnatomicalStructure)
ObjectPropertyRange(:nerve :Nerve)
Declaration(ObjectProperty(:network))
AnnotationAssertion(rdfs:label :network "δίκτυο"@el)
AnnotationAssertion(rdfs:label :network "network"@en)
ObjectPropertyDomain(:network :Broadcaster)
ObjectPropertyRange(:network :Broadcaster)
Declaration(ObjectProperty(:nextEntity))
AnnotationAssertion(rdfs:label :nextEntity "next entity"@en)
ObjectPropertyDomain(:nextEntity :Place)
ObjectPropertyRange(:nextEntity :Place)
Declaration(ObjectProperty(:nextEvent))
AnnotationAssertion(rdfs:label :nextEvent "next event"@en)
AnnotationAssertion(rdfs:label :nextEvent "επόμενο γεγονός"@el)
AnnotationAssertion(rdfs:label :nextEvent "volgende evenement"@nl)
ObjectPropertyDomain(:nextEvent :Event)
ObjectPropertyRange(:nextEvent :Event)
Declaration(ObjectProperty(:nextMission))
AnnotationAssertion(rdfs:label :nextMission "next mission"@en)
ObjectPropertyDomain(:nextMission :SpaceMission)
ObjectPropertyRange(:nextMission :SpaceMission)
Declaration(ObjectProperty(:nisCode))
AnnotationAssertion(rdfs:label :nisCode "NIS code"@en)
AnnotationAssertion(rdfs:comment :nisCode "Indexing code used by the Belgium National Statistical Institute to identify populated places."@en)
ObjectPropertyDomain(:nisCode :PopulatedPlace)
ObjectPropertyRange(:nisCode :PopulatedPlace)
Declaration(ObjectProperty(:nobelLaureates))
AnnotationAssertion(rdfs:label :nobelLaureates "nobel laureates"@en)
ObjectPropertyDomain(:nobelLaureates :School)
ObjectPropertyRange(:nobelLaureates :Person)
Declaration(ObjectProperty(:nominee))
AnnotationAssertion(rdfs:label :nominee "nominee"@en)
ObjectPropertyRange(:nominee :Person)
Declaration(ObjectProperty(:nonFictionSubject))
AnnotationAssertion(rdfs:comment :nonFictionSubject "The subject of a non-fiction book (e.g.: History, Biography, Cookbook, Climate change, ...)."@en)
AnnotationAssertion(rdfs:label :nonFictionSubject "non-fictie onderwerp"@nl)
AnnotationAssertion(rdfs:label :nonFictionSubject "non-fiction subject"@en)
ObjectPropertyDomain(:nonFictionSubject :Book)
Declaration(ObjectProperty(:notableCommander))
AnnotationAssertion(rdfs:label :notableCommander "notable commander"@en)
ObjectPropertyDomain(:notableCommander :MilitaryUnit)
ObjectPropertyRange(:notableCommander :Person)
Declaration(ObjectProperty(:notableIdea))
AnnotationAssertion(rdfs:label :notableIdea "notableIdea"@en)
ObjectPropertyDomain(:notableIdea :Person)
Declaration(ObjectProperty(:notableStudent))
AnnotationAssertion(rdfs:label :notableStudent "σημαντικοί_φοιτητές"@el)
AnnotationAssertion(rdfs:label :notableStudent "notable student"@en)
ObjectPropertyDomain(:notableStudent :Scientist)
ObjectPropertyRange(:notableStudent :Person)
Declaration(ObjectProperty(:notableWine))
AnnotationAssertion(rdfs:label :notableWine "notable wine"@en)
ObjectPropertyDomain(:notableWine :Grape)
Declaration(ObjectProperty(:notableWork))
AnnotationAssertion(rdfs:label :notableWork "oeuvre majeure"@fr)
AnnotationAssertion(rdfs:label :notableWork "notable work"@en)
AnnotationAssertion(rdfs:label :notableWork "bekende werken"@nl)
AnnotationAssertion(rdfs:label :notableWork "代表作"@ja)
ObjectPropertyDomain(:notableWork :Writer)
ObjectPropertyRange(:notableWork :Book)
Declaration(ObjectProperty(:novel))
AnnotationAssertion(rdfs:label :novel "novel"@en)
ObjectPropertyDomain(:novel :FictionalCharacter)
ObjectPropertyRange(:novel :Novel)
Declaration(ObjectProperty(:nrhpType))
AnnotationAssertion(rdfs:label :nrhpType "NRHP type"@en)
AnnotationAssertion(rdfs:comment :nrhpType "Type of historic place as defined by the US National Park Service. For instance National Historic Landmark, National Monument or National Battlefield."@en)
ObjectPropertyDomain(:nrhpType :HistoricPlace)
Declaration(ObjectProperty(:numberOfClassrooms))
AnnotationAssertion(rdfs:label :numberOfClassrooms "number of classrooms"@en)
AnnotationAssertion(rdfs:label :numberOfClassrooms "αριθμός αιθουσών"@el)
ObjectPropertyDomain(:numberOfClassrooms :School)
Declaration(ObjectProperty(:occupation))
AnnotationAssertion(rdfs:label :occupation "occupation"@en)
AnnotationAssertion(rdfs:label :occupation "beroep"@nl)
AnnotationAssertion(rdfs:label :occupation "Beschäftigung"@de)
AnnotationAssertion(rdfs:label :occupation "職業"@ja)
AnnotationAssertion(rdfs:label :occupation "activité"@fr)
ObjectPropertyDomain(:occupation :Person)
ObjectPropertyRange(:occupation :PersonFunction)
Declaration(ObjectProperty(:officerInCharge))
AnnotationAssertion(rdfs:label :officerInCharge "officer in charge"@en)
ObjectPropertyDomain(:officerInCharge :University)
ObjectPropertyRange(:officerInCharge :Person)
Declaration(ObjectProperty(:officialLanguage))
AnnotationAssertion(rdfs:label :officialLanguage "official language"@en)
ObjectPropertyDomain(:officialLanguage :PopulatedPlace)
ObjectPropertyRange(:officialLanguage :Language)
Declaration(ObjectProperty(:officialOpenedBy))
AnnotationAssertion(rdfs:label :officialOpenedBy "official opened by"@en)
ObjectPropertyDomain(:officialOpenedBy :Olympics)
ObjectPropertyRange(:officialOpenedBy :Person)
Declaration(ObjectProperty(:oilSystem))
AnnotationAssertion(rdfs:label :oilSystem "oil system"@en)
ObjectPropertyDomain(:oilSystem :AutomobileEngine)
Declaration(ObjectProperty(:oldDistrict))
AnnotationAssertion(rdfs:label :oldDistrict "old district"@en)
ObjectPropertyDomain(:oldDistrict :PopulatedPlace)
ObjectPropertyRange(:oldDistrict :PopulatedPlace)
Declaration(ObjectProperty(:oldProvince))
AnnotationAssertion(rdfs:label :oldProvince "old province"@en)
ObjectPropertyDomain(:oldProvince :PopulatedPlace)
ObjectPropertyRange(:oldProvince :PopulatedPlace)
Declaration(ObjectProperty(:olivierAward))
AnnotationAssertion(rdfs:label :olivierAward "Olivier Award"@en)
ObjectPropertyDomain(:olivierAward :Comedian)
ObjectPropertyRange(:olivierAward :Award)
Declaration(ObjectProperty(:olympicOathSwornBy))
AnnotationAssertion(rdfs:label :olympicOathSwornBy "olympic oath sworn by"@en)
AnnotationAssertion(rdfs:label :olympicOathSwornBy "lecteur du serment olympique"@fr)
ObjectPropertyDomain(:olympicOathSwornBy :Olympics)
ObjectPropertyRange(:olympicOathSwornBy :Person)
Declaration(ObjectProperty(:olympicOathSwornByAthlete))
AnnotationAssertion(rdfs:label :olympicOathSwornByAthlete "olympic oath sworn by athlete"@en)
ObjectPropertyDomain(:olympicOathSwornByAthlete :Olympics)
ObjectPropertyRange(:olympicOathSwornByAthlete :Person)
Declaration(ObjectProperty(:olympicOathSwornByJudge))
AnnotationAssertion(rdfs:label :olympicOathSwornByJudge "olympic oath sworn by judge"@en)
ObjectPropertyDomain(:olympicOathSwornByJudge :Olympics)
ObjectPropertyRange(:olympicOathSwornByJudge :Person)
Declaration(ObjectProperty(:openingFilm))
AnnotationAssertion(rdfs:label :openingFilm "opening film"@en)
ObjectPropertyDomain(:openingFilm :FilmFestival)
ObjectPropertyRange(:openingFilm :Film)
Declaration(ObjectProperty(:openingTheme))
AnnotationAssertion(rdfs:label :openingTheme "opening theme"@en)
ObjectPropertyDomain(:openingTheme :TelevisionShow)
ObjectPropertyRange(:openingTheme :Work)
Declaration(ObjectProperty(:operatedBy))
AnnotationAssertion(rdfs:label :operatedBy "betrieben von"@de)
AnnotationAssertion(rdfs:comment :operatedBy "Organisation or city who is the operator of the ArchitecturalStructure. Not to confuse with maintainer or the owner."@en)
AnnotationAssertion(rdfs:label :operatedBy "operated by"@en)
ObjectPropertyDomain(:operatedBy :ArchitecturalStructure)
Declaration(ObjectProperty(:operatingSystem))
AnnotationAssertion(rdfs:label :operatingSystem "besturingssysteem"@nl)
AnnotationAssertion(rdfs:label :operatingSystem "operating system"@en)
ObjectPropertyDomain(:operatingSystem :Software)
Declaration(ObjectProperty(:operator))
AnnotationAssertion(rdfs:label :operator "exploitant"@nl)
AnnotationAssertion(rdfs:label :operator "operator"@en)
ObjectPropertyDomain(:operator :Infrastructure)
ObjectPropertyRange(:operator :Organisation)
Declaration(ObjectProperty(:opponent))
AnnotationAssertion(rdfs:label :opponent "opponent"@en)
AnnotationAssertion(rdfs:label :opponent "Gegner"@de)
AnnotationAssertion(rdfs:label :opponent "敵対者"@ja)
ObjectPropertyDomain(:opponent :Person)
ObjectPropertyRange(:opponent :Person)
Declaration(ObjectProperty(:opponents))
AnnotationAssertion(rdfs:label :opponents "opponents"@en)
AnnotationAssertion(rdfs:comment :opponents "\"opponent in a military conflict, an organisation, country, or group of countries. \""@en)
ObjectPropertyDomain(:opponents :MilitaryConflict)
Declaration(ObjectProperty(:order))
AnnotationAssertion(rdfs:label :order "目_(分類学)"@ja)
AnnotationAssertion(rdfs:label :order "order"@en)
AnnotationAssertion(rdfs:label :order "orde"@nl)
AnnotationAssertion(rdfs:label :order "διαταγή"@el)
ObjectPropertyDomain(:order :Species)
Declaration(ObjectProperty(:organSystem))
AnnotationAssertion(rdfs:comment :organSystem "the organ system that a anatomical structure belongs to"@en)
AnnotationAssertion(rdfs:label :organSystem "organ system"@en)
ObjectPropertyDomain(:organSystem :AnatomicalStructure)
ObjectPropertyRange(:organSystem :AnatomicalStructure)
Declaration(ObjectProperty(:organisation))
AnnotationAssertion(rdfs:label :organisation "organisation"@en)
ObjectPropertyRange(:organisation :Organisation)
Declaration(ObjectProperty(:organisationMember))
AnnotationAssertion(rdfs:comment :organisationMember "Identify the members of an organisation."@en)
AnnotationAssertion(rdfs:label :organisationMember "organisation member"@en)
ObjectPropertyDomain(:organisationMember :Organisation)
ObjectPropertyRange(:organisationMember :OrganisationMember)
Declaration(ObjectProperty(:origin))
AnnotationAssertion(rdfs:label :origin "origem"@pt)
AnnotationAssertion(rdfs:label :origin "προέλευση"@el)
AnnotationAssertion(rdfs:label :origin "origin"@en)
AnnotationAssertion(rdfs:label :origin "oorsprong"@nl)
AnnotationAssertion(rdfs:label :origin "origine"@fr)
AnnotationAssertion(rdfs:label :origin "Herkunft"@de)
ObjectPropertyRange(:origin :PopulatedPlace)
Declaration(ObjectProperty(:originalEndPoint))
AnnotationAssertion(rdfs:label :originalEndPoint "original end point"@en)
AnnotationAssertion(rdfs:label :originalEndPoint "πρωταρχικό_σημείο_τέλους"@el)
ObjectPropertyDomain(:originalEndPoint :Canal)
ObjectPropertyRange(:originalEndPoint :Place)
Declaration(ObjectProperty(:originalLanguage))
AnnotationAssertion(rdfs:label :originalLanguage "Originalsprache"@de)
AnnotationAssertion(rdfs:label :originalLanguage "original language"@en)
AnnotationAssertion(rdfs:comment :originalLanguage "The original language of the work."@en)
AnnotationAssertion(rdfs:label :originalLanguage "oorspronkelijke taal"@nl)
ObjectPropertyDomain(:originalLanguage :Work)
ObjectPropertyRange(:originalLanguage :Language)
Declaration(ObjectProperty(:originalStartPoint))
AnnotationAssertion(rdfs:label :originalStartPoint "original start point"@en)
AnnotationAssertion(rdfs:label :originalStartPoint "πρωταρχική_αρχή"@el)
ObjectPropertyDomain(:originalStartPoint :Canal)
ObjectPropertyRange(:originalStartPoint :Place)
Declaration(ObjectProperty(:orogeny))
AnnotationAssertion(rdfs:label :orogeny "orogeny"@en)
AnnotationAssertion(rdfs:label :orogeny "orogenèse"@fr)
Declaration(ObjectProperty(:orthologousGene))
AnnotationAssertion(rdfs:label :orthologousGene "Orthologous Gene"@en)
AnnotationAssertion(rdfs:label :orthologousGene "オーソロガス遺伝子"@ja)
ObjectPropertyDomain(:orthologousGene :Gene)
ObjectPropertyRange(:orthologousGene :Gene)
Declaration(ObjectProperty(:otherAppearances))
AnnotationAssertion(rdfs:label :otherAppearances "other appearances"@en)
ObjectPropertyDomain(:otherAppearances :OlympicResult)
ObjectPropertyRange(:otherAppearances :OlympicResult)
Declaration(ObjectProperty(:otherParty))
AnnotationAssertion(rdfs:label :otherParty "other party"@en)
ObjectPropertyDomain(:otherParty :OfficeHolder)
ObjectPropertyRange(:otherParty :PoliticalParty)
Declaration(ObjectProperty(:outflow))
AnnotationAssertion(rdfs:label :outflow "outflow"@en)
AnnotationAssertion(rdfs:label :outflow "εκροή"@el)
ObjectPropertyDomain(:outflow :Lake)
ObjectPropertyRange(:outflow :River)
Declaration(ObjectProperty(:owner))
AnnotationAssertion(rdfs:label :owner "owner"@en)
AnnotationAssertion(rdfs:label :owner "ιδιοκτήτης"@el)
AnnotationAssertion(rdfs:label :owner "eigenaar"@nl)
AnnotationAssertion(rdfs:label :owner "Eigentümer"@de)
AnnotationAssertion(rdfs:label :owner "propriétaire"@fr)
AnnotationAssertion(rdfs:label :owner "dueño"@es)
ObjectPropertyRange(:owner :Agent)
Declaration(ObjectProperty(:owningCompany))
AnnotationAssertion(rdfs:label :owningCompany "owning company"@en)
ObjectPropertyRange(:owningCompany :Company)
Declaration(ObjectProperty(:owningOrganisation))
AnnotationAssertion(rdfs:label :owningOrganisation "owning organisation"@en)
AnnotationAssertion(rdfs:label :owningOrganisation "οργανισμός"@el)
ObjectPropertyRange(:owningOrganisation :Organisation)
Declaration(ObjectProperty(:painter))
AnnotationAssertion(rdfs:label :painter "painter"@en)
AnnotationAssertion(rdfs:label :painter "ζωγράφος"@el)
ObjectPropertyDomain(:painter :Artwork)
ObjectPropertyRange(:painter :Person)
Declaration(ObjectProperty(:parent))
AnnotationAssertion(rdfs:label :parent "parent"@fr)
AnnotationAssertion(rdfs:label :parent "ouder"@nl)
AnnotationAssertion(rdfs:label :parent "parent"@en)
AnnotationAssertion(rdfs:label :parent "親"@ja)
ObjectPropertyDomain(:parent :Person)
ObjectPropertyRange(:parent :Person)
Declaration(ObjectProperty(:parentCompany))
AnnotationAssertion(rdfs:label :parentCompany "parent company"@en)
ObjectPropertyRange(:parentCompany :Company)
Declaration(ObjectProperty(:parentMountainPeak))
AnnotationAssertion(rdfs:label :parentMountainPeak "parent mountain peak"@en)
ObjectPropertyDomain(:parentMountainPeak :Mountain)
ObjectPropertyRange(:parentMountainPeak :Mountain)
Declaration(ObjectProperty(:parentOrganisation))
AnnotationAssertion(rdfs:label :parentOrganisation "parent organisation"@en)
AnnotationAssertion(rdfs:label :parentOrganisation "moederorganisatie"@nl)
ObjectPropertyDomain(:parentOrganisation :Organisation)
ObjectPropertyRange(:parentOrganisation :Organisation)
Declaration(ObjectProperty(:parish))
AnnotationAssertion(rdfs:label :parish "parish"@en)
ObjectPropertyDomain(:parish :PopulatedPlace)
ObjectPropertyRange(:parish :PopulatedPlace)
Declaration(ObjectProperty(:part))
AnnotationAssertion(rdfs:label :part "part"@en)
ObjectPropertyRange(:part :Place)
Declaration(ObjectProperty(:partner))
AnnotationAssertion(rdfs:label :partner "Partner"@de)
AnnotationAssertion(rdfs:label :partner "partner"@nl)
AnnotationAssertion(rdfs:label :partner "συνέταιρος"@el)
AnnotationAssertion(rdfs:label :partner "partner"@en)
ObjectPropertyDomain(:partner :Person)
ObjectPropertyRange(:partner :Person)
Declaration(ObjectProperty(:party))
AnnotationAssertion(rdfs:label :party "Partei"@de)
AnnotationAssertion(rdfs:label :party "政党"@ja)
AnnotationAssertion(rdfs:label :party "partij"@nl)
AnnotationAssertion(rdfs:label :party "party"@en)
AnnotationAssertion(rdfs:label :party "πάρτυ"@el)
ObjectPropertyRange(:party :PoliticalParty)
Declaration(ObjectProperty(:pastMember))
AnnotationAssertion(rdfs:label :pastMember "past member"@en)
ObjectPropertyRange(:pastMember :Person)
Declaration(ObjectProperty(:pastor))
AnnotationAssertion(rdfs:label :pastor "pastor"@en)
ObjectPropertyDomain(:pastor :HistoricBuilding)
ObjectPropertyRange(:pastor :Person)
Declaration(ObjectProperty(:patent))
AnnotationAssertion(rdfs:label :patent "patente"@pt)
AnnotationAssertion(rdfs:label :patent "patent"@en)
ObjectPropertyDomain(:patent :Person)
Declaration(ObjectProperty(:patron))
AnnotationAssertion(rdfs:label :patron "patron"@en)
AnnotationAssertion(rdfs:label :patron "patrono"@pt)
ObjectPropertyDomain(:patron :MilitaryUnit)
ObjectPropertyRange(:patron :Person)
Declaration(ObjectProperty(:patronSaint))
AnnotationAssertion(rdfs:label :patronSaint "patron saint"@en)
ObjectPropertyDomain(:patronSaint :Settlement)
ObjectPropertyRange(:patronSaint :Person)
Declaration(ObjectProperty(:peabodyAward))
AnnotationAssertion(rdfs:label :peabodyAward "Peabody Award"@en)
ObjectPropertyDomain(:peabodyAward :Comedian)
ObjectPropertyRange(:peabodyAward :Award)
Declaration(ObjectProperty(:performer))
AnnotationAssertion(rdfs:label :performer "performer"@en)
ObjectPropertyDomain(:performer :FictionalCharacter)
ObjectPropertyRange(:performer :Person)
Declaration(ObjectProperty(:person))
AnnotationAssertion(rdfs:label :person "άτομο"@el)
AnnotationAssertion(rdfs:label :person "person"@en)
ObjectPropertyDomain(:person :PersonFunction)
ObjectPropertyRange(:person :Person)
Declaration(ObjectProperty(:personFunction))
AnnotationAssertion(rdfs:label :personFunction "persoon functie"@nl)
AnnotationAssertion(rdfs:label :personFunction "person function"@en)
ObjectPropertyDomain(:personFunction :Person)
ObjectPropertyRange(:personFunction :PersonFunction)
Declaration(ObjectProperty(:philosophicalSchool))
AnnotationAssertion(rdfs:label :philosophicalSchool "philosophicalSchool"@en)
ObjectPropertyDomain(:philosophicalSchool :Person)
Declaration(ObjectProperty(:photographer))
AnnotationAssertion(rdfs:label :photographer "photographer"@en)
ObjectPropertyDomain(:photographer :TelevisionEpisode)
ObjectPropertyRange(:photographer :Person)
Declaration(ObjectProperty(:phylum))
AnnotationAssertion(rdfs:label :phylum "門_(分類学)"@en)
ObjectPropertyDomain(:phylum :Species)
Declaration(ObjectProperty(:picture))
AnnotationAssertion(rdfs:comment :picture "A picture of a thing."@en)
AnnotationAssertion(rdfs:label :picture "εικόνα"@el)
AnnotationAssertion(rdfs:label :picture "afbeelding"@nl)
AnnotationAssertion(rdfs:label :picture "figura"@pt)
AnnotationAssertion(rdfs:label :picture "Bild"@de)
AnnotationAssertion(rdfs:label :picture "picture"@en)
Declaration(ObjectProperty(:pictureDescription))
AnnotationAssertion(rdfs:label :pictureDescription "picture description"@en)
Declaration(ObjectProperty(:pictureFormat))
AnnotationAssertion(rdfs:label :pictureFormat "Bildformat"@de)
AnnotationAssertion(rdfs:label :pictureFormat "picture format"@en)
ObjectPropertyDomain(:pictureFormat :Broadcaster)
Declaration(ObjectProperty(:place))
AnnotationAssertion(rdfs:label :place "place of military conflict"@en)
AnnotationAssertion(rdfs:label :place "Ort eines militärischen Konflikts"@de)
ObjectPropertyDomain(:place :MilitaryConflict)
ObjectPropertyRange(:place :PopulatedPlace)
Declaration(ObjectProperty(:placeOfBurial))
AnnotationAssertion(rdfs:label :placeOfBurial "place of burial"@en)
ObjectPropertyDomain(:placeOfBurial :Monarch)
ObjectPropertyRange(:placeOfBurial :PopulatedPlace)
Declaration(ObjectProperty(:placeOfWorship))
AnnotationAssertion(rdfs:label :placeOfWorship "gebedsplaats"@nl)
AnnotationAssertion(rdfs:comment :placeOfWorship "A religious administrative body needs to know which places of worship it"@en)
AnnotationAssertion(rdfs:label :placeOfWorship "place of worship"@en)
AnnotationAssertion(rdfs:comment :placeOfWorship "Een kerkelijke organisatie houdt bij welke gebedshuizen ze heeft"@nl)
ObjectPropertyDomain(:placeOfWorship :ClericalAdministrativeRegion)
ObjectPropertyRange(:placeOfWorship :Church)
Declaration(ObjectProperty(:plant))
AnnotationAssertion(rdfs:label :plant "φυτό"@el)
AnnotationAssertion(rdfs:label :plant "plant"@en)
AnnotationAssertion(rdfs:label :plant "植物"@ja)
ObjectPropertyDomain(:plant :Place)
ObjectPropertyRange(:plant :Plant)
Declaration(ObjectProperty(:playRole))
AnnotationAssertion(rdfs:label :playRole "play role"@en)
Declaration(ObjectProperty(:playerInTeam))
AnnotationAssertion(rdfs:comment :playerInTeam "Άτομο που παίζει για αθλητική ομάδα."@el)
AnnotationAssertion(rdfs:label :playerInTeam "player in team"@en)
AnnotationAssertion(rdfs:label :playerInTeam "παίχτης σε ομάδα"@el)
AnnotationAssertion(rdfs:comment :playerInTeam "A person playing for the sports team."@en)
ObjectPropertyDomain(:playerInTeam :SportsTeam)
ObjectPropertyRange(:playerInTeam :Person)
Declaration(ObjectProperty(:poleDriver))
AnnotationAssertion(rdfs:label :poleDriver "pole driver"@en)
ObjectPropertyDomain(:poleDriver :GrandPrix)
ObjectPropertyRange(:poleDriver :Person)
Declaration(ObjectProperty(:poleDriverCountry))
AnnotationAssertion(rdfs:label :poleDriverCountry "pole driver country"@en)
ObjectPropertyDomain(:poleDriverCountry :GrandPrix)
ObjectPropertyRange(:poleDriverCountry :Country)
Declaration(ObjectProperty(:poleDriverTeam))
AnnotationAssertion(rdfs:label :poleDriverTeam "pole driver team"@en)
ObjectPropertyDomain(:poleDriverTeam :GrandPrix)
ObjectPropertyRange(:poleDriverTeam :SportsTeam)
Declaration(ObjectProperty(:polishFilmAward))
AnnotationAssertion(rdfs:label :polishFilmAward "Polska Nagroda Filmowa (Orzeł)"@pl)
AnnotationAssertion(rdfs:label :polishFilmAward "Polish Film Award"@en)
ObjectPropertyDomain(:polishFilmAward :Artist)
ObjectPropertyRange(:polishFilmAward :Award)
Declaration(ObjectProperty(:politicGovernmentDepartment))
AnnotationAssertion(rdfs:label :politicGovernmentDepartment "ministerio do politico"@pt)
AnnotationAssertion(rdfs:label :politicGovernmentDepartment "politic government department"@en)
ObjectPropertyDomain(:politicGovernmentDepartment :PopulatedPlace)
Declaration(ObjectProperty(:politicalPartyInLegislature))
AnnotationAssertion(rdfs:comment :politicalPartyInLegislature "Political party in the legislature (eg.: European People's Party in the European Parliament)."@en)
AnnotationAssertion(rdfs:label :politicalPartyInLegislature "political party in legislature"@en)
AnnotationAssertion(rdfs:label :politicalPartyInLegislature "politische Partei in der Legislative"@de)
ObjectPropertyDomain(:politicalPartyInLegislature :Legislature)
ObjectPropertyRange(:politicalPartyInLegislature :PoliticalParty)
Declaration(ObjectProperty(:politicalPartyOfLeader))
AnnotationAssertion(rdfs:label :politicalPartyOfLeader "politische Partei des Vorsitzenden"@de)
AnnotationAssertion(rdfs:comment :politicalPartyOfLeader "The Political party of leader."@en)
AnnotationAssertion(rdfs:label :politicalPartyOfLeader "political party of leader"@en)
ObjectPropertyDomain(:politicalPartyOfLeader :Legislature)
ObjectPropertyRange(:politicalPartyOfLeader :PoliticalParty)
Declaration(ObjectProperty(:poorestCountry))
AnnotationAssertion(rdfs:label :poorestCountry "país mais pobre"@pt)
AnnotationAssertion(rdfs:label :poorestCountry "poorest country"@en)
ObjectPropertyDomain(:poorestCountry :Country)
ObjectPropertyRange(:poorestCountry :Country)
Declaration(ObjectProperty(:populationPlace))
AnnotationAssertion(rdfs:label :populationPlace "population place"@en)
AnnotationAssertion(rdfs:comment :populationPlace "a place were members of an ethnic group are living"@en)
ObjectPropertyDomain(:populationPlace :EthnicGroup)
ObjectPropertyRange(:populationPlace :PopulatedPlace)
Declaration(ObjectProperty(:populationTotalReference))
AnnotationAssertion(rdfs:label :populationTotalReference "referencia do total da populacao"@pt)
AnnotationAssertion(rdfs:label :populationTotalReference "total population reference"@en)
ObjectPropertyDomain(:populationTotalReference :Settlement)
Declaration(ObjectProperty(:port1))
AnnotationAssertion(rdfs:comment :port1 "first docking port of a spacecraft"@en)
AnnotationAssertion(rdfs:label :port1 "port1"@en)
ObjectPropertyDomain(:port1 :Spacecraft)
Declaration(ObjectProperty(:port2))
AnnotationAssertion(rdfs:comment :port2 "second docking port of a spacecraft"@en)
AnnotationAssertion(rdfs:label :port2 "port2"@en)
ObjectPropertyDomain(:port2 :Spacecraft)
Declaration(ObjectProperty(:portrayer))
AnnotationAssertion(rdfs:label :portrayer "portrayer"@en)
ObjectPropertyDomain(:portrayer :FictionalCharacter)
Declaration(ObjectProperty(:powerType))
AnnotationAssertion(rdfs:label :powerType "power type"@en)
ObjectPropertyDomain(:powerType :MeanOfTransportation)
Declaration(ObjectProperty(:precursor))
AnnotationAssertion(rdfs:label :precursor "precursor"@en)
ObjectPropertyDomain(:precursor :AnatomicalStructure)
ObjectPropertyRange(:precursor :Embryology)
Declaration(ObjectProperty(:predecessor))
AnnotationAssertion(rdfs:label :predecessor "Vorgänger"@de)
AnnotationAssertion(rdfs:label :predecessor "voorganger"@nl)
AnnotationAssertion(rdfs:label :predecessor "predecessor"@en)
AnnotationAssertion(rdfs:label :predecessor "前任者"@ja)
Declaration(ObjectProperty(:prefect))
AnnotationAssertion(rdfs:label :prefect "prefect of a romanian settlement"@en)
ObjectPropertyRange(:prefect :Person)
Declaration(ObjectProperty(:prefecture))
AnnotationAssertion(rdfs:label :prefecture "prefecture"@en)
ObjectPropertyDomain(:prefecture :Department)
ObjectPropertyRange(:prefecture :PopulatedPlace)
Declaration(ObjectProperty(:premierePlace))
AnnotationAssertion(rdfs:label :premierePlace "premiere place"@en)
AnnotationAssertion(rdfs:comment :premierePlace "The theatre and/or city the play was first performed in."@en)
ObjectPropertyDomain(:premierePlace :Play)
Declaration(ObjectProperty(:presenter))
AnnotationAssertion(rdfs:label :presenter "παρουσιαστής"@el)
AnnotationAssertion(rdfs:label :presenter "presenter"@en)
ObjectPropertyDomain(:presenter :TelevisionShow)
ObjectPropertyRange(:presenter :Person)
Declaration(ObjectProperty(:president))
AnnotationAssertion(rdfs:label :president "president"@nl)
AnnotationAssertion(rdfs:label :president "Präsident"@de)
AnnotationAssertion(rdfs:label :president "presidente"@pt)
AnnotationAssertion(rdfs:label :president "president"@en)
AnnotationAssertion(rdfs:label :president "πρόεδρος"@el)
ObjectPropertyRange(:president :Person)
Declaration(ObjectProperty(:presidentGeneralCouncil))
AnnotationAssertion(rdfs:label :presidentGeneralCouncil "president of the general council"@en)
ObjectPropertyDomain(:presidentGeneralCouncil :Place)
ObjectPropertyRange(:presidentGeneralCouncil :Person)
Declaration(ObjectProperty(:presidentRegionalCouncil))
AnnotationAssertion(rdfs:label :presidentRegionalCouncil "president of the regional council"@en)
ObjectPropertyDomain(:presidentRegionalCouncil :Place)
ObjectPropertyRange(:presidentRegionalCouncil :Person)
Declaration(ObjectProperty(:previousEditor))
AnnotationAssertion(rdfs:label :previousEditor "previous editor"@en)
AnnotationAssertion(rdfs:label :previousEditor "πρώην συντάκτης"@el)
ObjectPropertyDomain(:previousEditor :Magazine)
ObjectPropertyRange(:previousEditor :Person)
Declaration(ObjectProperty(:previousEntity))
AnnotationAssertion(rdfs:label :previousEntity "previous entity"@en)
ObjectPropertyDomain(:previousEntity :Place)
ObjectPropertyRange(:previousEntity :Place)
Declaration(ObjectProperty(:previousEvent))
AnnotationAssertion(rdfs:label :previousEvent "evento anterior"@pt)
AnnotationAssertion(rdfs:label :previousEvent "vorige evenement"@nl)
AnnotationAssertion(rdfs:label :previousEvent "previous event"@en)
ObjectPropertyDomain(:previousEvent :Event)
ObjectPropertyRange(:previousEvent :Event)
Declaration(ObjectProperty(:previousInfrastructure))
AnnotationAssertion(rdfs:label :previousInfrastructure "vorige infrastructuur"@nl)
AnnotationAssertion(rdfs:label :previousInfrastructure "previous infrastructure"@en)
ObjectPropertyDomain(:previousInfrastructure :Infrastructure)
ObjectPropertyRange(:previousInfrastructure :Infrastructure)
Declaration(ObjectProperty(:previousMission))
AnnotationAssertion(rdfs:label :previousMission "previous mission"@en)
ObjectPropertyDomain(:previousMission :SpaceMission)
ObjectPropertyRange(:previousMission :SpaceMission)
Declaration(ObjectProperty(:previousWork))
AnnotationAssertion(rdfs:label :previousWork "previous work"@en)
AnnotationAssertion(rdfs:label :previousWork "vorig werk"@nl)
AnnotationAssertion(rdfs:label :previousWork "προηγούμενη δημιουργία"@el)
ObjectPropertyDomain(:previousWork :Work)
ObjectPropertyRange(:previousWork :Work)
Declaration(ObjectProperty(:primeMinister))
AnnotationAssertion(rdfs:label :primeMinister "Premierminister"@de)
AnnotationAssertion(rdfs:label :primeMinister "minister-president"@nl)
AnnotationAssertion(rdfs:label :primeMinister "prime minister"@en)
ObjectPropertyRange(:primeMinister :Person)
Declaration(ObjectProperty(:principal))
AnnotationAssertion(rdfs:label :principal "principal"@en)
ObjectPropertyDomain(:principal :EducationalInstitution)
ObjectPropertyRange(:principal :Person)
Declaration(ObjectProperty(:principalArea))
AnnotationAssertion(rdfs:label :principalArea "principal area"@en)
ObjectPropertyDomain(:principalArea :PopulatedPlace)
ObjectPropertyRange(:principalArea :PopulatedPlace)
Declaration(ObjectProperty(:principalEngineer))
AnnotationAssertion(rdfs:label :principalEngineer "principal engineer"@en)
AnnotationAssertion(rdfs:label :principalEngineer "πρώτος_μηχανικός"@el)
ObjectPropertyDomain(:principalEngineer :Canal)
ObjectPropertyRange(:principalEngineer :Person)
Declaration(ObjectProperty(:producer))
AnnotationAssertion(rdfs:label :producer "producent"@nl)
AnnotationAssertion(rdfs:label :producer "Produzent"@de)
AnnotationAssertion(rdfs:label :producer "παραγωγός"@el)
AnnotationAssertion(rdfs:label :producer "producer"@en)
ObjectPropertyRange(:producer :Person)
Declaration(ObjectProperty(:produces))
AnnotationAssertion(rdfs:label :produces "produces"@en)
Declaration(ObjectProperty(:product))
AnnotationAssertion(rdfs:label :product "προϊόν"@el)
AnnotationAssertion(rdfs:label :product "Produkt"@de)
AnnotationAssertion(rdfs:label :product "product"@en)
ObjectPropertyDomain(:product :Organisation)
Declaration(ObjectProperty(:productionCompany))
AnnotationAssertion(rdfs:label :productionCompany "production company"@en)
AnnotationAssertion(rdfs:label :productionCompany "productiebedrijf"@nl)
AnnotationAssertion(rdfs:comment :productionCompany "the company that produced the work e.g. Film, MusicalWork, Software"@en)
ObjectPropertyDomain(:productionCompany :Work)
ObjectPropertyRange(:productionCompany :Company)
Declaration(ObjectProperty(:profession))
AnnotationAssertion(rdfs:label :profession "profession"@en)
AnnotationAssertion(rdfs:label :profession "επάγγελμα"@el)
AnnotationAssertion(rdfs:label :profession "beroep"@nl)
ObjectPropertyDomain(:profession :Person)
Declaration(ObjectProperty(:programmeFormat))
AnnotationAssertion(rdfs:comment :programmeFormat "The programming format describes the overall content broadcast on a radio or television station."@en)
AnnotationAssertion(rdfs:label :programmeFormat "programme format"@en)
ObjectPropertyDomain(:programmeFormat :Broadcaster)
Declaration(ObjectProperty(:programmingLanguage))
AnnotationAssertion(rdfs:label :programmingLanguage "programming language"@en)
ObjectPropertyDomain(:programmingLanguage :Software)
Declaration(ObjectProperty(:projectCoordinator))
AnnotationAssertion(rdfs:comment :projectCoordinator "The coordinating organisation of the project."@en)
AnnotationAssertion(rdfs:label :projectCoordinator "project coordinator"@en)
ObjectPropertyDomain(:projectCoordinator :ResearchProject)
ObjectPropertyRange(:projectCoordinator :Organisation)
Declaration(ObjectProperty(:projectParticipant))
AnnotationAssertion(rdfs:comment :projectParticipant "A participating organisation of the project."@en)
AnnotationAssertion(rdfs:label :projectParticipant "project participant"@en)
ObjectPropertyDomain(:projectParticipant :ResearchProject)
ObjectPropertyRange(:projectParticipant :Organisation)
Declaration(ObjectProperty(:promotion))
AnnotationAssertion(rdfs:label :promotion "promotion"@en)
ObjectPropertyDomain(:promotion :WrestlingEvent)
Declaration(ObjectProperty(:prospectTeam))
AnnotationAssertion(rdfs:label :prospectTeam "prospect team"@en)
ObjectPropertyDomain(:prospectTeam :IceHockeyPlayer)
ObjectPropertyRange(:prospectTeam :HockeyTeam)
Declaration(ObjectProperty(:provides))
AnnotationAssertion(rdfs:label :provides "provides"@en)
Declaration(ObjectProperty(:province))
AnnotationAssertion(rdfs:label :province "επαρχία"@el)
AnnotationAssertion(rdfs:label :province "provincie"@nl)
AnnotationAssertion(rdfs:label :province "province"@en)
ObjectPropertyDomain(:province :Place)
ObjectPropertyRange(:province :Province)
Declaration(ObjectProperty(:provinceLink))
AnnotationAssertion(rdfs:label :provinceLink "province link"@en)
ObjectPropertyDomain(:provinceLink :Place)
ObjectPropertyRange(:provinceLink :Province)
Declaration(ObjectProperty(:provost))
AnnotationAssertion(rdfs:label :provost "provost"@en)
ObjectPropertyDomain(:provost :University)
ObjectPropertyRange(:provost :Person)
Declaration(ObjectProperty(:publisher))
AnnotationAssertion(rdfs:label :publisher "publisher"@en)
AnnotationAssertion(rdfs:label :publisher "uitgever"@nl)
AnnotationAssertion(rdfs:label :publisher "εκδότης"@el)
AnnotationAssertion(rdfs:label :publisher "Herausgeber"@de)
ObjectPropertyDomain(:publisher :Work)
ObjectPropertyRange(:publisher :Company)
Declaration(ObjectProperty(:race))
AnnotationAssertion(rdfs:label :race "race"@en)
ObjectPropertyRange(:race :Race)
Declaration(ObjectProperty(:raceHorse))
AnnotationAssertion(rdfs:label :raceHorse "race horse"@en)
ObjectPropertyRange(:raceHorse :RaceHorse)
Declaration(ObjectProperty(:raceTrack))
AnnotationAssertion(rdfs:label :raceTrack "race track"@en)
AnnotationAssertion(rdfs:label :raceTrack "circuit"@fr)
ObjectPropertyDomain(:raceTrack :SportsEvent)
ObjectPropertyRange(:raceTrack :RaceTrack)
Declaration(ObjectProperty(:railwayLineUsingTunnel))
AnnotationAssertion(rdfs:comment :railwayLineUsingTunnel "Railway line that is using the tunnel."@en)
AnnotationAssertion(rdfs:label :railwayLineUsingTunnel "railway line using tunnel"@en)
AnnotationAssertion(rdfs:label :railwayLineUsingTunnel "Tunnel benutzende Eisenbahnlinie"@de)
ObjectPropertyDomain(:railwayLineUsingTunnel :RailwayTunnel)
Declaration(ObjectProperty(:railwayRollingStock))
AnnotationAssertion(rdfs:label :railwayRollingStock "railway rolling stock"@en)
AnnotationAssertion(rdfs:label :railwayRollingStock "Operierende Schienenfahrzeuge"@de)
ObjectPropertyDomain(:railwayRollingStock :RouteOfTransportation)
Declaration(ObjectProperty(:rebuilder))
AnnotationAssertion(rdfs:label :rebuilder "rebuilder"@en)
ObjectPropertyDomain(:rebuilder :MeanOfTransportation)
Declaration(ObjectProperty(:recentWinner))
AnnotationAssertion(rdfs:label :recentWinner "recent winner"@en)
ObjectPropertyDomain(:recentWinner :Race)
ObjectPropertyRange(:recentWinner :Person)
Declaration(ObjectProperty(:recordLabel))
AnnotationAssertion(rdfs:label :recordLabel "record label"@en)
AnnotationAssertion(rdfs:label :recordLabel "δισκογραφική"@el)
AnnotationAssertion(rdfs:label :recordLabel "platenlabel"@nl)
ObjectPropertyRange(:recordLabel :RecordLabel)
Declaration(ObjectProperty(:recordedIn))
AnnotationAssertion(rdfs:label :recordedIn "opgenomen in"@nl)
AnnotationAssertion(rdfs:label :recordedIn "recorded in"@en)
AnnotationAssertion(rdfs:label :recordedIn "ηχογράφηση"@el)
AnnotationAssertion(rdfs:label :recordedIn "enregistré à"@fr)
ObjectPropertyDomain(:recordedIn :MusicalWork)
ObjectPropertyRange(:recordedIn :PopulatedPlace)
Declaration(ObjectProperty(:rector))
AnnotationAssertion(rdfs:label :rector "rector"@en)
ObjectPropertyDomain(:rector :EducationalInstitution)
ObjectPropertyRange(:rector :Person)
Declaration(ObjectProperty(:regency))
AnnotationAssertion(rdfs:label :regency "regency"@en)
AnnotationAssertion(rdfs:label :regency "kabupaten"@id)
ObjectPropertyDomain(:regency :Place)
ObjectPropertyRange(:regency :PopulatedPlace)
Declaration(ObjectProperty(:region))
AnnotationAssertion(rdfs:label :region "regio"@nl)
AnnotationAssertion(rdfs:label :region "περιοχή"@el)
AnnotationAssertion(rdfs:label :region "region"@en)
ObjectPropertyRange(:region :Place)
Declaration(ObjectProperty(:regionServed))
AnnotationAssertion(rdfs:label :regionServed "region served"@en)
AnnotationAssertion(rdfs:label :regionServed "werkgebied"@nl)
ObjectPropertyDomain(:regionServed :Organisation)
ObjectPropertyRange(:regionServed :Place)
Declaration(ObjectProperty(:regionalLanguage))
AnnotationAssertion(rdfs:label :regionalLanguage "regional language"@en)
ObjectPropertyDomain(:regionalLanguage :PopulatedPlace)
ObjectPropertyRange(:regionalLanguage :Language)
Declaration(ObjectProperty(:related))
AnnotationAssertion(rdfs:label :related "gerelateerd"@nl)
AnnotationAssertion(rdfs:label :related "related"@en)
Declaration(ObjectProperty(:relatedFunctions))
AnnotationAssertion(rdfs:comment :relatedFunctions "This property is to accommodate the list field that contains a list of related personFunctions a person holds or has held"@en)
AnnotationAssertion(rdfs:label :relatedFunctions "related functions"@en)
AnnotationAssertion(rdfs:comment :relatedFunctions "Deze property is voor de lijst van persoonfuncties die een persoon (bv. een politicus) bekleedt of heeft bekleed"@nl)
AnnotationAssertion(rdfs:label :relatedFunctions "soortgelijke functies"@nl)
ObjectPropertyDomain(:relatedFunctions :Person)
ObjectPropertyRange(:relatedFunctions :List)
Declaration(ObjectProperty(:relatedMeanOfTransportation))
AnnotationAssertion(rdfs:label :relatedMeanOfTransportation "related mean of transportation"@en)
ObjectPropertyDomain(:relatedMeanOfTransportation :MeanOfTransportation)
ObjectPropertyRange(:relatedMeanOfTransportation :MeanOfTransportation)
Declaration(ObjectProperty(:relatedPlaces))
AnnotationAssertion(rdfs:label :relatedPlaces "related places"@en)
AnnotationAssertion(rdfs:label :relatedPlaces "soortgelijke plaatsen"@nl)
AnnotationAssertion(rdfs:comment :relatedPlaces "Deze property is voor de lijst van monumenten die horen bij het monument van de infobox"@nl)
AnnotationAssertion(rdfs:comment :relatedPlaces "This property is to accommodate the list field that contains a list of, e.g., monuments in the same town"@en)
ObjectPropertyDomain(:relatedPlaces :Place)
ObjectPropertyRange(:relatedPlaces :List)
Declaration(ObjectProperty(:relation))
AnnotationAssertion(rdfs:label :relation "σχέση"@el)
AnnotationAssertion(rdfs:label :relation "relation"@en)
AnnotationAssertion(rdfs:label :relation "relatie"@nl)
ObjectPropertyDomain(:relation :Person)
ObjectPropertyRange(:relation :Person)
Declaration(ObjectProperty(:relative))
AnnotationAssertion(rdfs:label :relative "親戚"@ja)
AnnotationAssertion(rdfs:label :relative "συγγενής"@el)
AnnotationAssertion(rdfs:label :relative "Verwandter"@de)
AnnotationAssertion(rdfs:label :relative "relative"@en)
ObjectPropertyDomain(:relative :Person)
ObjectPropertyRange(:relative :Person)
Declaration(ObjectProperty(:religion))
AnnotationAssertion(rdfs:label :religion "religião"@pt)
AnnotationAssertion(rdfs:label :religion "宗教"@ja)
AnnotationAssertion(rdfs:label :religion "religion"@fr)
AnnotationAssertion(rdfs:label :religion "religie"@nl)
AnnotationAssertion(rdfs:label :religion "θρησκεία"@el)
AnnotationAssertion(rdfs:label :religion "religion"@en)
Declaration(ObjectProperty(:religiousHead))
AnnotationAssertion(rdfs:label :religiousHead "religious head"@en)
ObjectPropertyDomain(:religiousHead :School)
Declaration(ObjectProperty(:religiousHeadLabel))
AnnotationAssertion(rdfs:label :religiousHeadLabel "religious head label"@en)
ObjectPropertyDomain(:religiousHeadLabel :School)
Declaration(ObjectProperty(:religiousOrder))
AnnotationAssertion(rdfs:label :religiousOrder "religieuze orde"@nl)
AnnotationAssertion(rdfs:label :religiousOrder "religious order"@en)
ObjectPropertyDomain(:religiousOrder :Monastry)
ObjectPropertyRange(:religiousOrder :ClericalOrder)
Declaration(ObjectProperty(:residence))
AnnotationAssertion(rdfs:label :residence "verblijfplaats"@nl)
AnnotationAssertion(rdfs:label :residence "residence"@en)
AnnotationAssertion(rdfs:label :residence "κατοικία"@el)
ObjectPropertyDomain(:residence :Person)
Declaration(ObjectProperty(:resolution))
AnnotationAssertion(rdfs:label :resolution "résolution"@fr)
AnnotationAssertion(rdfs:label :resolution "resolution"@en)
AnnotationAssertion(rdfs:comment :resolution "Native Resolution"@en)
AnnotationAssertion(rdfs:label :resolution "ανάλυση"@el)
ObjectPropertyDomain(:resolution :Software)
Declaration(ObjectProperty(:restingPlace))
AnnotationAssertion(rdfs:label :restingPlace "resting place"@en)
ObjectPropertyDomain(:restingPlace :Person)
ObjectPropertyRange(:restingPlace :Place)
Declaration(ObjectProperty(:restingPlacePosition))
AnnotationAssertion(rdfs:label :restingPlacePosition "resting place position"@en)
ObjectPropertyDomain(:restingPlacePosition :Person)
ObjectPropertyRange(:restingPlacePosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:retiredRocket))
AnnotationAssertion(rdfs:label :retiredRocket "retired rocket"@en)
ObjectPropertyDomain(:retiredRocket :YearInSpaceflight)
ObjectPropertyRange(:retiredRocket :Rocket)
Declaration(ObjectProperty(:richestCountry))
AnnotationAssertion(rdfs:label :richestCountry "πλουσιότερη χώρα"@el)
AnnotationAssertion(rdfs:label :richestCountry "país mais rico"@pt)
AnnotationAssertion(rdfs:label :richestCountry "richest country"@en)
ObjectPropertyDomain(:richestCountry :Country)
ObjectPropertyRange(:richestCountry :Country)
Declaration(ObjectProperty(:rightChild))
AnnotationAssertion(rdfs:label :rightChild "right child"@en)
ObjectPropertyDomain(:rightChild :Island)
ObjectPropertyRange(:rightChild :Island)
Declaration(ObjectProperty(:rightTributary))
AnnotationAssertion(rdfs:label :rightTributary "δεξιοί_παραπόταμοι"@el)
AnnotationAssertion(rdfs:label :rightTributary "right tributary"@en)
ObjectPropertyDomain(:rightTributary :River)
ObjectPropertyRange(:rightTributary :River)
Declaration(ObjectProperty(:rival))
AnnotationAssertion(rdfs:label :rival "rival"@en)
ObjectPropertyDomain(:rival :School)
ObjectPropertyRange(:rival :School)
Declaration(ObjectProperty(:river))
AnnotationAssertion(rdfs:label :river "ποτάμι"@el)
AnnotationAssertion(rdfs:label :river "river"@en)
AnnotationAssertion(rdfs:label :river "rivière"@fr)
ObjectPropertyDomain(:river :Place)
ObjectPropertyRange(:river :River)
Declaration(ObjectProperty(:riverBranch))
AnnotationAssertion(rdfs:label :riverBranch "διακλαδώσεις"@el)
AnnotationAssertion(rdfs:label :riverBranch "riviertak"@nl)
AnnotationAssertion(rdfs:label :riverBranch "branch"@en)
ObjectPropertyDomain(:riverBranch :River)
ObjectPropertyRange(:riverBranch :River)
Declaration(ObjectProperty(:riverBranchOf))
AnnotationAssertion(rdfs:label :riverBranchOf "branch of"@en)
AnnotationAssertion(rdfs:label :riverBranchOf "διακλάδωση_του"@el)
ObjectPropertyDomain(:riverBranchOf :River)
ObjectPropertyRange(:riverBranchOf :River)
Declaration(ObjectProperty(:riverMouth))
AnnotationAssertion(rdfs:label :riverMouth "riviermonding"@nl)
AnnotationAssertion(rdfs:label :riverMouth "εκβολές"@el)
AnnotationAssertion(rdfs:label :riverMouth "river mouth"@en)
ObjectPropertyDomain(:riverMouth :River)
ObjectPropertyRange(:riverMouth :BodyOfWater)
Declaration(ObjectProperty(:rocket))
AnnotationAssertion(rdfs:label :rocket "fusée"@fr)
AnnotationAssertion(rdfs:label :rocket "rocket"@en)
AnnotationAssertion(rdfs:label :rocket "ρουκέτα"@el)
ObjectPropertyDomain(:rocket :Spacecraft)
ObjectPropertyRange(:rocket :Rocket)
Declaration(ObjectProperty(:rocketFunction))
AnnotationAssertion(rdfs:comment :rocketFunction "purpose of the rocket"@en)
AnnotationAssertion(rdfs:label :rocketFunction "rocket function"@en)
ObjectPropertyDomain(:rocketFunction :Rocket)
Declaration(ObjectProperty(:routeEnd))
AnnotationAssertion(rdfs:label :routeEnd "Wegende"@de)
AnnotationAssertion(rdfs:comment :routeEnd "Ende des Verkehrswegs."@de)
AnnotationAssertion(rdfs:comment :routeEnd "End of the route. This is where the route ends and, for U.S. roads, is either at the northern terminus or eastern terminus."@en)
AnnotationAssertion(rdfs:label :routeEnd "route end"@en)
ObjectPropertyDomain(:routeEnd :RouteOfTransportation)
ObjectPropertyRange(:routeEnd :RouteOfTransportation)
Declaration(ObjectProperty(:routeEndLocation))
AnnotationAssertion(rdfs:comment :routeEndLocation "The end location of the route."@en)
AnnotationAssertion(rdfs:label :routeEndLocation "Ort des Wegendes"@de)
AnnotationAssertion(rdfs:comment :routeEndLocation "End-Ort des Verkehrswegs."@de)
AnnotationAssertion(rdfs:label :routeEndLocation "route end location"@en)
ObjectPropertyDomain(:routeEndLocation :RouteOfTransportation)
ObjectPropertyRange(:routeEndLocation :Place)
Declaration(ObjectProperty(:routeJunction))
AnnotationAssertion(rdfs:comment :routeJunction "A junction or cross to another route."@en)
AnnotationAssertion(rdfs:label :routeJunction "Wegabzweigung"@de)
AnnotationAssertion(rdfs:comment :routeJunction "Eine Abzweigung oder Kreuzung zu einem anderen Verkehrsweg."@de)
AnnotationAssertion(rdfs:label :routeJunction "route junction"@en)
ObjectPropertyDomain(:routeJunction :RouteOfTransportation)
ObjectPropertyRange(:routeJunction :RouteOfTransportation)
Declaration(ObjectProperty(:routeStart))
AnnotationAssertion(rdfs:label :routeStart "route start"@en)
AnnotationAssertion(rdfs:comment :routeStart "Anfang des Verkehrswegs."@de)
AnnotationAssertion(rdfs:comment :routeStart "Start of the route. This is where the route begins and, for U.S. roads, is either at the southern terminus or western terminus."@en)
AnnotationAssertion(rdfs:label :routeStart "Weganfang"@de)
ObjectPropertyDomain(:routeStart :RouteOfTransportation)
ObjectPropertyRange(:routeStart :RouteOfTransportation)
Declaration(ObjectProperty(:routeStartLocation))
AnnotationAssertion(rdfs:label :routeStartLocation "route start location"@en)
AnnotationAssertion(rdfs:label :routeStartLocation "Ort des Weganfangs"@de)
AnnotationAssertion(rdfs:comment :routeStartLocation "Der Startort des Verkehrswegs."@de)
AnnotationAssertion(rdfs:comment :routeStartLocation "The start location of the route."@en)
ObjectPropertyDomain(:routeStartLocation :RouteOfTransportation)
ObjectPropertyRange(:routeStartLocation :Place)
Declaration(ObjectProperty(:royalAnthem))
AnnotationAssertion(rdfs:label :royalAnthem "royal anthem"@en)
Declaration(ObjectProperty(:runningMate))
AnnotationAssertion(rdfs:label :runningMate "running mate"@en)
ObjectPropertyRange(:runningMate :Person)
Declaration(ObjectProperty(:ruralMunicipality))
AnnotationAssertion(rdfs:label :ruralMunicipality "rural municipality"@en)
ObjectPropertyDomain(:ruralMunicipality :Road)
ObjectPropertyRange(:ruralMunicipality :PopulatedPlace)
Declaration(ObjectProperty(:saint))
AnnotationAssertion(rdfs:label :saint "heilige"@nl)
AnnotationAssertion(rdfs:label :saint "saint"@en)
AnnotationAssertion(rdfs:label :saint "santo"@pt)
AnnotationAssertion(rdfs:label :saint "άγιος"@el)
ObjectPropertyDomain(:saint :PopulatedPlace)
ObjectPropertyRange(:saint :Saint)
Declaration(ObjectProperty(:sales))
AnnotationAssertion(rdfs:comment :sales "This property holds an intermediate node of the type Sales."@en)
AnnotationAssertion(rdfs:label :sales "πώληση"@el)
AnnotationAssertion(rdfs:label :sales "sales"@en)
AnnotationAssertion(rdfs:label :sales "vente"@fr)
ObjectPropertyRange(:sales :Sales)
Declaration(ObjectProperty(:satScore))
AnnotationAssertion(rdfs:comment :satScore "most recent average SAT scores"@en)
AnnotationAssertion(rdfs:label :satScore "SAT score"@en)
ObjectPropertyDomain(:satScore :School)
Declaration(ObjectProperty(:school))
AnnotationAssertion(rdfs:label :school "school"@en)
AnnotationAssertion(rdfs:label :school "école"@fr)
AnnotationAssertion(rdfs:label :school "σχολείο"@el)
AnnotationAssertion(rdfs:label :school "school"@nl)
AnnotationAssertion(rdfs:comment :school "σχολείο στο οποίο πηγαίνει ή πήγε κάποιος"@el)
AnnotationAssertion(rdfs:label :school "scuola"@it)
AnnotationAssertion(rdfs:comment :school "school a person goes or went to"@en)
AnnotationAssertion(rdfs:label :school "schule"@de)
ObjectPropertyDomain(:school :Person)
ObjectPropertyRange(:school :EducationalInstitution)
Declaration(ObjectProperty(:schoolBoard))
AnnotationAssertion(rdfs:label :schoolBoard "school board"@en)
ObjectPropertyDomain(:schoolBoard :School)
Declaration(ObjectProperty(:schoolPatron))
AnnotationAssertion(rdfs:label :schoolPatron "school patron"@en)
ObjectPropertyDomain(:schoolPatron :School)
Declaration(ObjectProperty(:screenActorsGuildAward))
AnnotationAssertion(rdfs:label :screenActorsGuildAward "Screen Actors Guild Award"@en)
ObjectPropertyDomain(:screenActorsGuildAward :Actor)
ObjectPropertyRange(:screenActorsGuildAward :Award)
Declaration(ObjectProperty(:sea))
AnnotationAssertion(rdfs:label :sea "sea"@en)
ObjectPropertyDomain(:sea :Place)
ObjectPropertyRange(:sea :Sea)
Declaration(ObjectProperty(:season))
AnnotationAssertion(rdfs:label :season "season"@en)
AnnotationAssertion(rdfs:label :season "σαιζόν"@el)
ObjectPropertyDomain(:season :SoccerClub)
Declaration(ObjectProperty(:secondCommander))
AnnotationAssertion(rdfs:label :secondCommander "second commander"@en)
ObjectPropertyDomain(:secondCommander :MilitaryUnit)
ObjectPropertyRange(:secondCommander :Person)
Declaration(ObjectProperty(:secondDriver))
AnnotationAssertion(rdfs:label :secondDriver "δεύτερος οδηγός"@el)
AnnotationAssertion(rdfs:label :secondDriver "second driver"@en)
ObjectPropertyDomain(:secondDriver :GrandPrix)
ObjectPropertyRange(:secondDriver :Person)
Declaration(ObjectProperty(:secondDriverCountry))
AnnotationAssertion(rdfs:label :secondDriverCountry "second driver country"@en)
ObjectPropertyDomain(:secondDriverCountry :GrandPrix)
ObjectPropertyRange(:secondDriverCountry :Country)
Declaration(ObjectProperty(:secondLeader))
AnnotationAssertion(rdfs:label :secondLeader "vice-voorzitter"@nl)
AnnotationAssertion(rdfs:label :secondLeader "secondLeader"@en)
ObjectPropertyRange(:secondLeader :Person)
Declaration(ObjectProperty(:secondPopularVote))
AnnotationAssertion(rdfs:label :secondPopularVote "secondPopularVote"@en)
ObjectPropertyRange(:secondPopularVote :Person)
Declaration(ObjectProperty(:secondTeam))
AnnotationAssertion(rdfs:label :secondTeam "second team"@en)
AnnotationAssertion(rdfs:label :secondTeam "δεύτερη ομάδα"@el)
ObjectPropertyDomain(:secondTeam :GrandPrix)
ObjectPropertyRange(:secondTeam :SportsTeam)
Declaration(ObjectProperty(:secretaryGeneral))
AnnotationAssertion(rdfs:label :secretaryGeneral "secretario"@pt)
AnnotationAssertion(rdfs:label :secretaryGeneral "secretaris"@nl)
AnnotationAssertion(rdfs:label :secretaryGeneral "secretary"@en)
ObjectPropertyDomain(:secretaryGeneral :Organisation)
ObjectPropertyRange(:secretaryGeneral :Person)
Declaration(ObjectProperty(:selection))
AnnotationAssertion(rdfs:comment :selection "when (or in which project) the person was selected to train as an astronaut"@en)
AnnotationAssertion(rdfs:label :selection "selection"@en)
ObjectPropertyDomain(:selection :Astronaut)
Declaration(ObjectProperty(:senator))
AnnotationAssertion(rdfs:label :senator "senador"@pt)
AnnotationAssertion(rdfs:label :senator "senator"@en)
ObjectPropertyDomain(:senator :PopulatedPlace)
ObjectPropertyRange(:senator :Person)
Declaration(ObjectProperty(:series))
AnnotationAssertion(rdfs:label :series "reeks"@nl)
AnnotationAssertion(rdfs:label :series "series"@en)
AnnotationAssertion(rdfs:label :series "σειρά"@el)
Declaration(ObjectProperty(:service))
AnnotationAssertion(rdfs:label :service "service"@en)
ObjectPropertyDomain(:service :Company)
Declaration(ObjectProperty(:servingRailwayLine))
AnnotationAssertion(rdfs:label :servingRailwayLine "angebundene Eisenbahnlinie"@de)
AnnotationAssertion(rdfs:label :servingRailwayLine "serving railway line"@en)
AnnotationAssertion(rdfs:comment :servingRailwayLine "Railway services that serve the station."@en)
AnnotationAssertion(rdfs:label :servingRailwayLine "spoorlijnen"@nl)
ObjectPropertyDomain(:servingRailwayLine :Station)
Declaration(ObjectProperty(:setDesigner))
AnnotationAssertion(rdfs:label :setDesigner "scenografo"@it)
AnnotationAssertion(rdfs:comment :setDesigner "the person who is responsible for the film set design"@en)
AnnotationAssertion(rdfs:label :setDesigner "set designer"@en)
ObjectPropertyDomain(:setDesigner :Film)
ObjectPropertyRange(:setDesigner :Person)
Declaration(ObjectProperty(:settlement))
AnnotationAssertion(rdfs:label :settlement "settlement"@en)
ObjectPropertyDomain(:settlement :Place)
ObjectPropertyRange(:settlement :PopulatedPlace)
Declaration(ObjectProperty(:settlementAttached))
AnnotationAssertion(rdfs:label :settlementAttached "settlement attached"@en)
ObjectPropertyRange(:settlementAttached :Place)
Declaration(ObjectProperty(:sexualOrientation))
AnnotationAssertion(rdfs:label :sexualOrientation "sexual orientation"@en)
AnnotationAssertion(rdfs:label :sexualOrientation "orientação sexual"@pt)
ObjectPropertyDomain(:sexualOrientation :Person)
Declaration(ObjectProperty(:shape))
AnnotationAssertion(rdfs:label :shape "intercommunality shape"@en)
ObjectPropertyDomain(:shape :Intercommunality)
ObjectPropertyRange(:shape :Community)
Declaration(ObjectProperty(:sharingOutName))
AnnotationAssertion(rdfs:label :sharingOutName "sharing out name of a settlement"@en)
ObjectPropertyDomain(:sharingOutName :Settlement)
ObjectPropertyRange(:sharingOutName :PopulatedPlace)
Declaration(ObjectProperty(:sheading))
AnnotationAssertion(rdfs:label :sheading "sheading"@en)
ObjectPropertyDomain(:sheading :PopulatedPlace)
ObjectPropertyRange(:sheading :PopulatedPlace)
Declaration(ObjectProperty(:shipCrew))
AnnotationAssertion(rdfs:label :shipCrew "crew"@en)
ObjectPropertyDomain(:shipCrew :Ship)
ObjectPropertyRange(:shipCrew :Person)
Declaration(ObjectProperty(:show))
AnnotationAssertion(rdfs:label :show "show"@en)
AnnotationAssertion(rdfs:label :show "spectacle"@fr)
ObjectPropertyRange(:show :TelevisionShow)
Declaration(ObjectProperty(:showJudge))
AnnotationAssertion(rdfs:label :showJudge "showJudge"@en)
ObjectPropertyDomain(:showJudge :TelevisionShow)
ObjectPropertyRange(:showJudge :Person)
Declaration(ObjectProperty(:shuttle))
AnnotationAssertion(rdfs:label :shuttle "shuttle"@en)
ObjectPropertyDomain(:shuttle :SpaceMission)
ObjectPropertyRange(:shuttle :SpaceShuttle)
Declaration(ObjectProperty(:sibling))
AnnotationAssertion(rdfs:label :sibling "sibling"@en)
AnnotationAssertion(rdfs:label :sibling "frère ou soeur"@fr)
AnnotationAssertion(rdfs:label :sibling "broer of zus"@nl)
AnnotationAssertion(rdfs:label :sibling "Geschwister"@de)
ObjectPropertyDomain(:sibling :Person)
ObjectPropertyRange(:sibling :Person)
Declaration(ObjectProperty(:significantBuilding))
AnnotationAssertion(rdfs:label :significantBuilding "significant building"@en)
ObjectPropertyDomain(:significantBuilding :Architect)
ObjectPropertyRange(:significantBuilding :Building)
Declaration(ObjectProperty(:significantDesign))
AnnotationAssertion(rdfs:label :significantDesign "significant design"@en)
ObjectPropertyDomain(:significantDesign :Architect)
Declaration(ObjectProperty(:significantProject))
AnnotationAssertion(rdfs:label :significantProject "significant project"@en)
ObjectPropertyDomain(:significantProject :Person)
Declaration(ObjectProperty(:silCode))
AnnotationAssertion(rdfs:label :silCode "SIL code"@en)
AnnotationAssertion(rdfs:label :silCode "SIL-code"@nl)
AnnotationAssertion(rdfs:label :silCode "kod SIL"@pl)
ObjectPropertyDomain(:silCode :Language)
Declaration(ObjectProperty(:silverMedalist))
AnnotationAssertion(rdfs:label :silverMedalist "siler medalist"@en)
AnnotationAssertion(rdfs:label :silverMedalist "medalha de prata"@pt)
ObjectPropertyDomain(:silverMedalist :SportsEvent)
ObjectPropertyRange(:silverMedalist :Person)
Declaration(ObjectProperty(:simcCode))
AnnotationAssertion(rdfs:label :simcCode "SIMC code"@en)
AnnotationAssertion(rdfs:comment :simcCode "indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities"@en)
ObjectPropertyDomain(:simcCode :PopulatedPlace)
Declaration(ObjectProperty(:similar))
AnnotationAssertion(rdfs:label :similar "podobny"@pl)
AnnotationAssertion(rdfs:label :similar "similar"@en)
AnnotationAssertion(rdfs:label :similar "παρόμοιος"@el)
Declaration(ObjectProperty(:sire))
AnnotationAssertion(rdfs:label :sire "sire"@en)
ObjectPropertyDomain(:sire :Animal)
ObjectPropertyRange(:sire :Animal)
Declaration(ObjectProperty(:sisterCollege))
AnnotationAssertion(rdfs:label :sisterCollege "sister college"@en)
ObjectPropertyDomain(:sisterCollege :College)
ObjectPropertyRange(:sisterCollege :College)
Declaration(ObjectProperty(:sisterNewspaper))
AnnotationAssertion(rdfs:label :sisterNewspaper "sister newspaper"@en)
ObjectPropertyDomain(:sisterNewspaper :Newspaper)
ObjectPropertyRange(:sisterNewspaper :Newspaper)
Declaration(ObjectProperty(:sisterStation))
AnnotationAssertion(rdfs:label :sisterStation "sister station"@en)
ObjectPropertyDomain(:sisterStation :Broadcaster)
ObjectPropertyRange(:sisterStation :Broadcaster)
Declaration(ObjectProperty(:skills))
AnnotationAssertion(rdfs:label :skills "bekwaamheden"@nl)
AnnotationAssertion(rdfs:label :skills "skills"@en)
AnnotationAssertion(rdfs:label :skills "compétences"@fr)
Declaration(ObjectProperty(:smallestCountry))
AnnotationAssertion(rdfs:label :smallestCountry "menor país"@pt)
AnnotationAssertion(rdfs:label :smallestCountry "smallest country"@en)
ObjectPropertyDomain(:smallestCountry :PopulatedPlace)
ObjectPropertyRange(:smallestCountry :PopulatedPlace)
Declaration(ObjectProperty(:soccerLeaguePromoted))
AnnotationAssertion(rdfs:label :soccerLeaguePromoted "yükselenler"@tr)
AnnotationAssertion(rdfs:label :soccerLeaguePromoted "promoted"@en)
ObjectPropertyDomain(:soccerLeaguePromoted :SoccerLeagueSeason)
ObjectPropertyRange(:soccerLeaguePromoted :SportsTeam)
Declaration(ObjectProperty(:soccerLeagueRelegated))
AnnotationAssertion(rdfs:label :soccerLeagueRelegated "relegated teams"@en)
AnnotationAssertion(rdfs:label :soccerLeagueRelegated "düşenler"@tr)
ObjectPropertyDomain(:soccerLeagueRelegated :SoccerLeagueSeason)
ObjectPropertyRange(:soccerLeagueRelegated :SportsTeam)
Declaration(ObjectProperty(:soccerLeagueSeason))
AnnotationAssertion(rdfs:label :soccerLeagueSeason "sezon"@tr)
AnnotationAssertion(rdfs:label :soccerLeagueSeason "season"@en)
ObjectPropertyDomain(:soccerLeagueSeason :SoccerLeagueSeason)
ObjectPropertyRange(:soccerLeagueSeason :SoccerLeagueSeason)
Declaration(ObjectProperty(:soccerLeagueWinner))
AnnotationAssertion(rdfs:label :soccerLeagueWinner "şampiyon"@tr)
AnnotationAssertion(rdfs:label :soccerLeagueWinner "league champion"@en)
ObjectPropertyDomain(:soccerLeagueWinner :SoccerLeagueSeason)
ObjectPropertyRange(:soccerLeagueWinner :SportsTeam)
Declaration(ObjectProperty(:soccerTournamentClosingSeason))
AnnotationAssertion(rdfs:label :soccerTournamentClosingSeason "kapanış sezonu"@tr)
AnnotationAssertion(rdfs:label :soccerTournamentClosingSeason "closing season"@en)
ObjectPropertyDomain(:soccerTournamentClosingSeason :SoccerTournament)
ObjectPropertyRange(:soccerTournamentClosingSeason :SoccerTournament)
Declaration(ObjectProperty(:soccerTournamentLastChampion))
AnnotationAssertion(rdfs:label :soccerTournamentLastChampion "last champion"@en)
AnnotationAssertion(rdfs:label :soccerTournamentLastChampion "son şampiyon"@tr)
ObjectPropertyDomain(:soccerTournamentLastChampion :SoccerTournament)
ObjectPropertyRange(:soccerTournamentLastChampion :SoccerClub)
Declaration(ObjectProperty(:soccerTournamentMostSteady))
AnnotationAssertion(rdfs:label :soccerTournamentMostSteady "most steady"@en)
AnnotationAssertion(rdfs:label :soccerTournamentMostSteady "en istikrarlı"@tr)
ObjectPropertyDomain(:soccerTournamentMostSteady :SoccerTournament)
ObjectPropertyRange(:soccerTournamentMostSteady :SoccerClub)
Declaration(ObjectProperty(:soccerTournamentMostSuccesfull))
AnnotationAssertion(rdfs:label :soccerTournamentMostSuccesfull "en başarılı"@tr)
AnnotationAssertion(rdfs:label :soccerTournamentMostSuccesfull "most successfull"@en)
ObjectPropertyDomain(:soccerTournamentMostSuccesfull :SoccerTournament)
ObjectPropertyRange(:soccerTournamentMostSuccesfull :SoccerClub)
Declaration(ObjectProperty(:soccerTournamentOpeningSeason))
AnnotationAssertion(rdfs:label :soccerTournamentOpeningSeason "opening season"@en)
AnnotationAssertion(rdfs:label :soccerTournamentOpeningSeason "açılış sezonu"@tr)
ObjectPropertyDomain(:soccerTournamentOpeningSeason :SoccerTournament)
ObjectPropertyRange(:soccerTournamentOpeningSeason :SoccerTournament)
Declaration(ObjectProperty(:soccerTournamentThisSeason))
AnnotationAssertion(rdfs:label :soccerTournamentThisSeason "this season"@en)
AnnotationAssertion(rdfs:label :soccerTournamentThisSeason "bu sezon"@tr)
ObjectPropertyDomain(:soccerTournamentThisSeason :SoccerTournament)
ObjectPropertyRange(:soccerTournamentThisSeason :SoccerTournament)
Declaration(ObjectProperty(:soccerTournamentTopScorer))
AnnotationAssertion(rdfs:label :soccerTournamentTopScorer "en golcü"@tr)
AnnotationAssertion(rdfs:label :soccerTournamentTopScorer "top scorer"@en)
ObjectPropertyDomain(:soccerTournamentTopScorer :SoccerTournament)
ObjectPropertyRange(:soccerTournamentTopScorer :SoccerPlayer)
Declaration(ObjectProperty(:solicitorGeneral))
AnnotationAssertion(rdfs:label :solicitorGeneral "advocaat-generaal"@nl)
AnnotationAssertion(rdfs:comment :solicitorGeneral "de advocaat-generaal"@nl)
AnnotationAssertion(rdfs:comment :solicitorGeneral "high-ranking solicitor"@en)
AnnotationAssertion(rdfs:label :solicitorGeneral "solicitor general"@en)
ObjectPropertyDomain(:solicitorGeneral :LegalCase)
ObjectPropertyRange(:solicitorGeneral :Person)
Declaration(ObjectProperty(:source))
AnnotationAssertion(rdfs:label :source "source"@en)
AnnotationAssertion(rdfs:label :source "Quelle"@de)
AnnotationAssertion(rdfs:label :source "πηγή"@el)
Declaration(ObjectProperty(:sourceConfluence))
AnnotationAssertion(rdfs:label :sourceConfluence "πηγές"@el)
AnnotationAssertion(rdfs:label :sourceConfluence "lugar de nacimiento"@es)
AnnotationAssertion(rdfs:label :sourceConfluence "source confluence"@en)
ObjectPropertyDomain(:sourceConfluence :River)
Declaration(ObjectProperty(:sourceConfluenceCountry))
AnnotationAssertion(rdfs:label :sourceConfluenceCountry "source confluence country"@en)
ObjectPropertyDomain(:sourceConfluenceCountry :River)
ObjectPropertyRange(:sourceConfluenceCountry :Country)
Declaration(ObjectProperty(:sourceConfluenceMountain))
AnnotationAssertion(rdfs:label :sourceConfluenceMountain "source confluence mountain"@en)
ObjectPropertyDomain(:sourceConfluenceMountain :River)
ObjectPropertyRange(:sourceConfluenceMountain :Mountain)
Declaration(ObjectProperty(:sourceConfluencePlace))
AnnotationAssertion(rdfs:label :sourceConfluencePlace "source confluence place"@en)
ObjectPropertyDomain(:sourceConfluencePlace :River)
ObjectPropertyRange(:sourceConfluencePlace :Place)
Declaration(ObjectProperty(:sourceConfluencePosition))
AnnotationAssertion(rdfs:label :sourceConfluencePosition "source confluence position"@en)
ObjectPropertyDomain(:sourceConfluencePosition :River)
ObjectPropertyRange(:sourceConfluencePosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:sourceConfluenceRegion))
AnnotationAssertion(rdfs:label :sourceConfluenceRegion "source confluence region"@en)
ObjectPropertyDomain(:sourceConfluenceRegion :River)
ObjectPropertyRange(:sourceConfluenceRegion :Place)
Declaration(ObjectProperty(:sourceConfluenceState))
AnnotationAssertion(rdfs:label :sourceConfluenceState "source confluence state"@en)
ObjectPropertyDomain(:sourceConfluenceState :River)
ObjectPropertyRange(:sourceConfluenceState :PopulatedPlace)
Declaration(ObjectProperty(:sourceCountry))
AnnotationAssertion(rdfs:label :sourceCountry "source country"@en)
ObjectPropertyRange(:sourceCountry :Country)
Declaration(ObjectProperty(:sourceDistrict))
AnnotationAssertion(rdfs:label :sourceDistrict "source district"@en)
ObjectPropertyRange(:sourceDistrict :PopulatedPlace)
Declaration(ObjectProperty(:sourceMountain))
AnnotationAssertion(rdfs:label :sourceMountain "source mountain"@en)
ObjectPropertyRange(:sourceMountain :Mountain)
Declaration(ObjectProperty(:sourcePlace))
AnnotationAssertion(rdfs:label :sourcePlace "source place"@en)
ObjectPropertyRange(:sourcePlace :PopulatedPlace)
Declaration(ObjectProperty(:sourcePosition))
AnnotationAssertion(rdfs:label :sourcePosition "source position"@en)
ObjectPropertyRange(:sourcePosition <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>)
Declaration(ObjectProperty(:sourceRegion))
AnnotationAssertion(rdfs:label :sourceRegion "source region"@en)
ObjectPropertyRange(:sourceRegion :PopulatedPlace)
Declaration(ObjectProperty(:sourceState))
AnnotationAssertion(rdfs:label :sourceState "source state"@en)
ObjectPropertyRange(:sourceState :PopulatedPlace)
Declaration(ObjectProperty(:sovereignCountry))
AnnotationAssertion(rdfs:label :sovereignCountry "sovereignn country"@en)
ObjectPropertyDomain(:sovereignCountry :Place)
ObjectPropertyRange(:sovereignCountry :PopulatedPlace)
Declaration(ObjectProperty(:spacecraft))
AnnotationAssertion(rdfs:label :spacecraft "spacecraft"@en)
AnnotationAssertion(rdfs:label :spacecraft "véhicule spatial"@fr)
AnnotationAssertion(rdfs:label :spacecraft "διαστημόπλοιο"@el)
ObjectPropertyDomain(:spacecraft :SpaceMission)
ObjectPropertyRange(:spacecraft :Spacecraft)
Declaration(ObjectProperty(:specialEffects))
AnnotationAssertion(rdfs:label :specialEffects "special effects"@en)
AnnotationAssertion(rdfs:comment :specialEffects "the person who is responsible for the film special effects"@en)
ObjectPropertyDomain(:specialEffects :Film)
ObjectPropertyRange(:specialEffects :Person)
Declaration(ObjectProperty(:species))
AnnotationAssertion(rdfs:label :species "species"@en)
AnnotationAssertion(rdfs:label :species "種_(分類学)"@ja)
AnnotationAssertion(rdfs:label :species "soort"@nl)
ObjectPropertyDomain(:species :Species)
Declaration(ObjectProperty(:splitFromParty))
AnnotationAssertion(rdfs:label :splitFromParty "split from party"@en)
AnnotationAssertion(rdfs:label :splitFromParty "Abspaltung von Partei"@de)
ObjectPropertyDomain(:splitFromParty :PoliticalParty)
ObjectPropertyRange(:splitFromParty :PoliticalParty)
Declaration(ObjectProperty(:spokenIn))
AnnotationAssertion(rdfs:label :spokenIn "gesproken in"@nl)
AnnotationAssertion(rdfs:label :spokenIn "spoken in"@en)
ObjectPropertyDomain(:spokenIn :Language)
ObjectPropertyRange(:spokenIn :PopulatedPlace)
Declaration(ObjectProperty(:spokesperson))
AnnotationAssertion(rdfs:label :spokesperson "porta-voz"@pt)
AnnotationAssertion(rdfs:label :spokesperson "spokesperson"@en)
ObjectPropertyDomain(:spokesperson :PoliticalParty)
ObjectPropertyRange(:spokesperson :Person)
Declaration(ObjectProperty(:sport))
AnnotationAssertion(rdfs:label :sport "sport"@en)
AnnotationAssertion(rdfs:label :sport "άθλημα"@el)
AnnotationAssertion(rdfs:label :sport "sport"@fr)
ObjectPropertyRange(:sport :Sport)
Declaration(ObjectProperty(:sportCountry))
AnnotationAssertion(rdfs:comment :sportCountry "The country, for which the athlete is participating in championships"@en)
AnnotationAssertion(rdfs:comment :sportCountry "Das Land, für das der Sportler an Wettkämpfen teilnimmt"@de)
AnnotationAssertion(rdfs:label :sportCountry "sport country"@en)
AnnotationAssertion(rdfs:label :sportCountry "Sportnation"@de)
ObjectPropertyDomain(:sportCountry :Athlete)
ObjectPropertyRange(:sportCountry :Country)
Declaration(ObjectProperty(:sportDiscipline))
AnnotationAssertion(rdfs:label :sportDiscipline "tak van sport"@nl)
AnnotationAssertion(rdfs:label :sportDiscipline "sport discipline"@en)
AnnotationAssertion(rdfs:comment :sportDiscipline "the sport discipline the athlete practices, e.g. Diving, or that a board member of a sporting club is focussing at"@en)
AnnotationAssertion(rdfs:label :sportDiscipline "discipline sportive"@fr)
ObjectPropertyDomain(:sportDiscipline :Person)
ObjectPropertyRange(:sportDiscipline :Sport)
Declaration(ObjectProperty(:sportGoverningBody))
AnnotationAssertion(rdfs:label :sportGoverningBody "sport governing body"@en)
Declaration(ObjectProperty(:sportSpecialty))
AnnotationAssertion(rdfs:label :sportSpecialty "sport specialiteit"@nl)
AnnotationAssertion(rdfs:label :sportSpecialty "sport specialty"@en)
AnnotationAssertion(rdfs:comment :sportSpecialty "the sport specialty the athlete practices, e.g. 'Ring' for a men's artistic gymnastics athlete"@en)
ObjectPropertyDomain(:sportSpecialty :Athlete)
ObjectPropertyRange(:sportSpecialty :Sport)
Declaration(ObjectProperty(:spouse))
AnnotationAssertion(rdfs:label :spouse "echtgenoot"@nl)
AnnotationAssertion(rdfs:comment :spouse "the person they are married to"@en)
AnnotationAssertion(rdfs:label :spouse "配偶者"@ja)
AnnotationAssertion(rdfs:label :spouse "spouse"@en)
ObjectPropertyDomain(:spouse :Person)
ObjectPropertyRange(:spouse :Person)
Declaration(ObjectProperty(:spurOf))
AnnotationAssertion(rdfs:label :spurOf "spur of"@en)
ObjectPropertyDomain(:spurOf :Road)
ObjectPropertyRange(:spurOf :Road)
Declaration(ObjectProperty(:spurType))
AnnotationAssertion(rdfs:label :spurType "spur type"@en)
ObjectPropertyDomain(:spurType :Road)
Declaration(ObjectProperty(:stadium))
AnnotationAssertion(rdfs:label :stadium "Stadium"@en)
AnnotationAssertion(rdfs:label :stadium "στάδιο"@el)
ObjectPropertyRange(:stadium :Stadium)
Declaration(ObjectProperty(:starring))
AnnotationAssertion(rdfs:label :starring "starring"@en)
AnnotationAssertion(rdfs:label :starring "ηθοποιοί"@el)
AnnotationAssertion(rdfs:label :starring "met in de hoofdrol"@nl)
ObjectPropertyDomain(:starring :Work)
ObjectPropertyRange(:starring :Actor)
Declaration(ObjectProperty(:startPoint))
AnnotationAssertion(rdfs:label :startPoint "σημείο_αρχής"@el)
AnnotationAssertion(rdfs:label :startPoint "start point"@en)
ObjectPropertyDomain(:startPoint :Canal)
ObjectPropertyRange(:startPoint :Place)
Declaration(ObjectProperty(:state))
AnnotationAssertion(rdfs:label :state "staat"@nl)
AnnotationAssertion(rdfs:label :state "state"@en)
AnnotationAssertion(rdfs:label :state "νομός"@el)
ObjectPropertyRange(:state :PopulatedPlace)
Declaration(ObjectProperty(:stateDelegate))
AnnotationAssertion(rdfs:label :stateDelegate "state delegate"@en)
ObjectPropertyRange(:stateDelegate :Person)
Declaration(ObjectProperty(:stateOfOrigin))
AnnotationAssertion(rdfs:label :stateOfOrigin "state of origin"@en)
ObjectPropertyDomain(:stateOfOrigin :Person)
ObjectPropertyRange(:stateOfOrigin :Country)
Declaration(ObjectProperty(:statisticLabel))
AnnotationAssertion(rdfs:label :statisticLabel "statistic label"@en)
ObjectPropertyDomain(:statisticLabel :BaseballPlayer)
Declaration(ObjectProperty(:storyEditor))
AnnotationAssertion(rdfs:label :storyEditor "story editor"@en)
ObjectPropertyDomain(:storyEditor :TelevisionShow)
ObjectPropertyRange(:storyEditor :Person)
Declaration(ObjectProperty(:structuralSystem))
AnnotationAssertion(rdfs:label :structuralSystem "structural system"@en)
AnnotationAssertion(rdfs:label :structuralSystem "κατασκευαστικό σύστημα"@el)
AnnotationAssertion(rdfs:label :structuralSystem "bouwmethode"@nl)
ObjectPropertyDomain(:structuralSystem :Building)
Declaration(ObjectProperty(:student))
AnnotationAssertion(rdfs:label :student "diploma"@en)
ObjectPropertyDomain(:student :Person)
ObjectPropertyRange(:student :Person)
Declaration(ObjectProperty(:stylisticOrigin))
AnnotationAssertion(rdfs:label :stylisticOrigin "origens estilísticas"@pt)
AnnotationAssertion(rdfs:label :stylisticOrigin "stylistic origin"@en)
ObjectPropertyDomain(:stylisticOrigin :MusicGenre)
ObjectPropertyRange(:stylisticOrigin :MusicGenre)
Declaration(ObjectProperty(:subdivisionName))
AnnotationAssertion(rdfs:label :subdivisionName "subdivision name of the island"@en)
ObjectPropertyDomain(:subdivisionName :Island)
ObjectPropertyRange(:subdivisionName :Place)
Declaration(ObjectProperty(:subprefecture))
AnnotationAssertion(rdfs:label :subprefecture "subprefecture"@en)
ObjectPropertyDomain(:subprefecture :Department)
ObjectPropertyRange(:subprefecture :PopulatedPlace)
Declaration(ObjectProperty(:subregion))
AnnotationAssertion(rdfs:label :subregion "subregion"@en)
ObjectPropertyDomain(:subregion :Place)
ObjectPropertyRange(:subregion :Place)
Declaration(ObjectProperty(:subsequentInfrastructure))
AnnotationAssertion(rdfs:label :subsequentInfrastructure "subsequent infrastructure"@en)
AnnotationAssertion(rdfs:label :subsequentInfrastructure "volgende infrastructuur"@nl)
ObjectPropertyDomain(:subsequentInfrastructure :Infrastructure)
ObjectPropertyRange(:subsequentInfrastructure :Infrastructure)
Declaration(ObjectProperty(:subsequentWork))
AnnotationAssertion(rdfs:label :subsequentWork "επόμενη δημιουργία"@el)
AnnotationAssertion(rdfs:label :subsequentWork "subsequent work"@en)
AnnotationAssertion(rdfs:label :subsequentWork "vervolg werk"@nl)
ObjectPropertyDomain(:subsequentWork :Work)
ObjectPropertyRange(:subsequentWork :Work)
Declaration(ObjectProperty(:subsidiary))
AnnotationAssertion(rdfs:label :subsidiary "subsidiary"@en)
AnnotationAssertion(rdfs:label :subsidiary "treinador"@pt)
ObjectPropertyDomain(:subsidiary :Company)
ObjectPropertyRange(:subsidiary :Company)
Declaration(ObjectProperty(:successor))
AnnotationAssertion(rdfs:label :successor "opvolger"@nl)
AnnotationAssertion(rdfs:label :successor "Nachfolger"@de)
AnnotationAssertion(rdfs:label :successor "successor"@en)
AnnotationAssertion(rdfs:label :successor "後任者"@ja)
Declaration(ObjectProperty(:summerAppearances))
AnnotationAssertion(rdfs:label :summerAppearances "summer appearances"@en)
ObjectPropertyDomain(:summerAppearances :OlympicResult)
ObjectPropertyRange(:summerAppearances :OlympicResult)
Declaration(ObjectProperty(:superintendent))
AnnotationAssertion(rdfs:label :superintendent "opzichter"@nl)
AnnotationAssertion(rdfs:label :superintendent "superintendent"@en)
ObjectPropertyDomain(:superintendent :Organisation)
ObjectPropertyRange(:superintendent :Person)
Declaration(ObjectProperty(:supplies))
AnnotationAssertion(rdfs:label :supplies "παροχές"@el)
AnnotationAssertion(rdfs:label :supplies "supplies"@en)
ObjectPropertyDomain(:supplies :Artery)
ObjectPropertyRange(:supplies :AnatomicalStructure)
Declaration(ObjectProperty(:systemOfLaw))
AnnotationAssertion(rdfs:label :systemOfLaw "rechtssysteem"@nl)
AnnotationAssertion(rdfs:label :systemOfLaw "system of law"@en)
AnnotationAssertion(rdfs:comment :systemOfLaw "A referral to the relevant system of law"@en)
ObjectPropertyDomain(:systemOfLaw :LegalCase)
ObjectPropertyRange(:systemOfLaw :SystemOfLaw)
Declaration(ObjectProperty(:taoiseach))
AnnotationAssertion(rdfs:comment :taoiseach "head of government of Ireland"@en)
AnnotationAssertion(rdfs:label :taoiseach "taoiseach"@en)
ObjectPropertyRange(:taoiseach :Person)
Declaration(ObjectProperty(:targetAirport))
AnnotationAssertion(rdfs:label :targetAirport "target airport"@en)
ObjectPropertyDomain(:targetAirport :Airline)
ObjectPropertyRange(:targetAirport :Airport)
Declaration(ObjectProperty(:targetSpaceStation))
AnnotationAssertion(rdfs:label :targetSpaceStation "target space station station"@en)
ObjectPropertyDomain(:targetSpaceStation :Spacecraft)
ObjectPropertyRange(:targetSpaceStation :SpaceStation)
Declaration(ObjectProperty(:teachingStaff))
AnnotationAssertion(rdfs:label :teachingStaff "teaching staff"@en)
ObjectPropertyDomain(:teachingStaff :School)
Declaration(ObjectProperty(:team))
AnnotationAssertion(rdfs:label :team "ομάδα"@el)
AnnotationAssertion(rdfs:label :team "équipe"@fr)
AnnotationAssertion(rdfs:label :team "team"@nl)
AnnotationAssertion(rdfs:label :team "team"@en)
EquivalentObjectProperties(:team :club)
ObjectPropertyDomain(:team <http://dbpedia.org/ontology/Athlete,_CareerStation>)
ObjectPropertyRange(:team :SportsTeam)
Declaration(ObjectProperty(:televisionSeries))
AnnotationAssertion(rdfs:label :televisionSeries "television series"@en)
AnnotationAssertion(rdfs:label :televisionSeries "τηλεοπτικές σειρές"@el)
ObjectPropertyRange(:televisionSeries :TelevisionShow)
Declaration(ObjectProperty(:tenant))
AnnotationAssertion(rdfs:label :tenant "tenant"@en)
AnnotationAssertion(rdfs:label :tenant "huurder"@nl)
AnnotationAssertion(rdfs:label :tenant "ενοικιαστής"@el)
AnnotationAssertion(rdfs:label :tenant "locataire"@fr)
ObjectPropertyDomain(:tenant :Building)
ObjectPropertyRange(:tenant :Organisation)
Declaration(ObjectProperty(:termPeriod))
AnnotationAssertion(rdfs:label :termPeriod "χρονική περίοδος"@el)
AnnotationAssertion(rdfs:label :termPeriod "term period"@en)
ObjectPropertyRange(:termPeriod :TimePeriod)
Declaration(ObjectProperty(:territory))
AnnotationAssertion(rdfs:label :territory "territory"@en)
AnnotationAssertion(rdfs:label :territory "territorio"@es)
ObjectPropertyDomain(:territory :MilitaryConflict)
ObjectPropertyRange(:territory :PopulatedPlace)
Declaration(ObjectProperty(:terytCode))
AnnotationAssertion(rdfs:label :terytCode "TERYT code"@en)
AnnotationAssertion(rdfs:comment :terytCode "indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities"@en)
AnnotationAssertion(rdfs:label :terytCode "kod TERYT"@pl)
ObjectPropertyDomain(:terytCode :PopulatedPlace)
Declaration(ObjectProperty(:thirdCommander))
AnnotationAssertion(rdfs:label :thirdCommander "third commander"@en)
ObjectPropertyDomain(:thirdCommander :MilitaryUnit)
ObjectPropertyRange(:thirdCommander :Person)
Declaration(ObjectProperty(:thirdDriver))
AnnotationAssertion(rdfs:label :thirdDriver "third driver"@en)
ObjectPropertyDomain(:thirdDriver :GrandPrix)
ObjectPropertyRange(:thirdDriver :Person)
Declaration(ObjectProperty(:thirdDriverCountry))
AnnotationAssertion(rdfs:label :thirdDriverCountry "third driver country"@en)
ObjectPropertyDomain(:thirdDriverCountry :GrandPrix)
ObjectPropertyRange(:thirdDriverCountry :Country)
Declaration(ObjectProperty(:thirdTeam))
AnnotationAssertion(rdfs:label :thirdTeam "third team"@en)
AnnotationAssertion(rdfs:label :thirdTeam "τρίτη ομάδα"@el)
ObjectPropertyDomain(:thirdTeam :GrandPrix)
ObjectPropertyRange(:thirdTeam :SportsTeam)
Declaration(ObjectProperty(:thumbnail))
AnnotationAssertion(rdfs:label :thumbnail "thumbnail"@en)
AnnotationAssertion(rdfs:comment :thumbnail "Reserved for DBpedia."@en)
Declaration(ObjectProperty(:timeZone))
AnnotationAssertion(rdfs:label :timeZone "time zone"@en)
AnnotationAssertion(rdfs:label :timeZone "fuseau horaire"@fr)
AnnotationAssertion(rdfs:label :timeZone "huso horario"@es)
AnnotationAssertion(rdfs:label :timeZone "ζώνη_ώρας1"@el)
AnnotationAssertion(rdfs:label :timeZone "strefa czasowa"@pl)
AnnotationAssertion(rdfs:label :timeZone "zona horària"@ca)
AnnotationAssertion(rdfs:label :timeZone "tijdzone"@nl)
AnnotationAssertion(rdfs:label :timeZone "fuso horario"@pt)
ObjectPropertyDomain(:timeZone :Place)
Declaration(ObjectProperty(:tonyAward))
AnnotationAssertion(rdfs:label :tonyAward "Tony Award"@en)
ObjectPropertyDomain(:tonyAward :Artist)
ObjectPropertyRange(:tonyAward :Award)
Declaration(ObjectProperty(:torchBearer))
AnnotationAssertion(rdfs:label :torchBearer "torch bearer"@en)
ObjectPropertyDomain(:torchBearer :Olympics)
ObjectPropertyRange(:torchBearer :Person)
Declaration(ObjectProperty(:touristicSite))
AnnotationAssertion(rdfs:label :touristicSite "touristic site"@en)
ObjectPropertyDomain(:touristicSite :PopulatedPlace)
ObjectPropertyRange(:touristicSite :Place)
Declaration(ObjectProperty(:tradeMark))
AnnotationAssertion(rdfs:label :tradeMark "Marca"@es)
AnnotationAssertion(rdfs:label :tradeMark "TradeMark"@en)
Declaration(ObjectProperty(:trainer))
AnnotationAssertion(rdfs:label :trainer "trainer"@nl)
AnnotationAssertion(rdfs:label :trainer "εκπαιδευτής"@el)
AnnotationAssertion(rdfs:label :trainer "trainer"@en)
AnnotationAssertion(rdfs:label :trainer "entraîneur"@fr)
ObjectPropertyDomain(:trainer :Athlete)
ObjectPropertyRange(:trainer :Person)
Declaration(ObjectProperty(:trainerClub))
AnnotationAssertion(rdfs:label :trainerClub "trainer club"@en)
ObjectPropertyDomain(:trainerClub :SoccerPlayer)
ObjectPropertyRange(:trainerClub :SportsTeam)
Declaration(ObjectProperty(:training))
AnnotationAssertion(rdfs:label :training "προπόνηση"@el)
AnnotationAssertion(rdfs:label :training "training"@en)
ObjectPropertyDomain(:training :Artist)
ObjectPropertyRange(:training :EducationalInstitution)
Declaration(ObjectProperty(:translator))
AnnotationAssertion(rdfs:label :translator "μεταφραστής"@el)
AnnotationAssertion(rdfs:label :translator "vertaler"@nl)
AnnotationAssertion(rdfs:label :translator "traducteur"@fr)
AnnotationAssertion(rdfs:label :translator "translator"@en)
AnnotationAssertion(rdfs:comment :translator "Translator(s), if original not in English"@en)
ObjectPropertyDomain(:translator :Work)
ObjectPropertyRange(:translator :Person)
Declaration(ObjectProperty(:trustee))
AnnotationAssertion(rdfs:label :trustee "trustee"@en)
ObjectPropertyDomain(:trustee :Organisation)
ObjectPropertyRange(:trustee :Person)
Declaration(ObjectProperty(:tvShow))
AnnotationAssertion(rdfs:label :tvShow "tvShow"@en)
ObjectPropertyDomain(:tvShow :FictionalCharacter)
ObjectPropertyRange(:tvShow :TelevisionShow)
Declaration(ObjectProperty(:twinCity))
AnnotationAssertion(rdfs:label :twinCity "twin city"@en)
AnnotationAssertion(rdfs:label :twinCity "tweeling stad"@nl)
ObjectPropertyDomain(:twinCity :Settlement)
ObjectPropertyRange(:twinCity :Settlement)
Declaration(ObjectProperty(:twinCountry))
AnnotationAssertion(rdfs:label :twinCountry "twin country"@en)
ObjectPropertyDomain(:twinCountry :Country)
ObjectPropertyRange(:twinCountry :Country)
Declaration(ObjectProperty(:type))
AnnotationAssertion(rdfs:label :type "type"@nl)
AnnotationAssertion(rdfs:label :type "τύπος"@el)
AnnotationAssertion(rdfs:label :type "type"@en)
Declaration(ObjectProperty(:typeOfElectrification))
AnnotationAssertion(rdfs:label :typeOfElectrification "Art der Elektrifizierung"@de)
AnnotationAssertion(rdfs:comment :typeOfElectrification "Electrification system (e.g. Third rail, Overhead catenary)."@en)
AnnotationAssertion(rdfs:label :typeOfElectrification "type of electrification"@en)
ObjectPropertyDomain(:typeOfElectrification :RouteOfTransportation)
Declaration(ObjectProperty(:uRN))
AnnotationAssertion(rdfs:comment :uRN "DfE unique reference number of a school in England or Wales"@en)
AnnotationAssertion(rdfs:label :uRN "unique reference number (URN)"@en)
ObjectPropertyDomain(:uRN :School)
Declaration(ObjectProperty(:unesco))
AnnotationAssertion(rdfs:label :unesco "unesco"@en)
ObjectPropertyDomain(:unesco :Place)
ObjectPropertyRange(:unesco :PopulatedPlace)
Declaration(ObjectProperty(:unitaryAuthority))
AnnotationAssertion(rdfs:label :unitaryAuthority "unitary authority"@en)
ObjectPropertyDomain(:unitaryAuthority :PopulatedPlace)
ObjectPropertyRange(:unitaryAuthority :PopulatedPlace)
Declaration(ObjectProperty(:university))
AnnotationAssertion(rdfs:comment :university "university a person goes or went to"@en)
AnnotationAssertion(rdfs:label :university "university"@en)
AnnotationAssertion(rdfs:label :university "大学"@ja)
ObjectPropertyDomain(:university :Person)
ObjectPropertyRange(:university :EducationalInstitution)
Declaration(ObjectProperty(:usedInWar))
AnnotationAssertion(rdfs:label :usedInWar "used in war"@en)
AnnotationAssertion(rdfs:comment :usedInWar "wars that were typical for the usage of a weapon"@en)
ObjectPropertyDomain(:usedInWar :Weapon)
ObjectPropertyRange(:usedInWar :MilitaryConflict)
Declaration(ObjectProperty(:uses))
AnnotationAssertion(rdfs:label :uses "uses"@en)
Declaration(ObjectProperty(:usingCountry))
AnnotationAssertion(rdfs:label :usingCountry "using country"@en)
ObjectPropertyDomain(:usingCountry :Currency)
ObjectPropertyRange(:usingCountry :Country)
AnnotationAssertion(rdfs:label :valvetrain "valvetrain"@en)
ObjectPropertyRange(:valvetrain <http://dbpedia.org/datatype/valvetrain>)
Declaration(ObjectProperty(:variantOf))
AnnotationAssertion(rdfs:comment :variantOf "variant or variation of something, for example the variant of a car"@en)
AnnotationAssertion(rdfs:label :variantOf "variant"@nl)
AnnotationAssertion(rdfs:label :variantOf "variant or variation"@en)
Declaration(ObjectProperty(:varietals))
AnnotationAssertion(rdfs:label :varietals "varietals"@en)
ObjectPropertyDomain(:varietals :WineRegion)
Declaration(ObjectProperty(:vehicle))
AnnotationAssertion(rdfs:comment :vehicle "vehicle that uses a specific automobile platform"@en)
AnnotationAssertion(rdfs:label :vehicle "vehicle"@en)
AnnotationAssertion(rdfs:comment :vehicle "όχημα που χρησιμοποιεί μια συγκεκριμένη πλατφόρμα αυτοκινήτων"@el)
AnnotationAssertion(rdfs:label :vehicle "όχημα"@el)
AnnotationAssertion(rdfs:label :vehicle "Vehikel"@de)
ObjectPropertyRange(:vehicle :Automobile)
Declaration(ObjectProperty(:vein))
AnnotationAssertion(rdfs:label :vein "vein"@en)
ObjectPropertyDomain(:vein :AnatomicalStructure)
ObjectPropertyRange(:vein :Vein)
Declaration(ObjectProperty(:veneratedIn))
AnnotationAssertion(rdfs:label :veneratedIn "vereerd in"@nl)
AnnotationAssertion(rdfs:label :veneratedIn "venerated in"@en)
ObjectPropertyDomain(:veneratedIn :Saint)
ObjectPropertyRange(:veneratedIn :Organisation)
Declaration(ObjectProperty(:viceChancellor))
AnnotationAssertion(rdfs:label :viceChancellor "Vizekanzler"@de)
AnnotationAssertion(rdfs:label :viceChancellor "vice chancellor"@en)
ObjectPropertyRange(:viceChancellor :Person)
Declaration(ObjectProperty(:viceLeader))
AnnotationAssertion(rdfs:label :viceLeader "vice leader"@en)
AnnotationAssertion(rdfs:label :viceLeader "vicelider"@pt)
ObjectPropertyDomain(:viceLeader :PopulatedPlace)
ObjectPropertyRange(:viceLeader :Person)
Declaration(ObjectProperty(:viceLeaderParty))
AnnotationAssertion(rdfs:label :viceLeaderParty "vice leader party"@en)
AnnotationAssertion(rdfs:label :viceLeaderParty "partido do vicelider"@pt)
ObjectPropertyDomain(:viceLeaderParty :PopulatedPlace)
ObjectPropertyRange(:viceLeaderParty :PoliticalParty)
Declaration(ObjectProperty(:vicePresident))
AnnotationAssertion(rdfs:label :vicePresident "vice president"@en)
AnnotationAssertion(rdfs:label :vicePresident "Vizepräsident"@de)
ObjectPropertyRange(:vicePresident :Person)
Declaration(ObjectProperty(:vicePrimeMinister))
AnnotationAssertion(rdfs:label :vicePrimeMinister "vice premier"@nl)
AnnotationAssertion(rdfs:label :vicePrimeMinister "vice prime minister"@en)
ObjectPropertyRange(:vicePrimeMinister :Person)
Declaration(ObjectProperty(:vicePrincipal))
AnnotationAssertion(rdfs:label :vicePrincipal "vice principal"@en)
ObjectPropertyDomain(:vicePrincipal :School)
ObjectPropertyRange(:vicePrincipal :Person)
Declaration(ObjectProperty(:vicePrincipalLabel))
AnnotationAssertion(rdfs:label :vicePrincipalLabel "vice principal label"@en)
ObjectPropertyDomain(:vicePrincipalLabel :School)
Declaration(ObjectProperty(:voice))
AnnotationAssertion(rdfs:label :voice "voice"@en)
ObjectPropertyDomain(:voice <http://dbpedia.org/ontology/TelevisionShow,_FictionalCharacter>)
ObjectPropertyRange(:voice :Person)
Declaration(ObjectProperty(:voiceType))
AnnotationAssertion(rdfs:comment :voiceType "voice type of a singer or an actor"@en)
AnnotationAssertion(rdfs:label :voiceType "stemtype"@nl)
AnnotationAssertion(rdfs:label :voiceType "voice type"@en)
ObjectPropertyDomain(:voiceType :Artist)
Declaration(ObjectProperty(:volumes))
AnnotationAssertion(rdfs:label :volumes "volumes"@en)
AnnotationAssertion(rdfs:label :volumes "delen"@nl)
ObjectPropertyDomain(:volumes :MultiVolumePublication)
ObjectPropertyRange(:volumes :WrittenWork)
Declaration(ObjectProperty(:waterwayThroughTunnel))
AnnotationAssertion(rdfs:comment :waterwayThroughTunnel "Waterway that goes through the tunnel."@en)
AnnotationAssertion(rdfs:label :waterwayThroughTunnel "waterway through tunnel"@en)
AnnotationAssertion(rdfs:label :waterwayThroughTunnel "Wasserweg durch Tunnel"@de)
ObjectPropertyDomain(:waterwayThroughTunnel :WaterwayTunnel)
Declaration(ObjectProperty(:webcast))
AnnotationAssertion(rdfs:label :webcast "webcast"@nl)
AnnotationAssertion(rdfs:comment :webcast "The URL to the webcast of the Thing."@en)
AnnotationAssertion(rdfs:label :webcast "webcast"@en)
Declaration(ObjectProperty(:whaDraftTeam))
AnnotationAssertion(rdfs:label :whaDraftTeam "wha draft team"@en)
ObjectPropertyDomain(:whaDraftTeam :IceHockeyPlayer)
ObjectPropertyRange(:whaDraftTeam :HockeyTeam)
Declaration(ObjectProperty(:wikiPageDisambiguates))
AnnotationAssertion(rdfs:comment :wikiPageDisambiguates "Reserved for DBpedia."@en)
AnnotationAssertion(rdfs:label :wikiPageDisambiguates "Wikipage disambiguates"@en)
Declaration(ObjectProperty(:wikiPageExternalLink))
AnnotationAssertion(rdfs:label :wikiPageExternalLink "Link from a Wikipage to an external page"@en)
AnnotationAssertion(rdfs:comment :wikiPageExternalLink "Reserved for DBpedia."@en)
Declaration(ObjectProperty(:wikiPageInterLanguageLink))
AnnotationAssertion(rdfs:label :wikiPageInterLanguageLink "Link from a Wikipage to a Wikipage in a different language about the same or a related subject."@en)
AnnotationAssertion(rdfs:comment :wikiPageInterLanguageLink "Reserved for DBpedia."@en)
Declaration(ObjectProperty(:wikiPageRedirects))
AnnotationAssertion(rdfs:label :wikiPageRedirects "Wikipage redirect"@en)
AnnotationAssertion(rdfs:comment :wikiPageRedirects "Reserved for DBpedia."@en)
Declaration(ObjectProperty(:wikiPageWikiLink))
AnnotationAssertion(rdfs:comment :wikiPageWikiLink "Reserved for DBpedia."@en)
AnnotationAssertion(rdfs:label :wikiPageWikiLink "Link from a Wikipage to another Wikipage"@en)
Declaration(ObjectProperty(:wilaya))
AnnotationAssertion(rdfs:label :wilaya "wilaya"@en)
ObjectPropertyRange(:wilaya :Place)
Declaration(ObjectProperty(:wineProduced))
AnnotationAssertion(rdfs:label :wineProduced "wine produced"@en)
ObjectPropertyDomain(:wineProduced :WineRegion)
Declaration(ObjectProperty(:wineRegion))
AnnotationAssertion(rdfs:label :wineRegion "wine region"@en)
ObjectPropertyDomain(:wineRegion :Grape)
ObjectPropertyRange(:wineRegion :WineRegion)
Declaration(ObjectProperty(:winsAtAlpg))
AnnotationAssertion(rdfs:label :winsAtAlpg "wins at ALPG"@en)
ObjectPropertyDomain(:winsAtAlpg :GolfPlayer)
Declaration(ObjectProperty(:winsAtAsia))
AnnotationAssertion(rdfs:label :winsAtAsia "wins at ASIA"@en)
ObjectPropertyDomain(:winsAtAsia :GolfPlayer)
Declaration(ObjectProperty(:winsAtAus))
AnnotationAssertion(rdfs:label :winsAtAus "wins at AUS"@en)
ObjectPropertyDomain(:winsAtAus :GolfPlayer)
Declaration(ObjectProperty(:winsAtChallenges))
AnnotationAssertion(rdfs:label :winsAtChallenges "wins at challenges"@en)
ObjectPropertyDomain(:winsAtChallenges :GolfPlayer)
Declaration(ObjectProperty(:winsAtChampionships))
AnnotationAssertion(rdfs:label :winsAtChampionships "wins at championships"@en)
ObjectPropertyDomain(:winsAtChampionships :GolfPlayer)
Declaration(ObjectProperty(:winsAtJLPGA))
AnnotationAssertion(rdfs:label :winsAtJLPGA "wins at JLPGA"@en)
ObjectPropertyDomain(:winsAtJLPGA :GolfPlayer)
Declaration(ObjectProperty(:winsAtJapan))
AnnotationAssertion(rdfs:label :winsAtJapan "wins at japan"@en)
ObjectPropertyDomain(:winsAtJapan :GolfPlayer)
Declaration(ObjectProperty(:winsAtKLPGA))
AnnotationAssertion(rdfs:label :winsAtKLPGA "wins at KLPGA"@en)
ObjectPropertyDomain(:winsAtKLPGA :GolfPlayer)
Declaration(ObjectProperty(:winsAtLAGT))
AnnotationAssertion(rdfs:label :winsAtLAGT "wins at LAGT"@en)
ObjectPropertyDomain(:winsAtLAGT :GolfPlayer)
Declaration(ObjectProperty(:winsAtLET))
AnnotationAssertion(rdfs:label :winsAtLET "wins at LET"@en)
ObjectPropertyDomain(:winsAtLET :GolfPlayer)
Declaration(ObjectProperty(:winsAtLPGA))
AnnotationAssertion(rdfs:label :winsAtLPGA "wins at LPGA"@en)
ObjectPropertyDomain(:winsAtLPGA :GolfPlayer)
Declaration(ObjectProperty(:winsAtMajors))
AnnotationAssertion(rdfs:label :winsAtMajors "wins at majors"@en)
ObjectPropertyDomain(:winsAtMajors :GolfPlayer)
Declaration(ObjectProperty(:winsAtNWIDE))
AnnotationAssertion(rdfs:label :winsAtNWIDE "wins at NWIDE"@en)
ObjectPropertyDomain(:winsAtNWIDE :GolfPlayer)
Declaration(ObjectProperty(:winsAtOtherTournaments))
AnnotationAssertion(rdfs:label :winsAtOtherTournaments "wins at other tournaments"@en)
ObjectPropertyDomain(:winsAtOtherTournaments :GolfPlayer)
Declaration(ObjectProperty(:winsAtPGA))
AnnotationAssertion(rdfs:label :winsAtPGA "wins at pga"@en)
ObjectPropertyDomain(:winsAtPGA :GolfPlayer)
Declaration(ObjectProperty(:winsAtProTournaments))
AnnotationAssertion(rdfs:label :winsAtProTournaments "wins at pro tournaments"@en)
ObjectPropertyDomain(:winsAtProTournaments :GolfPlayer)
Declaration(ObjectProperty(:winsAtSenEuro))
AnnotationAssertion(rdfs:label :winsAtSenEuro "wins at Senior Euro"@en)
ObjectPropertyDomain(:winsAtSenEuro :GolfPlayer)
Declaration(ObjectProperty(:winsAtSun))
AnnotationAssertion(rdfs:label :winsAtSun "wins at sun"@en)
ObjectPropertyDomain(:winsAtSun :GolfPlayer)
Declaration(ObjectProperty(:winsInEurope))
AnnotationAssertion(rdfs:label :winsInEurope "wins in Europe"@en)
AnnotationAssertion(rdfs:label :winsInEurope "Siege in Europa"@de)
ObjectPropertyDomain(:winsInEurope :GolfPlayer)
Declaration(ObjectProperty(:winterAppearances))
AnnotationAssertion(rdfs:label :winterAppearances "winter appearances"@en)
ObjectPropertyDomain(:winterAppearances :OlympicResult)
ObjectPropertyRange(:winterAppearances :OlympicResult)
Declaration(ObjectProperty(:writer))
AnnotationAssertion(rdfs:label :writer "scrittore"@it)
AnnotationAssertion(rdfs:label :writer "writer"@en)
AnnotationAssertion(rdfs:label :writer "schriftsteller"@de)
AnnotationAssertion(rdfs:label :writer "schrijver"@nl)
AnnotationAssertion(rdfs:label :writer "σεναριογράφος"@el)
ObjectPropertyDomain(:writer :Work)
ObjectPropertyRange(:writer :Person)
Declaration(ObjectProperty(:youthClub))
AnnotationAssertion(rdfs:label :youthClub "youth club"@en)
AnnotationAssertion(rdfs:label :youthClub "jeugdclub"@nl)
ObjectPropertyDomain(:youthClub :Athlete)
ObjectPropertyRange(:youthClub :SportsTeam)
Declaration(ObjectProperty(:youthWing))
AnnotationAssertion(rdfs:label :youthWing "ala jovem"@pt)
AnnotationAssertion(rdfs:label :youthWing "youth wing"@en)
ObjectPropertyDomain(:youthWing :PoliticalParty)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Astronaut/timeInSpace> "time in space (m)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Astronaut/timeInSpace> <http://dbpedia.org/datatype/minute>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Automobile/fuelCapacity> "fuel capacity (l)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Automobile/fuelCapacity> <http://dbpedia.org/datatype/litre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Automobile/wheelbase> "wheelbase (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Automobile/wheelbase> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "acceleration (s)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "Beschleunigung (s)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "επιτάχυνση (s)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/acceleration> <http://dbpedia.org/datatype/second>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/co2Emission> "CO2 emission (g/km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/co2Emission> <http://dbpedia.org/datatype/gramPerKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/cylinderBore> "cylinder bore (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/cylinderBore> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diamètre (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diameter (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diameter (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "διάμετρος (mm)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/diameter> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/displacement> "displacement (cc)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/displacement> <http://dbpedia.org/datatype/cubicCentimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "Höhe (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "altura (mm)"@pt)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/height> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "longueur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "Länge (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "length (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/length> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/pistonStroke> "piston stroke (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/pistonStroke> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/powerOutput> "power output (kW)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/powerOutput> <http://dbpedia.org/datatype/kilowatt>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/topSpeed> "top speed (kmh)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/topSpeed> "Höchstgeschwindigkeit (kmh)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/topSpeed> <http://dbpedia.org/datatype/kilometrePerHour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/torqueOutput> "torque output (Nm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/torqueOutput> <http://dbpedia.org/datatype/newtonMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "poids (kg)"@fr)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/weight> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "Breite (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "width (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/AutomobileEngine/width> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "floor area (m2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "περιοχή ορόφων (m2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "vloeroppervlak (m2)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/Building/floorArea> <http://dbpedia.org/datatype/squareMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatBeam> "μέγιστο_πλάτος_πλοίου (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatBeam> "maximum boat beam (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Canal/maximumBoatBeam> <http://dbpedia.org/datatype/metre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatLength> "maximum boat length (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatLength> "μέγιστο_μήκος_πλοίου (μ)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Canal/maximumBoatLength> <http://dbpedia.org/datatype/metre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/originalMaximumBoatBeam> "original maximum boat beam (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Canal/originalMaximumBoatBeam> <http://dbpedia.org/datatype/metre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/originalMaximumBoatLength> "original maximum boat length (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Canal/originalMaximumBoatLength> <http://dbpedia.org/datatype/metre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "沸点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "point d'ébullition (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "Siedepunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "boiling point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "σημείο βρασμού (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "kookpunt (K)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "Dichte (μ3)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "density (μ3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "πυκνότητα (μ3)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/ChemicalSubstance/density> <http://dbpedia.org/datatype/kilogramPerCubicMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "Schmelzpunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "point de fusion (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "melting point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "融点 (K)"@ja)
ObjectPropertyRange(<http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "Siedepunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "point d'ébullition (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "boiling point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "kookpunt (K)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "沸点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "σημείο βρασμού (K)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Drug/boilingPoint> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "Schmelzpunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "融点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "melting point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "point de fusion (K)"@fr)
ObjectPropertyRange(<http://dbpedia.org/ontology/Drug/meltingPoint> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/apoapsis> "apoapsis (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/apoapsis> "απόαψης (km)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/apoapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "average speed (km/s)"@en)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Galaxy/averageSpeed> "Η μέση ταχύτητα ενός πράγματος."@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "μέση ταχύτητα (km/s)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "Durchschnittsgeschwindigkeit (km/s)"@de)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Galaxy/averageSpeed> "The average speed of a thing."@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/averageSpeed> <http://dbpedia.org/datatype/kilometrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "Dichte (μ3)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "πυκνότητα (μ3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "density (μ3)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/density> <http://dbpedia.org/datatype/kilogramPerCubicMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/mass> "μάζα (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/mass> "mass (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/mass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/maximumTemperature> "maximum temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/maximumTemperature> "μέγιστη θερμοκρασία (K)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/maximumTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanRadius> "mean radius (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanRadius> "μέση ακτίνα (km)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/meanRadius> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanTemperature> "mean temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanTemperature> "μέση θερμοκρασία (K)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/meanTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/minimumTemperature> "ελάχιστη θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/minimumTemperature> "minimum temperature (K)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/minimumTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/orbitalPeriod> "orbital period (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/orbitalPeriod> "Περίοδος περιφοράς (μ)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/orbitalPeriod> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/periapsis> "periapsis (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/periapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/surfaceArea> "έκταση (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/surfaceArea> "surface area (km2)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/surfaceArea> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "température (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "temperature (K)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/temperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "όγκος (km3)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Galaxy/volume> <http://dbpedia.org/datatype/cubicKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> "area metro (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> "περιοχή μετρό (km2)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "Bevölkerungsdichte (/sqkm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "πυκνότητα_πληθυσμού (/sqkm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "population density (/sqkm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "bevolkingsdichtheid (/sqkm)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> <http://dbpedia.org/datatype/inhabitantsPerSquareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/course> "course (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/GrandPrix/course> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/distance> "distance (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/distance> "Entfernung (km)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/GrandPrix/distance> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "lengte (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "longueur (km)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "Länge (km)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "length (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "μήκος (km)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Infrastructure/length> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/areaOfCatchment> "area of catchment (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/areaOfCatchment> "λίμνη (km2)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Lake/areaOfCatchment> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/shoreLength> "μήκος_όχθης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/shoreLength> "shore length (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Lake/shoreLength> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "όγκος (μ³)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/Lake/volume> <http://dbpedia.org/datatype/cubicMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diameter (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diamètre (km)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diameter (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "διάμετρος (km)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/LunarCrater/diameter> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diamètre (μ)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "διάμετρος (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diameter (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diameter (μ)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/diameter> <http://dbpedia.org/datatype/metre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "Höhe (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "altura (mm)"@pt)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/height> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "length (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "longueur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "Länge (mm)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/length> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/mass> "μάζα (kg)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/mass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "体重 (kg)"@ja)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/weight> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "width (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "Breite (mm)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/MeanOfTransportation/width> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "višina (cm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "身長 (cm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "altura (cm)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "ύψος (cm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "hoogte (cm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "height (cm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "Höhe (cm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "hauteur (cm)"@fr)
ObjectPropertyRange(<http://dbpedia.org/ontology/Person/height> <http://dbpedia.org/datatype/centimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "peso (kg)"@pt)
ObjectPropertyRange(<http://dbpedia.org/ontology/Person/weight> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/apoapsis> "απόαψης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/apoapsis> "apoapsis (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/apoapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Planet/averageSpeed> "The average speed of a thing."@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "μέση ταχύτητα (km/s)"@el)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Planet/averageSpeed> "Η μέση ταχύτητα ενός πράγματος."@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "Durchschnittsgeschwindigkeit (km/s)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "average speed (km/s)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/averageSpeed> <http://dbpedia.org/datatype/kilometrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "density (μ3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "πυκνότητα (μ3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "Dichte (μ3)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/density> <http://dbpedia.org/datatype/kilogramPerCubicMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/mass> "μάζα (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/mass> "mass (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/mass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/maximumTemperature> "μέγιστη θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/maximumTemperature> "maximum temperature (K)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/maximumTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanRadius> "mean radius (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanRadius> "μέση ακτίνα (km)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/meanRadius> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanTemperature> "mean temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanTemperature> "μέση θερμοκρασία (K)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/meanTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/minimumTemperature> "minimum temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/minimumTemperature> "ελάχιστη θερμοκρασία (K)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/minimumTemperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/orbitalPeriod> "Περίοδος περιφοράς (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/orbitalPeriod> "orbital period (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/orbitalPeriod> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/periapsis> "periapsis (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/periapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/surfaceArea> "surface area (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/surfaceArea> "έκταση (km2)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/surfaceArea> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "température (K)"@fr)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/temperature> <http://dbpedia.org/datatype/kelvin>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "όγκος (km3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Planet/volume> <http://dbpedia.org/datatype/cubicKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "έκταση (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "Fläche (km2)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "área (km2)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "oppervlakte (km2)"@nl)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/PopulatedPlace/area> "The area of a owl:Thing in square metre."@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "superficie (km2)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "area (km2)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/area> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaMetro> "area metro (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaMetro> "περιοχή μετρό (km2)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/areaMetro> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "έκταση περιοχής (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "Fläche (km2)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "superficie (km2)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "oppervlakte (km2)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "area total (km2)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/areaTotal> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaUrban> "αστική περιοχή (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaUrban> "area urban (km2)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/areaUrban> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "bevolkingsdichtheid (/sqkm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "Bevölkerungsdichte (/sqkm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "πυκνότητα_πληθυσμού (/sqkm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "population density (/sqkm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/populationDensity> <http://dbpedia.org/datatype/inhabitantsPerSquareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> "population metro density (/sqkm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> "bevolkingsdichtheid (/sqkm)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> <http://dbpedia.org/datatype/inhabitantsPerSquareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationUrbanDensity> "population urban density (/sqkm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/PopulatedPlace/populationUrbanDensity> <http://dbpedia.org/datatype/inhabitantsPerSquareKilometre>)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> "Payload mass in a typical Low Earth orbit"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> "lower earth orbit payload (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/mass> "μάζα (kg)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/Rocket/mass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/School/campusSize> "campus size (km2)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/School/campusSize> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Software/fileSize> "size (MB)"@en)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Software/fileSize> "size of a file or software"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Software/fileSize> "Dateigröße (MB)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/Software/fileSize> <http://dbpedia.org/datatype/megabyte>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/cmpEvaDuration> "CMP EVA duration (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/cmpEvaDuration> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/distanceTraveled> "afgelegde afstand (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/distanceTraveled> "distance traveled (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/distanceTraveled> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarEvaTime> "lunar EVA time (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/lunarEvaTime> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarOrbitTime> "lunar orbit time (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/lunarOrbitTime> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarSampleMass> "lunar sample mass (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/lunarSampleMass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarSurfaceTime> "lunar surface time (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/lunarSurfaceTime> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/mass> "μάζα (kg)"@el)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/mass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/missionDuration> "mission duration (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/missionDuration> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/stationEvaDuration> "station EVA duration (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/stationEvaDuration> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/stationVisitDuration> "station visit duration (ω)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceMission/stationVisitDuration> <http://dbpedia.org/datatype/hour>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/distance> "distance (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/distance> "Entfernung (km)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceShuttle/distance> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/timeInSpace> "time in space (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceShuttle/timeInSpace> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "όγκος (μ³)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/SpaceStation/volume> <http://dbpedia.org/datatype/cubicMetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/apoapsis> "απόαψης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/apoapsis> "apoapsis (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/apoapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoFuel> "cargo fuel (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/cargoFuel> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoGas> "cargo gas (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/cargoGas> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoWater> "cargo water (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/cargoWater> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dockedTime> "docked time (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/dockedTime> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dryCargo> "dry cargo (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dryCargo> "droge last (kg)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/dryCargo> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/freeFlightTime> "free flight time (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/freeFlightTime> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/periapsis> "periapsis (km)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/periapsis> <http://dbpedia.org/datatype/kilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/port1DockedTime> "port1 docked time (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/port1DockedTime> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/port2DockedTime> "port2 docked time (μ)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/port2DockedTime> <http://dbpedia.org/datatype/day>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/totalCargo> "total cargo (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/totalCargo> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/totalMass> "total mass (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Spacecraft/totalMass> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "εκροή (m³/s)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "uitstoot (m³/s)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "discharge (m³/s)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Stream/discharge> <http://dbpedia.org/datatype/cubicMetrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/dischargeAverage> "discharge average (m³/s)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Stream/dischargeAverage> <http://dbpedia.org/datatype/cubicMetrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/maximumDischarge> "maximum discharge (m³/s)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Stream/maximumDischarge> <http://dbpedia.org/datatype/cubicMetrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/minimumDischarge> "minimum discharge (m³/s)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Stream/minimumDischarge> <http://dbpedia.org/datatype/cubicMetrePerSecond>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "λεκάνη_απορροής (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "watershed (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "waterscheiding (km2)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "cuenca hidrográfica (km2)"@es)
ObjectPropertyRange(<http://dbpedia.org/ontology/Stream/watershed> <http://dbpedia.org/datatype/squareKilometre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "διάμετρος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diamètre (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diameter (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diameter (mm)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/Weapon/diameter> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "altura (mm)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "Höhe (mm)"@de)
ObjectPropertyRange(<http://dbpedia.org/ontology/Weapon/height> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "length (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "Länge (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "longueur (mm)"@fr)
ObjectPropertyRange(<http://dbpedia.org/ontology/Weapon/length> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "weight (kg)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Weapon/weight> <http://dbpedia.org/datatype/kilogram>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "Breite (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "width (mm)"@en)
ObjectPropertyRange(<http://dbpedia.org/ontology/Weapon/width> <http://dbpedia.org/datatype/millimetre>)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "runtime (m)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "διάρκεια (m)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "durée (m)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "duur (m)"@nl)
ObjectPropertyRange(<http://dbpedia.org/ontology/Work/runtime> <http://dbpedia.org/datatype/minute>)
EquivalentObjectProperties(<http://www.semanticweb.org/matac93/ontology/fao#hometown> :birthPlace)
ObjectPropertyRange(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#hasActor> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person>)
ObjectPropertyRange(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#hasDirector> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person>)
ObjectPropertyRange(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#hasProducer> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person>)
ObjectPropertyRange(<http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#hasWriter> <http://www.semanticweb.org/matc93/ontology/linkedmdb_lite#Person>)
Declaration(DataProperty(:aSide))
AnnotationAssertion(rdfs:label :aSide "εξώφυλλο"@el)
AnnotationAssertion(rdfs:label :aSide "a side"@en)
DataPropertyDomain(:aSide :Single)
DataPropertyRange(:aSide xsd:string)
Declaration(DataProperty(:abbreviation))
AnnotationAssertion(rdfs:label :abbreviation "abréviation"@fr)
AnnotationAssertion(rdfs:label :abbreviation "abbreviation"@en)
AnnotationAssertion(rdfs:label :abbreviation "skrót"@pl)
AnnotationAssertion(rdfs:label :abbreviation "συντομογραφία"@el)
AnnotationAssertion(rdfs:label :abbreviation "Abkürzung"@de)
AnnotationAssertion(rdfs:label :abbreviation "afkorting"@nl)
DataPropertyRange(:abbreviation xsd:string)
Declaration(DataProperty(:absoluteMagnitude))
AnnotationAssertion(rdfs:label :absoluteMagnitude "απόλυτο μέγεθος"@el)
AnnotationAssertion(rdfs:label :absoluteMagnitude "absolute Helligkeit"@de)
AnnotationAssertion(rdfs:label :absoluteMagnitude "absolute magnitude"@en)
DataPropertyDomain(:absoluteMagnitude :Planet)
DataPropertyRange(:absoluteMagnitude xsd:double)
Declaration(DataProperty(:abstract))
AnnotationAssertion(rdfs:label :abstract "has abstract"@en)
AnnotationAssertion(rdfs:label :abstract "έχει περίληψη"@el)
AnnotationAssertion(rdfs:comment :abstract "Προορίζεται για την DBpedia."@el)
AnnotationAssertion(rdfs:comment :abstract "Reserved for DBpedia."@en)
DataPropertyRange(:abstract xsd:string)
Declaration(DataProperty(:acceleration))
AnnotationAssertion(rdfs:label :acceleration "acceleration (s)"@en)
AnnotationAssertion(rdfs:label :acceleration "Beschleunigung (s)"@de)
AnnotationAssertion(rdfs:label :acceleration "επιτάχυνση (s)"@el)
FunctionalDataProperty(:acceleration)
DataPropertyDomain(:acceleration :AutomobileEngine)
DataPropertyRange(:acceleration xsd:double)
Declaration(DataProperty(:access))
AnnotationAssertion(rdfs:label :access "access"@en)
AnnotationAssertion(rdfs:label :access "πρόσβαση"@el)
DataPropertyRange(:access xsd:string)
Declaration(DataProperty(:accessDate))
AnnotationAssertion(rdfs:label :accessDate "access date"@en)
AnnotationAssertion(rdfs:label :accessDate "ημερομηνία πρόσβασης"@el)
DataPropertyRange(:accessDate xsd:gYear)
Declaration(DataProperty(:acquirementDate))
AnnotationAssertion(rdfs:label :acquirementDate "ημερομηνία απόκτησης"@el)
AnnotationAssertion(rdfs:label :acquirementDate "date of acquirement"@en)
DataPropertyDomain(:acquirementDate :Ship)
DataPropertyRange(:acquirementDate xsd:date)
Declaration(DataProperty(:activeYear))
AnnotationAssertion(rdfs:label :activeYear "active year"@en)
DataPropertyDomain(:activeYear :Person)
DataPropertyRange(:activeYear xsd:string)
Declaration(DataProperty(:activeYearsEndDate))
AnnotationAssertion(rdfs:label :activeYearsEndDate "actieve jaren einddatum"@nl)
AnnotationAssertion(rdfs:label :activeYearsEndDate "ενεργή ημερομηνία λήξης χρόνου"@el)
AnnotationAssertion(rdfs:label :activeYearsEndDate "active years end date"@en)
DataPropertyRange(:activeYearsEndDate xsd:date)
Declaration(DataProperty(:activeYearsEndYear))
AnnotationAssertion(rdfs:label :activeYearsEndYear "active years end year"@en)
AnnotationAssertion(rdfs:label :activeYearsEndYear "actieve jaren eind jaar"@nl)
AnnotationAssertion(rdfs:label :activeYearsEndYear "ενεργά χρόνια τέλος του χρόνου"@el)
DataPropertyRange(:activeYearsEndYear xsd:gYear)
Declaration(DataProperty(:activeYearsStartDate))
AnnotationAssertion(rdfs:label :activeYearsStartDate "actieve jaren startdatum"@nl)
AnnotationAssertion(rdfs:label :activeYearsStartDate "ενεργά χρόνια ημερομηνία έναρξης"@el)
AnnotationAssertion(rdfs:label :activeYearsStartDate "date de début d'activité"@fr)
AnnotationAssertion(rdfs:label :activeYearsStartDate "active years start date"@en)
DataPropertyRange(:activeYearsStartDate xsd:date)
Declaration(DataProperty(:activeYearsStartYear))
AnnotationAssertion(rdfs:label :activeYearsStartYear "active years start year"@en)
AnnotationAssertion(rdfs:label :activeYearsStartYear "actieve jaren start jaar"@nl)
AnnotationAssertion(rdfs:label :activeYearsStartYear "ενεργός χρόνος έτος λειτουργίας"@el)
DataPropertyRange(:activeYearsStartYear xsd:gYear)
Declaration(DataProperty(:activity))
AnnotationAssertion(rdfs:label :activity "activity"@en)
DataPropertyDomain(:activity :FictionalCharacter)
DataPropertyRange(:activity xsd:string)
Declaration(DataProperty(:added))
AnnotationAssertion(rdfs:label :added "προστιθέμενη"@el)
AnnotationAssertion(rdfs:label :added "added"@en)
DataPropertyDomain(:added :HistoricPlace)
DataPropertyRange(:added xsd:date)
Declaration(DataProperty(:address))
AnnotationAssertion(rdfs:label :address "address"@en)
AnnotationAssertion(rdfs:label :address "διεύθυνση"@el)
AnnotationAssertion(rdfs:label :address "adresse"@fr)
AnnotationAssertion(rdfs:label :address "adres"@nl)
DataPropertyDomain(:address :Building)
DataPropertyRange(:address xsd:string)
Declaration(DataProperty(:administrativeStatus))
AnnotationAssertion(rdfs:label :administrativeStatus "administrative status"@en)
DataPropertyRange(:administrativeStatus xsd:string)
Declaration(DataProperty(:afdbId))
AnnotationAssertion(rdfs:label :afdbId "código no afdb"@pt)
AnnotationAssertion(rdfs:label :afdbId "afdb id"@el)
AnnotationAssertion(rdfs:label :afdbId "afdb id"@en)
DataPropertyDomain(:afdbId :Film)
DataPropertyRange(:afdbId xsd:string)
Declaration(DataProperty(:affair))
AnnotationAssertion(rdfs:label :affair "affair"@en)
DataPropertyDomain(:affair :Person)
DataPropertyRange(:affair xsd:string)
Declaration(DataProperty(:affiliate))
AnnotationAssertion(rdfs:label :affiliate "affiliate"@en)
DataPropertyDomain(:affiliate :FictionalCharacter)
DataPropertyRange(:affiliate xsd:string)
Declaration(DataProperty(:age))
AnnotationAssertion(rdfs:label :age "age"@en)
AnnotationAssertion(rdfs:label :age "ηλικία"@el)
DataPropertyDomain(:age :Agent)
DataPropertyRange(:age xsd:integer)
Declaration(DataProperty(:ageRange))
AnnotationAssertion(rdfs:label :ageRange "εύρος ηλικίας"@el)
AnnotationAssertion(rdfs:label :ageRange "age range"@en)
DataPropertyDomain(:ageRange :School)
DataPropertyRange(:ageRange xsd:nonNegativeInteger)
Declaration(DataProperty(:agency))
AnnotationAssertion(rdfs:label :agency "agency"@en)
DataPropertyDomain(:agency :Person)
DataPropertyRange(:agency xsd:string)
Declaration(DataProperty(:agencyStationCode))
AnnotationAssertion(rdfs:label :agencyStationCode "κωδικός πρακτορείου"@el)
AnnotationAssertion(rdfs:label :agencyStationCode "stationscode"@nl)
AnnotationAssertion(rdfs:comment :agencyStationCode "Κωδικός πρακτορείου (χρησιμοποιείται σε εισιτήρια/κρατήσεις,κτλ.)."@el)
AnnotationAssertion(rdfs:label :agencyStationCode "Stationsabkürzung"@de)
AnnotationAssertion(rdfs:label :agencyStationCode "agency station code"@en)
AnnotationAssertion(rdfs:comment :agencyStationCode "Agency station code (used on tickets/reservations, etc.)."@en)
DataPropertyDomain(:agencyStationCode :Station)
DataPropertyRange(:agencyStationCode xsd:string)
Declaration(DataProperty(:agglomerationArea))
AnnotationAssertion(rdfs:label :agglomerationArea "area of a agglomeration"@en)
DataPropertyDomain(:agglomerationArea :PopulatedPlace)
DataPropertyRange(:agglomerationArea xsd:string)
Declaration(DataProperty(:agglomerationPopulation))
AnnotationAssertion(rdfs:label :agglomerationPopulation "agglomerationPopulation"@en)
DataPropertyDomain(:agglomerationPopulation :Settlement)
DataPropertyRange(:agglomerationPopulation xsd:integer)
Declaration(DataProperty(:agglomerationPopulationYear))
AnnotationAssertion(rdfs:label :agglomerationPopulationYear "agglomerationPopulationYear"@en)
DataPropertyDomain(:agglomerationPopulationYear :Settlement)
DataPropertyRange(:agglomerationPopulationYear xsd:string)
Declaration(DataProperty(:airDate))
AnnotationAssertion(rdfs:label :airDate "airdate"@en)
AnnotationAssertion(rdfs:label :airDate "ημερομηνία αέρα"@el)
DataPropertyDomain(:airDate :RadioStation)
DataPropertyRange(:airDate xsd:date)
Declaration(DataProperty(:aircraftType))
AnnotationAssertion(rdfs:label :aircraftType "τύπος αεροσκάφους"@el)
AnnotationAssertion(rdfs:label :aircraftType "aircraft type"@en)
AnnotationAssertion(rdfs:label :aircraftType "tipo de avión"@es)
DataPropertyDomain(:aircraftType :Aircraft)
DataPropertyRange(:aircraftType xsd:string)
Declaration(DataProperty(:airportUsing))
AnnotationAssertion(rdfs:label :airportUsing "Different usage of an airport"@en)
AnnotationAssertion(rdfs:label :airportUsing "οι χρήσεις ενός αεροδρομίου"@el)
DataPropertyDomain(:airportUsing :Airport)
DataPropertyRange(:airportUsing xsd:string)
Declaration(DataProperty(:aitaCode))
AnnotationAssertion(rdfs:label :aitaCode "aita code"@en)
DataPropertyRange(:aitaCode xsd:string)
Declaration(DataProperty(:albedo))
AnnotationAssertion(rdfs:label :albedo "albedo"@en)
AnnotationAssertion(rdfs:label :albedo "albedo"@el)
AnnotationAssertion(rdfs:comment :albedo "reflection coefficient"@en)
AnnotationAssertion(rdfs:comment :albedo "συντελεστής ανάκλασης"@el)
DataPropertyDomain(:albedo :Planet)
DataPropertyRange(:albedo xsd:double)
Declaration(DataProperty(:alemmanicName))
AnnotationAssertion(rdfs:label :alemmanicName "city allemmanic name"@en)
DataPropertyDomain(:alemmanicName :PopulatedPlace)
DataPropertyRange(:alemmanicName xsd:string)
Declaration(DataProperty(:algerianSettlementName))
AnnotationAssertion(rdfs:label :algerianSettlementName "algerian settlement name"@en)
DataPropertyRange(:algerianSettlementName xsd:string)
Declaration(DataProperty(:alias))
AnnotationAssertion(rdfs:label :alias "ψευδώνυμο"@el)
AnnotationAssertion(rdfs:label :alias "alias"@fr)
AnnotationAssertion(rdfs:label :alias "別名"@ja)
AnnotationAssertion(rdfs:label :alias "alias"@en)
AnnotationAssertion(rdfs:label :alias "alias"@nl)
DataPropertyRange(:alias xsd:string)
Declaration(DataProperty(:allcinemaId))
AnnotationAssertion(rdfs:label :allcinemaId "allcinema id"@ja)
AnnotationAssertion(rdfs:label :allcinemaId "allcinema id"@en)
AnnotationAssertion(rdfs:label :allcinemaId "allcinema id"@el)
DataPropertyDomain(:allcinemaId :Film)
DataPropertyRange(:allcinemaId xsd:string)
Declaration(DataProperty(:allegiance))
AnnotationAssertion(rdfs:comment :allegiance "The country or other power the person served. Multiple countries may be indicated together with the corresponding dates. This field should not be used to indicate a particular service branch, which is better indicated by the branch field."@en)
AnnotationAssertion(rdfs:label :allegiance "allegiance"@en)
AnnotationAssertion(rdfs:label :allegiance "υποταγή"@el)
DataPropertyDomain(:allegiance :Person)
DataPropertyRange(:allegiance xsd:string)
Declaration(DataProperty(:alpsSoiusaCode))
AnnotationAssertion(rdfs:comment :alpsSoiusaCode "the Alps SOIUSA code corresponding to the mountain, according to the SOIUSA classification"@en)
AnnotationAssertion(rdfs:label :alpsSoiusaCode "Alps SOIUSA code"@en)
AnnotationAssertion(rdfs:label :alpsSoiusaCode "κώδικας SOIUSA των άλπεων"@el)
AnnotationAssertion(rdfs:label :alpsSoiusaCode "codice SOIUSA"@it)
DataPropertyDomain(:alpsSoiusaCode :Mountain)
DataPropertyRange(:alpsSoiusaCode xsd:string)
Declaration(DataProperty(:alternativeTitle))
AnnotationAssertion(rdfs:label :alternativeTitle "alternative title"@en)
AnnotationAssertion(rdfs:comment :alternativeTitle "The alternative title attributed to a work"@en)
AnnotationAssertion(rdfs:label :alternativeTitle "alternatieve titel"@nl)
DataPropertyDomain(:alternativeTitle :Work)
DataPropertyRange(:alternativeTitle xsd:string)
Declaration(DataProperty(:amgid))
AnnotationAssertion(rdfs:label :amgid "amgId"@en)
DataPropertyDomain(:amgid :Film)
DataPropertyRange(:amgid xsd:string)
Declaration(DataProperty(:analogChannel))
AnnotationAssertion(rdfs:label :analogChannel "analog channel"@en)
AnnotationAssertion(rdfs:label :analogChannel "αναλογικό κανάλι"@el)
DataPropertyDomain(:analogChannel :Broadcaster)
DataPropertyRange(:analogChannel xsd:string)
Declaration(DataProperty(:anniversary))
AnnotationAssertion(rdfs:label :anniversary "anniversary"@en)
AnnotationAssertion(rdfs:label :anniversary "επέτειος"@el)
DataPropertyDomain(:anniversary :MilitaryUnit)
DataPropertyRange(:anniversary xsd:date)
Declaration(DataProperty(:annualTemperature))
AnnotationAssertion(rdfs:label :annualTemperature "ετήσια θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label :annualTemperature "annual temperature (K)"@en)
AnnotationAssertion(rdfs:label :annualTemperature "jaartemperatuur (K)"@nl)
DataPropertyDomain(:annualTemperature :Place)
DataPropertyRange(:annualTemperature xsd:double)
Declaration(DataProperty(:apoapsis))
AnnotationAssertion(rdfs:label :apoapsis "apoapsis (μ)"@en)
AnnotationAssertion(rdfs:label :apoapsis "απόαψης (μ)"@el)
DataPropertyRange(:apoapsis xsd:double)
Declaration(DataProperty(:apparentMagnitude))
AnnotationAssertion(rdfs:label :apparentMagnitude "scheinbare Helligkeit"@de)
AnnotationAssertion(rdfs:label :apparentMagnitude "apparent magnitude"@en)
AnnotationAssertion(rdfs:label :apparentMagnitude "φαινόμενο μέγεθος"@el)
DataPropertyDomain(:apparentMagnitude :Planet)
DataPropertyRange(:apparentMagnitude xsd:double)
Declaration(DataProperty(:appearancesInLeague))
AnnotationAssertion(rdfs:label :appearancesInLeague "εμφανίσεις στο πρωτάθλημα"@el)
AnnotationAssertion(rdfs:label :appearancesInLeague "appearances in league"@en)
DataPropertyDomain(:appearancesInLeague :SoccerPlayer)
DataPropertyRange(:appearancesInLeague xsd:nonNegativeInteger)
Declaration(DataProperty(:appearancesInNationalTeam))
AnnotationAssertion(rdfs:label :appearancesInNationalTeam "εμφανίσεις στην εθνική ομάδα"@el)
AnnotationAssertion(rdfs:label :appearancesInNationalTeam "appearances in national team"@en)
DataPropertyDomain(:appearancesInNationalTeam :SoccerPlayer)
DataPropertyRange(:appearancesInNationalTeam xsd:nonNegativeInteger)
Declaration(DataProperty(:appmag_v))
AnnotationAssertion(rdfs:label :appmag_v "appmag_v"@en)
DataPropertyRange(:appmag_v xsd:integer)
Declaration(DataProperty(:approximateCalories))
AnnotationAssertion(rdfs:label :approximateCalories "approximate calories (J)"@en)
AnnotationAssertion(rdfs:comment :approximateCalories "Kατά προσέγγιση θερμίδες ανά μερίδα."@el)
AnnotationAssertion(rdfs:label :approximateCalories "κατά προσέγγιση θερμίδες (J)"@el)
AnnotationAssertion(rdfs:comment :approximateCalories "Approximate calories per serving."@en)
DataPropertyDomain(:approximateCalories :Food)
DataPropertyRange(:approximateCalories xsd:double)
Declaration(DataProperty(:apskritis))
AnnotationAssertion(rdfs:label :apskritis "apskritis"@en)
DataPropertyDomain(:apskritis :PopulatedPlace)
DataPropertyRange(:apskritis xsd:string)
Declaration(DataProperty(:arabicName))
AnnotationAssertion(rdfs:label :arabicName "arabic name of a lebanon settlement"@en)
DataPropertyRange(:arabicName xsd:string)
Declaration(DataProperty(:arberishtName))
AnnotationAssertion(rdfs:label :arberishtName "city arberisht name"@en)
DataPropertyDomain(:arberishtName :PopulatedPlace)
DataPropertyRange(:arberishtName xsd:string)
Declaration(DataProperty(:architecturalMovement))
AnnotationAssertion(rdfs:label :architecturalMovement "architectural movement"@en)
DataPropertyDomain(:architecturalMovement :Person)
DataPropertyRange(:architecturalMovement xsd:string)
Declaration(DataProperty(:area))
AnnotationAssertion(rdfs:label :area "έκταση (m2)"@el)
AnnotationAssertion(rdfs:label :area "área (m2)"@pt)
AnnotationAssertion(rdfs:label :area "area (m2)"@en)
AnnotationAssertion(rdfs:comment :area "The area of a owl:Thing in square metre."@en)
AnnotationAssertion(rdfs:label :area "Fläche (m2)"@de)
AnnotationAssertion(rdfs:label :area "superficie (m2)"@fr)
AnnotationAssertion(rdfs:label :area "oppervlakte (m2)"@nl)
EquivalentDataProperties(:area :landArea)
EquivalentDataProperties(:area :waterArea)
DataPropertyRange(:area xsd:double)
Declaration(DataProperty(:areaCode))
AnnotationAssertion(rdfs:label :areaCode "Vorwahl"@de)
AnnotationAssertion(rdfs:comment :areaCode "Area code for telephone numbers."@en)
AnnotationAssertion(rdfs:label :areaCode "netnummer"@nl)
AnnotationAssertion(rdfs:label :areaCode "area code"@en)
AnnotationAssertion(rdfs:label :areaCode "κωδικός_περιοχής"@el)
DataPropertyDomain(:areaCode :PopulatedPlace)
DataPropertyRange(:areaCode xsd:string)
Declaration(DataProperty(:areaDate))
AnnotationAssertion(rdfs:label :areaDate "area date"@en)
DataPropertyDomain(:areaDate :Place)
DataPropertyRange(:areaDate xsd:date)
Declaration(DataProperty(:areaLand))
AnnotationAssertion(rdfs:label :areaLand "oppervlakte land (m2)"@nl)
AnnotationAssertion(rdfs:label :areaLand "area land (m2)"@en)
AnnotationAssertion(rdfs:label :areaLand "έκταση_στεριάς_περιοχής (m2)"@el)
DataPropertyDomain(:areaLand :Place)
DataPropertyRange(:areaLand xsd:double)
Declaration(DataProperty(:areaMetro))
AnnotationAssertion(rdfs:label :areaMetro "area metro (m2)"@en)
AnnotationAssertion(rdfs:label :areaMetro "περιοχή μετρό (m2)"@el)
DataPropertyRange(:areaMetro xsd:double)
Declaration(DataProperty(:areaOfCatchment))
AnnotationAssertion(rdfs:label :areaOfCatchment "area of catchment (m2)"@en)
AnnotationAssertion(rdfs:label :areaOfCatchment "λίμνη (m2)"@el)
DataPropertyDomain(:areaOfCatchment :Lake)
DataPropertyRange(:areaOfCatchment xsd:double)
Declaration(DataProperty(:areaOfCatchmentQuote))
AnnotationAssertion(rdfs:label :areaOfCatchmentQuote "area of catchment quote"@en)
DataPropertyDomain(:areaOfCatchmentQuote :Place)
DataPropertyRange(:areaOfCatchmentQuote xsd:string)
Declaration(DataProperty(:areaQuote))
AnnotationAssertion(rdfs:label :areaQuote "area quote"@en)
DataPropertyDomain(:areaQuote :Place)
DataPropertyRange(:areaQuote xsd:string)
Declaration(DataProperty(:areaRank))
AnnotationAssertion(rdfs:label :areaRank "area rank"@en)
DataPropertyDomain(:areaRank :Place)
DataPropertyRange(:areaRank xsd:string)
Declaration(DataProperty(:areaRural))
AnnotationAssertion(rdfs:label :areaRural "area rural (m2)"@en)
AnnotationAssertion(rdfs:label :areaRural "αγροτική περιοχή (m2)"@el)
DataPropertyDomain(:areaRural :PopulatedPlace)
DataPropertyRange(:areaRural xsd:double)
Declaration(DataProperty(:areaTotal))
AnnotationAssertion(rdfs:label :areaTotal "oppervlakte (m2)"@nl)
AnnotationAssertion(rdfs:label :areaTotal "Fläche (m2)"@de)
AnnotationAssertion(rdfs:label :areaTotal "superficie (m2)"@fr)
AnnotationAssertion(rdfs:label :areaTotal "area total (m2)"@en)
AnnotationAssertion(rdfs:label :areaTotal "έκταση περιοχής (m2)"@el)
DataPropertyDomain(:areaTotal :Place)
DataPropertyRange(:areaTotal xsd:double)
Declaration(DataProperty(:areaTotalRanking))
AnnotationAssertion(rdfs:label :areaTotalRanking "total area ranking"@en)
AnnotationAssertion(rdfs:label :areaTotalRanking "συνολική περιοχή"@el)
DataPropertyDomain(:areaTotalRanking :PopulatedPlace)
DataPropertyRange(:areaTotalRanking xsd:positiveInteger)
Declaration(DataProperty(:areaUrban))
AnnotationAssertion(rdfs:label :areaUrban "area urban (m2)"@en)
AnnotationAssertion(rdfs:label :areaUrban "αστική περιοχή (m2)"@el)
DataPropertyDomain(:areaUrban :PopulatedPlace)
DataPropertyRange(:areaUrban xsd:double)
Declaration(DataProperty(:areaWater))
AnnotationAssertion(rdfs:label :areaWater "έκταση_υδάτων_περιοχής (m2)"@el)
AnnotationAssertion(rdfs:label :areaWater "area water (m2)"@en)
AnnotationAssertion(rdfs:label :areaWater "oppervlakte water (m2)"@nl)
DataPropertyDomain(:areaWater :Place)
DataPropertyRange(:areaWater xsd:double)
Declaration(DataProperty(:argueDate))
AnnotationAssertion(rdfs:label :argueDate "argue date"@en)
AnnotationAssertion(rdfs:label :argueDate "δημοφιλής ημερομηνία"@el)
DataPropertyDomain(:argueDate :SupremeCourtOfTheUnitedStatesCase)
DataPropertyRange(:argueDate xsd:date)
Declaration(DataProperty(:arm))
AnnotationAssertion(rdfs:label :arm "ώμος"@el)
AnnotationAssertion(rdfs:label :arm "arm"@en)
DataPropertyDomain(:arm :Protein)
DataPropertyRange(:arm xsd:string)
Declaration(DataProperty(:army))
AnnotationAssertion(rdfs:label :army "army"@en)
DataPropertyDomain(:army :Person)
DataPropertyRange(:army xsd:string)
Declaration(DataProperty(:artificialSnowArea))
AnnotationAssertion(rdfs:label :artificialSnowArea "artificial snow area"@en)
DataPropertyDomain(:artificialSnowArea :Place)
DataPropertyRange(:artificialSnowArea xsd:float)
Declaration(DataProperty(:ascent))
AnnotationAssertion(rdfs:label :ascent "ανάβαση"@el)
AnnotationAssertion(rdfs:label :ascent "ascent"@en)
DataPropertyRange(:ascent xsd:string)
Declaration(DataProperty(:ascentDate))
AnnotationAssertion(rdfs:label :ascentDate "ημερομηνία ανάβασης"@el)
AnnotationAssertion(rdfs:label :ascentDate "access date"@en)
DataPropertyDomain(:ascentDate :Mountain)
DataPropertyRange(:ascentDate xsd:gYear)
Declaration(DataProperty(:assetUnderManagement))
AnnotationAssertion(rdfs:label :assetUnderManagement "κεφάλαιο υπό διαχείριση ($)"@el)
AnnotationAssertion(rdfs:label :assetUnderManagement "asset under management ($)"@en)
DataPropertyDomain(:assetUnderManagement :Company)
DataPropertyRange(:assetUnderManagement xsd:double)
Declaration(DataProperty(:assets))
AnnotationAssertion(rdfs:label :assets "περιουσιακά στοιχεία ($)"@el)
AnnotationAssertion(rdfs:label :assets "assets ($)"@en)
AnnotationAssertion(rdfs:comment :assets "Περιουσιακά στοιχεία και υποχρεώσεις αποτελούν μέρος του ισολογισμού μιας εταιρείας.Σε χρηματοοικονομική λογιστική,τα περιουσιακά στοιχεία είναι οι οικονομικοί πόροι. Οτιδήποτε ενσώματο ή άυλο, που είναι ικανό να ανήκει ή να ελέγχεται για να παράγει αξία και που κατέχεται για να έχει θετική οικονομική αξία θεωρείται ένα περιουσιακό στοιχείο."@el)
AnnotationAssertion(rdfs:comment :assets "Assets and liabilities are part of a companis balance sheet. In financial accounting, assets are economic resources. Anything tangible or intangible that is capable of being owned or controlled to produce value and that is held to have positive economic value is considered an asset."@en)
DataPropertyDomain(:assets :Company)
DataPropertyRange(:assets xsd:double)
Declaration(DataProperty(:atcPrefix))
AnnotationAssertion(rdfs:label :atcPrefix "ATC prefix"@en)
AnnotationAssertion(rdfs:label :atcPrefix "préfix ATC"@fr)
AnnotationAssertion(rdfs:label :atcPrefix "ATC πρόθεμα"@el)
DataPropertyRange(:atcPrefix xsd:string)
Declaration(DataProperty(:atcSuffix))
AnnotationAssertion(rdfs:label :atcSuffix "ATC κατάληξη"@el)
AnnotationAssertion(rdfs:label :atcSuffix "suffix ATC"@fr)
AnnotationAssertion(rdfs:label :atcSuffix "ATC suffix"@en)
DataPropertyRange(:atcSuffix xsd:string)
Declaration(DataProperty(:atcSupplemental))
AnnotationAssertion(rdfs:label :atcSupplemental "ATC supplemental"@en)
AnnotationAssertion(rdfs:label :atcSupplemental "ATC συμπληρωματικό"@el)
DataPropertyRange(:atcSupplemental xsd:string)
Declaration(DataProperty(:austrianLand))
AnnotationAssertion(rdfs:label :austrianLand "austrian land"@en)
DataPropertyRange(:austrianLand xsd:string)
Declaration(DataProperty(:authorityMandate))
AnnotationAssertion(rdfs:label :authorityMandate "authority mandate"@en)
DataPropertyDomain(:authorityMandate :Place)
DataPropertyRange(:authorityMandate xsd:string)
Declaration(DataProperty(:authorityTitle))
AnnotationAssertion(rdfs:label :authorityTitle "authority title of a romanian settlement"@en)
DataPropertyRange(:authorityTitle xsd:string)
Declaration(DataProperty(:automobileModel))
AnnotationAssertion(rdfs:label :automobileModel "μοντέλο αυτοκινήτου"@el)
AnnotationAssertion(rdfs:label :automobileModel "automobile model"@en)
DataPropertyDomain(:automobileModel :AutomobileEngine)
DataPropertyRange(:automobileModel xsd:string)
Declaration(DataProperty(:averageClassSize))
AnnotationAssertion(rdfs:label :averageClassSize "average class size"@en)
AnnotationAssertion(rdfs:label :averageClassSize "μέσο μέγεθος τάξης"@el)
DataPropertyDomain(:averageClassSize :School)
DataPropertyRange(:averageClassSize xsd:float)
Declaration(DataProperty(:averageDepth))
AnnotationAssertion(rdfs:label :averageDepth "average depth"@en)
DataPropertyDomain(:averageDepth :Place)
DataPropertyRange(:averageDepth xsd:string)
Declaration(DataProperty(:averageDepthQuote))
AnnotationAssertion(rdfs:label :averageDepthQuote "average depth quote"@en)
DataPropertyDomain(:averageDepthQuote :Place)
DataPropertyRange(:averageDepthQuote xsd:string)
Declaration(DataProperty(:averageSpeed))
AnnotationAssertion(rdfs:comment :averageSpeed "The average speed of a thing."@en)
AnnotationAssertion(rdfs:label :averageSpeed "Durchschnittsgeschwindigkeit (kmh)"@de)
AnnotationAssertion(rdfs:label :averageSpeed "average speed (kmh)"@en)
AnnotationAssertion(rdfs:label :averageSpeed "μέση ταχύτητα (kmh)"@el)
AnnotationAssertion(rdfs:comment :averageSpeed "Η μέση ταχύτητα ενός πράγματος."@el)
DataPropertyRange(:averageSpeed xsd:double)
Declaration(DataProperty(:avifaunaPopulation))
AnnotationAssertion(rdfs:label :avifaunaPopulation "avifauna population"@en)
DataPropertyDomain(:avifaunaPopulation :Place)
DataPropertyRange(:avifaunaPopulation xsd:string)
Declaration(DataProperty(:awayColourHexCode))
AnnotationAssertion(rdfs:comment :awayColourHexCode "A colour represented by its hex code (e.g.: #FF0000 or #40E0D0)."@en)
AnnotationAssertion(rdfs:label :awayColourHexCode "colour hex code of away jersey or its parts"@en)
AnnotationAssertion(rdfs:label :awayColourHexCode "Farben Hex Code des Auswärtstrikots oder Teile dieses"@de)
DataPropertyRange(:awayColourHexCode xsd:string)
Declaration(DataProperty(:bSide))
AnnotationAssertion(rdfs:label :bSide "b side"@en)
DataPropertyDomain(:bSide :Single)
DataPropertyRange(:bSide xsd:string)
Declaration(DataProperty(:background))
AnnotationAssertion(rdfs:label :background "φόντο"@el)
AnnotationAssertion(rdfs:label :background "background"@en)
DataPropertyRange(:background xsd:string)
Declaration(DataProperty(:band))
AnnotationAssertion(rdfs:label :band "band"@en)
AnnotationAssertion(rdfs:label :band "μπάντα"@el)
DataPropertyDomain(:band :Protein)
DataPropertyRange(:band xsd:string)
Declaration(DataProperty(:barPassRate))
AnnotationAssertion(rdfs:label :barPassRate "bar pass rate"@en)
AnnotationAssertion(rdfs:label :barPassRate "ποσοστό επιτυχίας"@el)
DataPropertyDomain(:barPassRate :School)
DataPropertyRange(:barPassRate xsd:float)
Declaration(DataProperty(:barangays))
AnnotationAssertion(rdfs:label :barangays "barangays"@en)
DataPropertyDomain(:barangays :PopulatedPlace)
DataPropertyRange(:barangays xsd:string)
Declaration(DataProperty(:battingSide))
AnnotationAssertion(rdfs:label :battingSide "batting side"@en)
DataPropertyDomain(:battingSide :BaseballPlayer)
DataPropertyRange(:battingSide xsd:string)
Declaration(DataProperty(:battleHonours))
AnnotationAssertion(rdfs:label :battleHonours "battle honours"@en)
DataPropertyDomain(:battleHonours :MilitaryUnit)
DataPropertyRange(:battleHonours xsd:string)
Declaration(DataProperty(:beatifiedDate))
AnnotationAssertion(rdfs:label :beatifiedDate "beatified date"@en)
AnnotationAssertion(rdfs:label :beatifiedDate "zalig verklaard datum"@nl)
DataPropertyDomain(:beatifiedDate :Saint)
DataPropertyRange(:beatifiedDate xsd:date)
Declaration(DataProperty(:bedCount))
AnnotationAssertion(rdfs:label :bedCount "αριθμός κρεβατιών"@el)
AnnotationAssertion(rdfs:label :bedCount "Anzahl Betten"@de)
AnnotationAssertion(rdfs:label :bedCount "bed count"@en)
AnnotationAssertion(rdfs:label :bedCount "aantal bedden"@nl)
DataPropertyDomain(:bedCount :Hospital)
DataPropertyRange(:bedCount xsd:nonNegativeInteger)
AnnotationAssertion(rdfs:label :belgiumMergedSettlement "belgium merged settlement"@en)
DataPropertyRange(:belgiumMergedSettlement :BelgiumSettlement)
Declaration(DataProperty(:belgiumPoliticalSeats))
AnnotationAssertion(rdfs:label :belgiumPoliticalSeats "belgium political seats"@en)
DataPropertyRange(:belgiumPoliticalSeats xsd:nonNegativeInteger)
Declaration(DataProperty(:believers))
AnnotationAssertion(rdfs:label :believers "Believers"@en)
DataPropertyDomain(:believers :ChristianDoctrine)
DataPropertyRange(:believers xsd:string)
Declaration(DataProperty(:bestFinish))
AnnotationAssertion(rdfs:label :bestFinish "beste Platzierung im Ranglistenturnier"@de)
AnnotationAssertion(rdfs:label :bestFinish "best ranking finish"@en)
DataPropertyDomain(:bestFinish :SnookerPlayer)
DataPropertyRange(:bestFinish xsd:string)
Declaration(DataProperty(:bgafdId))
AnnotationAssertion(rdfs:label :bgafdId "código no bgafd"@pt)
AnnotationAssertion(rdfs:label :bgafdId "bgafd id"@el)
AnnotationAssertion(rdfs:label :bgafdId "bgafd id"@en)
DataPropertyDomain(:bgafdId :Film)
DataPropertyRange(:bgafdId xsd:string)
Declaration(DataProperty(:bicycleInformation))
AnnotationAssertion(rdfs:label :bicycleInformation "bicycle information"@en)
AnnotationAssertion(rdfs:label :bicycleInformation "Fahrradinformationen"@de)
AnnotationAssertion(rdfs:comment :bicycleInformation "Information on station's bicycle facilities."@en)
DataPropertyDomain(:bicycleInformation :Station)
DataPropertyRange(:bicycleInformation xsd:string)
Declaration(DataProperty(:bioavailability))
AnnotationAssertion(rdfs:comment :bioavailability "\"The rate and extent to which the active ingredient or active moiety is absorbed from a drug product and becomes available at the site of action. For drug products that are not intended to be absorbed into the bloodstream, bioavailability may be assessed by measurements intended to reflect the rate and extent to which the active ingredient or active moiety becomes available at the site of action (21CFR320.1).\""@en)
AnnotationAssertion(rdfs:label :bioavailability "Bioavailability"@en)
DataPropertyDomain(:bioavailability :Drug)
DataPropertyRange(:bioavailability xsd:float)
Declaration(DataProperty(:bioclimate))
AnnotationAssertion(rdfs:label :bioclimate "bioclimate"@en)
DataPropertyDomain(:bioclimate :Place)
DataPropertyRange(:bioclimate xsd:string)
Declaration(DataProperty(:bird))
AnnotationAssertion(rdfs:label :bird "bird"@en)
DataPropertyRange(:bird xsd:string)
Declaration(DataProperty(:birthDate))
AnnotationAssertion(rdfs:label :birthDate "date de naissance"@fr)
AnnotationAssertion(rdfs:label :birthDate "Geburtsdatum"@de)
AnnotationAssertion(rdfs:label :birthDate "birth date"@en)
AnnotationAssertion(rdfs:label :birthDate "geboortedatum"@nl)
AnnotationAssertion(rdfs:label :birthDate "ημερομηνία_γέννησης"@el)
AnnotationAssertion(rdfs:label :birthDate "জন্মদিন"@bn)
AnnotationAssertion(rdfs:label :birthDate "生年月日"@ja)
FunctionalDataProperty(:birthDate)
DataPropertyDomain(:birthDate :Person)
DataPropertyRange(:birthDate xsd:date)
Declaration(DataProperty(:birthName))
AnnotationAssertion(rdfs:label :birthName "geboortenaam"@nl)
AnnotationAssertion(rdfs:label :birthName "όνομα_γέννησης"@el)
AnnotationAssertion(rdfs:label :birthName "birth name"@en)
AnnotationAssertion(rdfs:label :birthName "Geburtsname"@de)
DataPropertyDomain(:birthName :Person)
DataPropertyRange(:birthName xsd:string)
Declaration(DataProperty(:birthYear))
AnnotationAssertion(rdfs:label :birthYear "έτος γέννησης"@el)
AnnotationAssertion(rdfs:label :birthYear "Geburtsjahr"@de)
AnnotationAssertion(rdfs:label :birthYear "生年"@ja)
AnnotationAssertion(rdfs:label :birthYear "birth year"@en)
AnnotationAssertion(rdfs:label :birthYear "geboortejaar"@nl)
FunctionalDataProperty(:birthYear)
DataPropertyDomain(:birthYear :Person)
DataPropertyRange(:birthYear xsd:gYear)
Declaration(DataProperty(:blackLongDistancePisteNumber))
AnnotationAssertion(rdfs:label :blackLongDistancePisteNumber "long distance piste number"@en)
DataPropertyDomain(:blackLongDistancePisteNumber :Place)
DataPropertyRange(:blackLongDistancePisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:blackSkiPisteNumber))
AnnotationAssertion(rdfs:label :blackSkiPisteNumber "black ski piste number"@en)
DataPropertyDomain(:blackSkiPisteNumber :Place)
DataPropertyRange(:blackSkiPisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:blazon))
AnnotationAssertion(rdfs:label :blazon "blazon"@en)
DataPropertyRange(:blazon xsd:string)
Declaration(DataProperty(:blazonCaption))
AnnotationAssertion(rdfs:label :blazonCaption "BlazonCaption"@en)
DataPropertyDomain(:blazonCaption :Blazon)
DataPropertyRange(:blazonCaption xsd:string)
Declaration(DataProperty(:blazonLink))
AnnotationAssertion(rdfs:label :blazonLink "blazon link"@en)
DataPropertyRange(:blazonLink xsd:string)
Declaration(DataProperty(:blazonRatio))
AnnotationAssertion(rdfs:label :blazonRatio "blazon ratio"@en)
DataPropertyRange(:blazonRatio xsd:double)
Declaration(DataProperty(:block))
AnnotationAssertion(rdfs:label :block "block"@en)
AnnotationAssertion(rdfs:label :block "blok"@tr)
DataPropertyDomain(:block :VolleyballPlayer)
DataPropertyRange(:block xsd:string)
Declaration(DataProperty(:blueLongDistancePisteNumber))
AnnotationAssertion(rdfs:label :blueLongDistancePisteNumber "blue long distance piste number"@en)
DataPropertyDomain(:blueLongDistancePisteNumber :Place)
DataPropertyRange(:blueLongDistancePisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:blueSkiPisteNumber))
AnnotationAssertion(rdfs:label :blueSkiPisteNumber "blue ski piste number"@en)
DataPropertyDomain(:blueSkiPisteNumber :Place)
DataPropertyRange(:blueSkiPisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:boilingPoint))
AnnotationAssertion(rdfs:label :boilingPoint "boiling point (K)"@en)
AnnotationAssertion(rdfs:label :boilingPoint "沸点 (K)"@ja)
AnnotationAssertion(rdfs:label :boilingPoint "σημείο βρασμού (K)"@el)
AnnotationAssertion(rdfs:label :boilingPoint "kookpunt (K)"@nl)
AnnotationAssertion(rdfs:label :boilingPoint "Siedepunkt (K)"@de)
AnnotationAssertion(rdfs:label :boilingPoint "point d'ébullition (K)"@fr)
DataPropertyRange(:boilingPoint xsd:double)
Declaration(DataProperty(:bowlRecord))
AnnotationAssertion(rdfs:label :bowlRecord "ρεκόρ μπόουλινγκ"@el)
AnnotationAssertion(rdfs:label :bowlRecord "bowl record"@en)
DataPropertyDomain(:bowlRecord :CollegeCoach)
DataPropertyRange(:bowlRecord xsd:string)
Declaration(DataProperty(:brainInfoNumber))
AnnotationAssertion(rdfs:label :brainInfoNumber "αριθμός νοητικής πληροφόρησης"@el)
AnnotationAssertion(rdfs:label :brainInfoNumber "brain info number"@en)
DataPropertyDomain(:brainInfoNumber :Brain)
DataPropertyRange(:brainInfoNumber xsd:string)
Declaration(DataProperty(:brainInfoType))
AnnotationAssertion(rdfs:label :brainInfoType "brain info type"@en)
AnnotationAssertion(rdfs:label :brainInfoType "τύπος νοητικής πληροφόρησης"@el)
DataPropertyDomain(:brainInfoType :Brain)
DataPropertyRange(:brainInfoType xsd:string)
Declaration(DataProperty(:bridgeCarries))
AnnotationAssertion(rdfs:label :bridgeCarries "γέφυρα μεταφοράς"@el)
AnnotationAssertion(rdfs:comment :bridgeCarries "Type of vehicles the bridge carries."@en)
AnnotationAssertion(rdfs:label :bridgeCarries "bridge carries"@en)
DataPropertyDomain(:bridgeCarries :Bridge)
DataPropertyRange(:bridgeCarries xsd:string)
Declaration(DataProperty(:broadcastRepeater))
AnnotationAssertion(rdfs:label :broadcastRepeater "broadcast repeater"@en)
AnnotationAssertion(rdfs:label :broadcastRepeater "επαναληπτική αναμετάδοση"@el)
DataPropertyDomain(:broadcastRepeater :Broadcaster)
DataPropertyRange(:broadcastRepeater xsd:string)
Declaration(DataProperty(:broadcastStationClass))
AnnotationAssertion(rdfs:label :broadcastStationClass "broadcast station class"@en)
AnnotationAssertion(rdfs:label :broadcastStationClass "αναμετάδοση ραδιοφωνικού σταθμού"@el)
DataPropertyDomain(:broadcastStationClass :Broadcaster)
DataPropertyRange(:broadcastStationClass xsd:string)
Declaration(DataProperty(:broadcastTranslator))
AnnotationAssertion(rdfs:label :broadcastTranslator "broadcast translator"@en)
AnnotationAssertion(rdfs:label :broadcastTranslator "αναμετάδοση μεταφραστή"@el)
DataPropertyDomain(:broadcastTranslator :Broadcaster)
DataPropertyRange(:broadcastTranslator xsd:string)
Declaration(DataProperty(:budget))
AnnotationAssertion(rdfs:label :budget "προϋπολογισμός ($)"@el)
AnnotationAssertion(rdfs:label :budget "budget ($)"@nl)
AnnotationAssertion(rdfs:label :budget "budget ($)"@en)
DataPropertyRange(:budget xsd:double)
Declaration(DataProperty(:budgetYear))
AnnotationAssertion(rdfs:label :budgetYear "budget year"@en)
DataPropertyDomain(:budgetYear :Place)
DataPropertyRange(:budgetYear xsd:string)
Declaration(DataProperty(:buildingEndDate))
AnnotationAssertion(rdfs:label :buildingEndDate "building end date"@en)
AnnotationAssertion(rdfs:label :buildingEndDate "Ημερομηνία λήξης κατασκευής"@el)
DataPropertyDomain(:buildingEndDate :ArchitecturalStructure)
DataPropertyRange(:buildingEndDate xsd:date)
Declaration(DataProperty(:buildingEndYear))
AnnotationAssertion(rdfs:label :buildingEndYear "building end year"@en)
AnnotationAssertion(rdfs:label :buildingEndYear "έτος λήξης κατασκευής"@el)
AnnotationAssertion(rdfs:label :buildingEndYear "bouw eindjaar"@nl)
DataPropertyDomain(:buildingEndYear :ArchitecturalStructure)
DataPropertyRange(:buildingEndYear xsd:gYear)
Declaration(DataProperty(:buildingStartDate))
AnnotationAssertion(rdfs:label :buildingStartDate "Ημερομηνία έναρξης κατασκευής"@el)
AnnotationAssertion(rdfs:label :buildingStartDate "building start date"@en)
DataPropertyDomain(:buildingStartDate :ArchitecturalStructure)
DataPropertyRange(:buildingStartDate xsd:date)
Declaration(DataProperty(:buildingStartYear))
AnnotationAssertion(rdfs:label :buildingStartYear "έτος έναρξης κατασκευής"@el)
AnnotationAssertion(rdfs:label :buildingStartYear "building start year"@en)
AnnotationAssertion(rdfs:label :buildingStartYear "bouw start jaar"@nl)
DataPropertyDomain(:buildingStartYear :ArchitecturalStructure)
DataPropertyRange(:buildingStartYear xsd:gYear)
Declaration(DataProperty(:bustSize))
AnnotationAssertion(rdfs:label :bustSize "Μέγεθος προτομής (μ)"@el)
AnnotationAssertion(rdfs:label :bustSize "bust size (μ)"@en)
AnnotationAssertion(rdfs:label :bustSize "バスト (μ)"@ja)
DataPropertyDomain(:bustSize :Person)
DataPropertyRange(:bustSize xsd:double)
Declaration(DataProperty(:cableCar))
AnnotationAssertion(rdfs:label :cableCar "cable car"@en)
DataPropertyDomain(:cableCar :Place)
DataPropertyRange(:cableCar xsd:nonNegativeInteger)
Declaration(DataProperty(:calabrianName))
AnnotationAssertion(rdfs:label :calabrianName "city calabrian name"@en)
DataPropertyDomain(:calabrianName :PopulatedPlace)
DataPropertyRange(:calabrianName xsd:string)
Declaration(DataProperty(:callSign))
AnnotationAssertion(rdfs:label :callSign "indicativo de chamada"@pt)
AnnotationAssertion(rdfs:label :callSign "call sign"@en)
AnnotationAssertion(rdfs:comment :callSign "A call sign is not the name of a broadcaster! In broadcasting and radio communications, a call sign (also known as a call name or call letters, or abbreviated as a call) is a unique designation for a transmitting station."@en)
AnnotationAssertion(rdfs:comment :callSign "Indicativo de chamada (também chamado de call-sign, call letters ou simplesmente call) é uma designação única de uma estação de transmissão de rádio. Também é conhecido, de forma errônea, como prefixo."@pt)
DataPropertyRange(:callSign xsd:string)
Declaration(DataProperty(:callsignMeaning))
AnnotationAssertion(rdfs:comment :callsignMeaning "The out written call sign."@en)
AnnotationAssertion(rdfs:label :callsignMeaning "call sign meaning"@en)
DataPropertyDomain(:callsignMeaning :Broadcaster)
DataPropertyRange(:callsignMeaning xsd:string)
Declaration(DataProperty(:campusSize))
AnnotationAssertion(rdfs:label :campusSize "campus size (m2)"@en)
DataPropertyDomain(:campusSize :School)
DataPropertyRange(:campusSize xsd:double)
Declaration(DataProperty(:campusType))
AnnotationAssertion(rdfs:label :campusType "campus type"@en)
DataPropertyDomain(:campusType :School)
DataPropertyRange(:campusType xsd:string)
Declaration(DataProperty(:canBaggageChecked))
AnnotationAssertion(rdfs:label :canBaggageChecked "can baggage checked"@en)
AnnotationAssertion(rdfs:label :canBaggageChecked "Gepäckkontrolle möglich"@de)
AnnotationAssertion(rdfs:comment :canBaggageChecked "Whether bags can be checked."@en)
DataPropertyDomain(:canBaggageChecked :Station)
DataPropertyRange(:canBaggageChecked xsd:boolean)
Declaration(DataProperty(:cannonNumber))
AnnotationAssertion(rdfs:label :cannonNumber "cannon number"@en)
DataPropertyDomain(:cannonNumber :Place)
DataPropertyRange(:cannonNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:canonizedDate))
AnnotationAssertion(rdfs:label :canonizedDate "canonized date"@en)
AnnotationAssertion(rdfs:label :canonizedDate "heiligverklaring datum"@nl)
DataPropertyDomain(:canonizedDate :Saint)
DataPropertyRange(:canonizedDate xsd:date)
Declaration(DataProperty(:capacity))
AnnotationAssertion(rdfs:label :capacity "capacity"@en)
AnnotationAssertion(rdfs:label :capacity "capacité"@fr)
DataPropertyDomain(:capacity :SoccerClub)
DataPropertyRange(:capacity xsd:nonNegativeInteger)
Declaration(DataProperty(:capitalCoordinates))
AnnotationAssertion(rdfs:label :capitalCoordinates "capital coordinates"@en)
DataPropertyDomain(:capitalCoordinates :Place)
DataPropertyRange(:capitalCoordinates xsd:string)
Declaration(DataProperty(:capitalElevation))
AnnotationAssertion(rdfs:label :capitalElevation "capital elevation (μ)"@en)
DataPropertyDomain(:capitalElevation :Island)
DataPropertyRange(:capitalElevation xsd:double)
Declaration(DataProperty(:captureDate))
AnnotationAssertion(rdfs:label :captureDate "capture date"@en)
DataPropertyDomain(:captureDate :Ship)
DataPropertyRange(:captureDate xsd:date)
Declaration(DataProperty(:carNumber))
AnnotationAssertion(rdfs:label :carNumber "car number"@en)
DataPropertyDomain(:carNumber :FormulaOneRacer)
DataPropertyRange(:carNumber xsd:integer)
Declaration(DataProperty(:careerPoints))
AnnotationAssertion(rdfs:label :careerPoints "career points"@en)
DataPropertyDomain(:careerPoints :FormulaOneRacer)
DataPropertyRange(:careerPoints xsd:integer)
Declaration(DataProperty(:careerPrizeMoney))
AnnotationAssertion(rdfs:label :careerPrizeMoney "prijzengeld loopbaan ($)"@nl)
AnnotationAssertion(rdfs:label :careerPrizeMoney "career prize money ($)"@en)
DataPropertyDomain(:careerPrizeMoney :TennisPlayer)
DataPropertyRange(:careerPrizeMoney xsd:double)
Declaration(DataProperty(:cargoFuel))
AnnotationAssertion(rdfs:label :cargoFuel "cargo fuel (g)"@en)
DataPropertyDomain(:cargoFuel :Spacecraft)
DataPropertyRange(:cargoFuel xsd:double)
Declaration(DataProperty(:cargoGas))
AnnotationAssertion(rdfs:label :cargoGas "cargo gas (g)"@en)
DataPropertyDomain(:cargoGas :Spacecraft)
DataPropertyRange(:cargoGas xsd:double)
Declaration(DataProperty(:cargoWater))
AnnotationAssertion(rdfs:label :cargoWater "cargo water (g)"@en)
DataPropertyDomain(:cargoWater :Spacecraft)
DataPropertyRange(:cargoWater xsd:double)
Declaration(DataProperty(:casNumber))
AnnotationAssertion(rdfs:label :casNumber "CAS番号"@ja)
AnnotationAssertion(rdfs:label :casNumber "numéro CAS"@fr)
AnnotationAssertion(rdfs:label :casNumber "CAS number"@en)
DataPropertyDomain(:casNumber :ChemicalCompound)
DataPropertyRange(:casNumber xsd:string)
Declaration(DataProperty(:casSupplemental))
AnnotationAssertion(rdfs:label :casSupplemental "CAS supplemental"@en)
DataPropertyRange(:casSupplemental xsd:string)
Declaration(DataProperty(:casualties))
AnnotationAssertion(rdfs:label :casualties "casualties"@en)
AnnotationAssertion(rdfs:label :casualties "pertes"@fr)
DataPropertyRange(:casualties xsd:integer)
Declaration(DataProperty(:catholicPercentage))
AnnotationAssertion(rdfs:label :catholicPercentage "catholic percentage"@en)
DataPropertyDomain(:catholicPercentage :PopulatedPlace)
DataPropertyRange(:catholicPercentage xsd:string)
Declaration(DataProperty(:causalties))
AnnotationAssertion(rdfs:label :causalties "causalties"@en)
DataPropertyDomain(:causalties :MilitaryConflict)
DataPropertyRange(:causalties xsd:string)
Declaration(DataProperty(:ccaState))
AnnotationAssertion(rdfs:label :ccaState "cca state"@en)
DataPropertyDomain(:ccaState :PopulatedPlace)
DataPropertyRange(:ccaState xsd:string)
Declaration(DataProperty(:ceeb))
AnnotationAssertion(rdfs:label :ceeb "ceeb"@en)
DataPropertyDomain(:ceeb :School)
DataPropertyRange(:ceeb xsd:string)
Declaration(DataProperty(:censusYear))
AnnotationAssertion(rdfs:label :censusYear "Zensusjahr"@de)
AnnotationAssertion(rdfs:label :censusYear "census year"@en)
AnnotationAssertion(rdfs:label :censusYear "έτος απογραφής"@el)
DataPropertyDomain(:censusYear :PopulatedPlace)
DataPropertyRange(:censusYear xsd:gYear)
Declaration(DataProperty(:center))
AnnotationAssertion(rdfs:label :center "norwegian center"@en)
DataPropertyRange(:center xsd:string)
Declaration(DataProperty(:centuryBreaks))
AnnotationAssertion(rdfs:label :centuryBreaks "Century Breaks"@de)
AnnotationAssertion(rdfs:label :centuryBreaks "century breaks"@en)
AnnotationAssertion(rdfs:comment :centuryBreaks "number of breaks with 100 points and more"@en)
AnnotationAssertion(rdfs:comment :centuryBreaks "Anzahl Breaks mit 100 Punkten oder mehr, wird nicht übersetzt"@de)
DataPropertyDomain(:centuryBreaks :SnookerPlayer)
DataPropertyRange(:centuryBreaks xsd:integer)
Declaration(DataProperty(:certification))
AnnotationAssertion(rdfs:label :certification "certification"@en)
AnnotationAssertion(rdfs:label :certification "certification"@fr)
DataPropertyDomain(:certification :Single)
DataPropertyRange(:certification xsd:string)
Declaration(DataProperty(:certificationDate))
AnnotationAssertion(rdfs:label :certificationDate "certification date"@en)
AnnotationAssertion(rdfs:label :certificationDate "datum certificatie"@nl)
DataPropertyDomain(:certificationDate :Single)
DataPropertyRange(:certificationDate xsd:date)
Declaration(DataProperty(:chEBI))
AnnotationAssertion(rdfs:label :chEBI "ChEBI"@en)
AnnotationAssertion(rdfs:comment :chEBI "A unique identifier for the drug in the Chemical Entities of Biological Interest (ChEBI) ontology"@en)
DataPropertyDomain(:chEBI :Drug)
DataPropertyRange(:chEBI xsd:string)
Declaration(DataProperty(:chairmanTitle))
AnnotationAssertion(rdfs:label :chairmanTitle "chairman title"@en)
DataPropertyDomain(:chairmanTitle :SoccerClub)
DataPropertyRange(:chairmanTitle xsd:string)
Declaration(DataProperty(:championships))
AnnotationAssertion(rdfs:label :championships "championships"@en)
DataPropertyDomain(:championships :FormulaOneRacer)
DataPropertyRange(:championships xsd:nonNegativeInteger)
Declaration(DataProperty(:chaouiSettlementName))
AnnotationAssertion(rdfs:label :chaouiSettlementName "chaoui settlement name"@en)
DataPropertyRange(:chaouiSettlementName xsd:string)
Declaration(DataProperty(:characterInPlay))
AnnotationAssertion(rdfs:comment :characterInPlay "Name of a character in play."@en)
AnnotationAssertion(rdfs:label :characterInPlay "character in play"@en)
DataPropertyDomain(:characterInPlay :Play)
DataPropertyRange(:characterInPlay xsd:string)
Declaration(DataProperty(:chorusCharacterInPlay))
AnnotationAssertion(rdfs:comment :chorusCharacterInPlay "The name of the (Greek) chorus character in play."@en)
AnnotationAssertion(rdfs:label :chorusCharacterInPlay "chorus character in play"@en)
DataPropertyDomain(:chorusCharacterInPlay :Play)
DataPropertyRange(:chorusCharacterInPlay xsd:string)
Declaration(DataProperty(:christeningDate))
AnnotationAssertion(rdfs:label :christeningDate "date of christening"@en)
AnnotationAssertion(rdfs:label :christeningDate "doopdatum"@nl)
DataPropertyDomain(:christeningDate :Ship)
DataPropertyRange(:christeningDate xsd:date)
Declaration(DataProperty(:chromosome))
AnnotationAssertion(rdfs:label :chromosome "染色体"@ja)
AnnotationAssertion(rdfs:label :chromosome "chromosome"@en)
AnnotationAssertion(rdfs:label :chromosome "χρωμόσωμα"@el)
DataPropertyDomain(:chromosome :Protein)
DataPropertyRange(:chromosome xsd:string)
Declaration(DataProperty(:circle))
AnnotationAssertion(rdfs:label :circle "region"@en)
DataPropertyDomain(:circle :PopulatedPlace)
DataPropertyRange(:circle xsd:string)
Declaration(DataProperty(:circuitLength))
AnnotationAssertion(rdfs:label :circuitLength "circuit length (μ)"@en)
DataPropertyDomain(:circuitLength :FormulaOneRacing)
DataPropertyRange(:circuitLength xsd:double)
Declaration(DataProperty(:circuitName))
AnnotationAssertion(rdfs:label :circuitName "circuit name"@en)
DataPropertyDomain(:circuitName :FormulaOneRacing)
DataPropertyRange(:circuitName xsd:string)
Declaration(DataProperty(:circulation))
AnnotationAssertion(rdfs:label :circulation "oplage"@nl)
AnnotationAssertion(rdfs:label :circulation "κυκλοφορία"@el)
AnnotationAssertion(rdfs:label :circulation "circulation"@en)
DataPropertyDomain(:circulation :WrittenWork)
DataPropertyRange(:circulation xsd:nonNegativeInteger)
Declaration(DataProperty(:cityLink))
AnnotationAssertion(rdfs:label :cityLink "city link"@en)
DataPropertyDomain(:cityLink :Place)
DataPropertyRange(:cityLink xsd:string)
Declaration(DataProperty(:cityRank))
AnnotationAssertion(rdfs:label :cityRank "Rang Stadt"@de)
AnnotationAssertion(rdfs:comment :cityRank "Place of the building in the list of the highest buildings in the city"@en)
AnnotationAssertion(rdfs:label :cityRank "city rank"@en)
AnnotationAssertion(rdfs:comment :cityRank "Der Platz des Gebäudes in der Liste der höchsten Gebäude der Stadt"@de)
DataPropertyDomain(:cityRank :Skyscraper)
DataPropertyRange(:cityRank xsd:nonNegativeInteger)
Declaration(DataProperty(:citySince))
AnnotationAssertion(rdfs:label :citySince "city since"@en)
DataPropertyDomain(:citySince :PopulatedPlace)
DataPropertyRange(:citySince xsd:string)
Declaration(DataProperty(:cityType))
AnnotationAssertion(rdfs:label :cityType "city type"@en)
AnnotationAssertion(rdfs:label :cityType "type stad"@nl)
AnnotationAssertion(rdfs:label :cityType "τύπος"@el)
DataPropertyDomain(:cityType :PopulatedPlace)
DataPropertyRange(:cityType xsd:string)
Declaration(DataProperty(:classes))
AnnotationAssertion(rdfs:label :classes "τάξεις"@el)
AnnotationAssertion(rdfs:label :classes "classes"@en)
DataPropertyDomain(:classes :School)
DataPropertyRange(:classes xsd:nonNegativeInteger)
Declaration(DataProperty(:classification))
AnnotationAssertion(rdfs:label :classification "classification"@en)
AnnotationAssertion(rdfs:label :classification "categorie"@nl)
DataPropertyDomain(:classification :Instrument)
DataPropertyRange(:classification xsd:string)
Declaration(DataProperty(:climbUpNumber))
AnnotationAssertion(rdfs:label :climbUpNumber "clip up number"@en)
DataPropertyDomain(:climbUpNumber :Place)
DataPropertyRange(:climbUpNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:closed))
AnnotationAssertion(rdfs:label :closed "gesloten"@nl)
AnnotationAssertion(rdfs:label :closed "closed"@en)
DataPropertyDomain(:closed :EducationalInstitution)
DataPropertyRange(:closed xsd:date)
Declaration(DataProperty(:closingDate))
AnnotationAssertion(rdfs:label :closingDate "closing date"@en)
AnnotationAssertion(rdfs:label :closingDate "date de fermeture"@fr)
AnnotationAssertion(rdfs:label :closingDate "ημερομηνία κλεισίματος"@el)
DataPropertyRange(:closingDate xsd:date)
Declaration(DataProperty(:closingYear))
AnnotationAssertion(rdfs:label :closingYear "Sluitingsjaar"@nl)
AnnotationAssertion(rdfs:label :closingYear "Schließungsjahr"@de)
AnnotationAssertion(rdfs:label :closingYear "closing year"@en)
DataPropertyRange(:closingYear xsd:gYear)
Declaration(DataProperty(:cmpEvaDuration))
AnnotationAssertion(rdfs:label :cmpEvaDuration "CMP EVA duration (s)"@en)
DataPropertyDomain(:cmpEvaDuration :SpaceMission)
DataPropertyRange(:cmpEvaDuration xsd:double)
Declaration(DataProperty(:cmykCoordinateBlack))
AnnotationAssertion(rdfs:label :cmykCoordinateBlack "black coordinate in the CMYK space"@en)
DataPropertyDomain(:cmykCoordinateBlack :Colour)
DataPropertyRange(:cmykCoordinateBlack xsd:integer)
Declaration(DataProperty(:cmykCoordinateCyanic))
AnnotationAssertion(rdfs:label :cmykCoordinateCyanic "cyanic coordinate in the CMYK space"@en)
DataPropertyDomain(:cmykCoordinateCyanic :Colour)
DataPropertyRange(:cmykCoordinateCyanic xsd:integer)
Declaration(DataProperty(:cmykCoordinateMagenta))
AnnotationAssertion(rdfs:label :cmykCoordinateMagenta "magenta coordinate in the CMYK space"@en)
DataPropertyDomain(:cmykCoordinateMagenta :Colour)
DataPropertyRange(:cmykCoordinateMagenta xsd:integer)
Declaration(DataProperty(:cmykCoordinateYellow))
AnnotationAssertion(rdfs:label :cmykCoordinateYellow "yellow coordinate in the CMYK space"@en)
DataPropertyDomain(:cmykCoordinateYellow :Colour)
DataPropertyRange(:cmykCoordinateYellow xsd:integer)
Declaration(DataProperty(:co2Emission))
AnnotationAssertion(rdfs:label :co2Emission "CO2 emission (g/km)"@en)
FunctionalDataProperty(:co2Emission)
DataPropertyDomain(:co2Emission :AutomobileEngine)
DataPropertyRange(:co2Emission xsd:double)
Declaration(DataProperty(:coachingRecord))
AnnotationAssertion(rdfs:label :coachingRecord "coaching record"@en)
DataPropertyDomain(:coachingRecord :CollegeCoach)
DataPropertyRange(:coachingRecord xsd:string)
Declaration(DataProperty(:coastLength))
AnnotationAssertion(rdfs:label :coastLength "length of a coast"@en)
DataPropertyDomain(:coastLength :Place)
DataPropertyRange(:coastLength xsd:float)
Declaration(DataProperty(:coastLine))
AnnotationAssertion(rdfs:label :coastLine "coast line (μ)"@en)
DataPropertyDomain(:coastLine :Settlement)
DataPropertyRange(:coastLine xsd:double)
Declaration(DataProperty(:code))
AnnotationAssertion(rdfs:label :code "code"@en)
AnnotationAssertion(rdfs:label :code "code"@nl)
DataPropertyRange(:code xsd:string)
Declaration(DataProperty(:codeBook))
AnnotationAssertion(rdfs:label :codeBook "wetboek"@nl)
AnnotationAssertion(rdfs:label :codeBook "code book"@en)
AnnotationAssertion(rdfs:comment :codeBook "code book or statute book referred to in this legal case"@en)
DataPropertyDomain(:codeBook :LegalCase)
DataPropertyRange(:codeBook xsd:string)
Declaration(DataProperty(:codeLandRegistry))
AnnotationAssertion(rdfs:label :codeLandRegistry "kadastercode"@nl)
AnnotationAssertion(rdfs:comment :codeLandRegistry "Land Registry code designating a parcel of land"@en)
AnnotationAssertion(rdfs:label :codeLandRegistry "code land registry"@en)
AnnotationAssertion(rdfs:comment :codeLandRegistry "Kadastercode voor een perceel"@nl)
DataPropertyDomain(:codeLandRegistry :Place)
DataPropertyRange(:codeLandRegistry xsd:string)
Declaration(DataProperty(:codeMemorial))
AnnotationAssertion(rdfs:comment :codeMemorial "Identifier for monuments of the Memorial type"@en)
AnnotationAssertion(rdfs:comment :codeMemorial "Code oorlogsmonument of ander gedenkteken"@nl)
AnnotationAssertion(rdfs:label :codeMemorial "code gedenkteken"@nl)
AnnotationAssertion(rdfs:label :codeMemorial "memorial ID number"@en)
DataPropertyDomain(:codeMemorial :Memorial)
DataPropertyRange(:codeMemorial xsd:string)
Declaration(DataProperty(:codeMunicipalMonument))
AnnotationAssertion(rdfs:comment :codeMunicipalMonument "We should be able to distinguish status types since different codes refer to different protection regimes."@en)
AnnotationAssertion(rdfs:label :codeMunicipalMonument "monumentcode gemeentelijke monumenten"@nl)
AnnotationAssertion(rdfs:label :codeMunicipalMonument "monument code (municipal)"@en)
AnnotationAssertion(rdfs:comment :codeMunicipalMonument "We moeten soorten codes kunnen onderscheiden al naar gelang het een rijks-, provinciaal of gemeentelijk monument, of een MIP-code, betreft"@nl)
DataPropertyDomain(:codeMunicipalMonument :Place)
DataPropertyRange(:codeMunicipalMonument xsd:string)
Declaration(DataProperty(:codeNationalMonument))
AnnotationAssertion(rdfs:comment :codeNationalMonument "Code is te algemeen. We moeten soorten codes kunnen onderscheiden al naar gelang het een rijks-, provinciaal of gemeentelijk monument betreft"@nl)
AnnotationAssertion(rdfs:comment :codeNationalMonument "Code is too general. We should be able to distinguish status types since different codes refer to different protection regimes"@en)
AnnotationAssertion(rdfs:label :codeNationalMonument "monument code (national)"@en)
AnnotationAssertion(rdfs:label :codeNationalMonument "monumentcode rijksmonumenten"@nl)
DataPropertyDomain(:codeNationalMonument :Place)
DataPropertyRange(:codeNationalMonument xsd:string)
Declaration(DataProperty(:codeProvincialMonument))
AnnotationAssertion(rdfs:label :codeProvincialMonument "monument code (provinciall)"@en)
AnnotationAssertion(rdfs:comment :codeProvincialMonument "Code is too general. We should be able to distinguish status types since different codes refer to different protection regimes"@en)
AnnotationAssertion(rdfs:comment :codeProvincialMonument "Code is te algemeen. We moeten soorten codes kunnen onderscheiden al naar gelang het een rijks-, provinciaal of gemeentelijk monument betreft"@nl)
AnnotationAssertion(rdfs:label :codeProvincialMonument "monumentcode provinciale monumenten"@nl)
DataPropertyDomain(:codeProvincialMonument :Place)
DataPropertyRange(:codeProvincialMonument xsd:string)
Declaration(DataProperty(:codeSettlement))
AnnotationAssertion(rdfs:label :codeSettlement "settlement code"@en)
DataPropertyDomain(:codeSettlement :Settlement)
DataPropertyRange(:codeSettlement xsd:string)
Declaration(DataProperty(:coden))
AnnotationAssertion(rdfs:label :coden "CODEN"@en)
AnnotationAssertion(rdfs:comment :coden "CODEN is a six character, alphanumeric bibliographic code, that provides concise, unique and unambiguous identification of the titles of serials and non-serial publications from all subject areas."@en)
DataPropertyDomain(:coden :WrittenWork)
DataPropertyRange(:coden xsd:string)
Declaration(DataProperty(:collection))
AnnotationAssertion(rdfs:label :collection "συλλογή"@el)
AnnotationAssertion(rdfs:label :collection "collection"@en)
DataPropertyDomain(:collection :Museum)
DataPropertyRange(:collection xsd:string)
Declaration(DataProperty(:collectivityMinority))
AnnotationAssertion(rdfs:label :collectivityMinority "collectivity minority of a settlement"@en)
DataPropertyDomain(:collectivityMinority :Settlement)
DataPropertyRange(:collectivityMinority xsd:string)
Declaration(DataProperty(:colonialName))
AnnotationAssertion(rdfs:label :colonialName "colonial name"@en)
DataPropertyDomain(:colonialName :PopulatedPlace)
DataPropertyRange(:colonialName xsd:string)
Declaration(DataProperty(:colorChart))
AnnotationAssertion(rdfs:label :colorChart "colorChart"@en)
DataPropertyDomain(:colorChart :FictionalCharacter)
DataPropertyRange(:colorChart xsd:string)
Declaration(DataProperty(:colourHexCode))
AnnotationAssertion(rdfs:label :colourHexCode "Farben Hex Code"@de)
AnnotationAssertion(rdfs:comment :colourHexCode "A colour represented by its hex code (e.g.: #FF0000 or #40E0D0)."@en)
AnnotationAssertion(rdfs:label :colourHexCode "colour hex code"@en)
DataPropertyRange(:colourHexCode xsd:string)
Declaration(DataProperty(:colourName))
AnnotationAssertion(rdfs:comment :colourName "A colour represented by a string holding its name (e.g.: red or green)."@en)
AnnotationAssertion(rdfs:label :colourName "色名"@en)
AnnotationAssertion(rdfs:label :colourName "Farbenname"@de)
AnnotationAssertion(rdfs:label :colourName "nom de couleur"@fr)
DataPropertyRange(:colourName xsd:string)
Declaration(DataProperty(:combatant))
AnnotationAssertion(rdfs:label :combatant "combatant"@en)
DataPropertyDomain(:combatant :MilitaryConflict)
DataPropertyRange(:combatant xsd:string)
Declaration(DataProperty(:comitat))
AnnotationAssertion(rdfs:label :comitat "comitat of a settlement"@en)
DataPropertyRange(:comitat xsd:string)
Declaration(DataProperty(:command))
AnnotationAssertion(rdfs:label :command "command"@en)
DataPropertyDomain(:command :MilitaryPerson)
DataPropertyRange(:command xsd:string)
Declaration(DataProperty(:commandModule))
AnnotationAssertion(rdfs:label :commandModule "command module"@en)
DataPropertyDomain(:commandModule :SpaceMission)
DataPropertyRange(:commandModule xsd:string)
Declaration(DataProperty(:comment))
AnnotationAssertion(rdfs:label :comment "comment"@en)
DataPropertyRange(:comment xsd:string)
Declaration(DataProperty(:commissioner))
AnnotationAssertion(rdfs:label :commissioner "commissioner"@en)
DataPropertyDomain(:commissioner :PopulatedPlace)
DataPropertyRange(:commissioner xsd:string)
Declaration(DataProperty(:commissionerDate))
AnnotationAssertion(rdfs:label :commissionerDate "commissioner date"@en)
DataPropertyDomain(:commissionerDate :PopulatedPlace)
DataPropertyRange(:commissionerDate xsd:string)
Declaration(DataProperty(:commissioningDate))
AnnotationAssertion(rdfs:label :commissioningDate "commissioning date"@en)
DataPropertyDomain(:commissioningDate :Ship)
DataPropertyRange(:commissioningDate xsd:date)
Declaration(DataProperty(:committee))
AnnotationAssertion(rdfs:label :committee "committee"@en)
DataPropertyRange(:committee xsd:string)
Declaration(DataProperty(:commonName))
AnnotationAssertion(rdfs:comment :commonName "The common name of an entity. Frequently, foaf:name is used for all of the different names of a person; this property just defines the most commonly used name."@en)
AnnotationAssertion(rdfs:label :commonName "common name"@en)
DataPropertyRange(:commonName xsd:string)
Declaration(DataProperty(:communityIsoCode))
AnnotationAssertion(rdfs:label :communityIsoCode "iso code of a community"@en)
DataPropertyDomain(:communityIsoCode :PopulatedPlace)
DataPropertyRange(:communityIsoCode xsd:string)
Declaration(DataProperty(:completionDate))
AnnotationAssertion(rdfs:label :completionDate "datum van oplevering"@nl)
AnnotationAssertion(rdfs:label :completionDate "completion date"@en)
DataPropertyDomain(:completionDate :Work)
DataPropertyRange(:completionDate xsd:date)
Declaration(DataProperty(:compressionRatio))
AnnotationAssertion(rdfs:label :compressionRatio "compression ratio"@en)
DataPropertyDomain(:compressionRatio :AutomobileEngine)
DataPropertyRange(:compressionRatio xsd:string)
Declaration(DataProperty(:configuration))
AnnotationAssertion(rdfs:label :configuration "configuration"@en)
AnnotationAssertion(rdfs:label :configuration "configuration"@fr)
DataPropertyDomain(:configuration :AutomobileEngine)
Declaration(DataProperty(:conflict))
AnnotationAssertion(rdfs:label :conflict "title"@en)
DataPropertyRange(:conflict xsd:string)
Declaration(DataProperty(:conservationStatus))
AnnotationAssertion(rdfs:label :conservationStatus "conservation status"@en)
AnnotationAssertion(rdfs:label :conservationStatus "保全状況"@ja)
DataPropertyDomain(:conservationStatus :Species)
DataPropertyRange(:conservationStatus xsd:string)
Declaration(DataProperty(:conservationStatusSystem))
AnnotationAssertion(rdfs:label :conservationStatusSystem "conservation status system"@en)
DataPropertyDomain(:conservationStatusSystem :Species)
DataPropertyRange(:conservationStatusSystem xsd:string)
Declaration(DataProperty(:continentRank))
AnnotationAssertion(rdfs:comment :continentRank "Der Platz des Gebäudes in der Liste der höchsten Gebäude des Kontinents"@de)
AnnotationAssertion(rdfs:comment :continentRank "Place of the building in the list of the highest buildings in the continent"@en)
AnnotationAssertion(rdfs:label :continentRank "continent rank"@en)
AnnotationAssertion(rdfs:label :continentRank "Rang Kontinent"@de)
DataPropertyDomain(:continentRank :Skyscraper)
DataPropertyRange(:continentRank xsd:nonNegativeInteger)
Declaration(DataProperty(:contractAward))
AnnotationAssertion(rdfs:label :contractAward "contract award"@en)
DataPropertyDomain(:contractAward :SpaceShuttle)
DataPropertyRange(:contractAward xsd:date)
Declaration(DataProperty(:coordinates))
AnnotationAssertion(rdfs:label :coordinates "geographic coordinates"@en)
DataPropertyDomain(:coordinates :Place)
DataPropertyRange(:coordinates xsd:string)
Declaration(DataProperty(:cornishName))
AnnotationAssertion(rdfs:label :cornishName "cornish naam"@nl)
AnnotationAssertion(rdfs:label :cornishName "cornish name"@en)
DataPropertyDomain(:cornishName :Settlement)
DataPropertyRange(:cornishName xsd:string)
Declaration(DataProperty(:coronationDate))
AnnotationAssertion(rdfs:label :coronationDate "kroningsdatum"@nl)
AnnotationAssertion(rdfs:label :coronationDate "coronation date"@en)
DataPropertyDomain(:coronationDate :Royalty)
DataPropertyRange(:coronationDate xsd:date)
Declaration(DataProperty(:cosparId))
AnnotationAssertion(rdfs:label :cosparId "COSPAR id"@en)
DataPropertyRange(:cosparId xsd:integer)
Declaration(DataProperty(:cost))
AnnotationAssertion(rdfs:label :cost "kosten ($)"@nl)
AnnotationAssertion(rdfs:label :cost "cost ($)"@en)
AnnotationAssertion(rdfs:label :cost "κόστος ($)"@el)
DataPropertyDomain(:cost :ArchitecturalStructure)
DataPropertyRange(:cost xsd:double)
Declaration(DataProperty(:council))
AnnotationAssertion(rdfs:label :council "council of a liechtenstein settlement"@en)
DataPropertyRange(:council xsd:string)
Declaration(DataProperty(:countryRank))
AnnotationAssertion(rdfs:comment :countryRank "Place of the building in the list of the highest buildings in the country"@en)
AnnotationAssertion(rdfs:comment :countryRank "Der Platz des Gebäudes in der Liste der höchsten Gebäude des Landes"@de)
AnnotationAssertion(rdfs:label :countryRank "Rang Land"@de)
AnnotationAssertion(rdfs:label :countryRank "country rank"@en)
DataPropertyDomain(:countryRank :Skyscraper)
DataPropertyRange(:countryRank xsd:nonNegativeInteger)
Declaration(DataProperty(:course))
AnnotationAssertion(rdfs:label :course "course (μ)"@en)
DataPropertyDomain(:course :GrandPrix)
DataPropertyRange(:course xsd:double)
Declaration(DataProperty(:creationYear))
AnnotationAssertion(rdfs:label :creationYear "jaar van creatie"@nl)
AnnotationAssertion(rdfs:label :creationYear "year of creation"@en)
DataPropertyRange(:creationYear xsd:gYear)
Declaration(DataProperty(:credit))
AnnotationAssertion(rdfs:label :credit "credit"@en)
DataPropertyRange(:credit xsd:string)
Declaration(DataProperty(:crewSize))
AnnotationAssertion(rdfs:label :crewSize "crew size"@en)
DataPropertyDomain(:crewSize :SpaceMission)
DataPropertyRange(:crewSize xsd:nonNegativeInteger)
Declaration(DataProperty(:crews))
AnnotationAssertion(rdfs:label :crews "crews"@en)
DataPropertyDomain(:crews :SpaceShuttle)
DataPropertyRange(:crews xsd:nonNegativeInteger)
Declaration(DataProperty(:criteria))
AnnotationAssertion(rdfs:label :criteria "criteria"@en)
AnnotationAssertion(rdfs:label :criteria "critério"@pt)
DataPropertyRange(:criteria xsd:string)
Declaration(DataProperty(:crownDependency))
AnnotationAssertion(rdfs:label :crownDependency "crown dependency"@en)
DataPropertyDomain(:crownDependency :City)
DataPropertyRange(:crownDependency xsd:string)
Declaration(DataProperty(:cuisine))
AnnotationAssertion(rdfs:label :cuisine "κουζίνα"@el)
AnnotationAssertion(rdfs:label :cuisine "cuisine"@en)
AnnotationAssertion(rdfs:label :cuisine "cuisine"@fr)
AnnotationAssertion(rdfs:label :cuisine "keuken"@nl)
DataPropertyDomain(:cuisine :Restaurant)
DataPropertyRange(:cuisine xsd:string)
Declaration(DataProperty(:currencyCode))
AnnotationAssertion(rdfs:comment :currencyCode "ISO 4217 currency designators."@en)
AnnotationAssertion(rdfs:label :currencyCode "currency code"@en)
DataPropertyDomain(:currencyCode :Place)
DataPropertyRange(:currencyCode xsd:string)
Declaration(DataProperty(:currentRank))
AnnotationAssertion(rdfs:label :currentRank "current rank"@en)
AnnotationAssertion(rdfs:label :currentRank "aktueller Ranglistenplatz"@de)
DataPropertyDomain(:currentRank :SnookerPlayer)
DataPropertyRange(:currentRank xsd:integer)
Declaration(DataProperty(:currentRecord))
AnnotationAssertion(rdfs:label :currentRecord "current record"@en)
DataPropertyDomain(:currentRecord :CollegeCoach)
DataPropertyRange(:currentRecord xsd:string)
Declaration(DataProperty(:currentSeason))
AnnotationAssertion(rdfs:label :currentSeason "current season"@en)
AnnotationAssertion(rdfs:label :currentSeason "Τρέχον Περίοδος"@el)
DataPropertyDomain(:currentSeason :SportsLeague)
DataPropertyRange(:currentSeason xsd:string)
Declaration(DataProperty(:currentStatus))
AnnotationAssertion(rdfs:label :currentStatus "current status"@en)
AnnotationAssertion(rdfs:label :currentStatus "huidige status"@nl)
DataPropertyRange(:currentStatus xsd:string)
Declaration(DataProperty(:currentlyUsedFor))
AnnotationAssertion(rdfs:label :currentlyUsedFor "usage actuel"@fr)
AnnotationAssertion(rdfs:label :currentlyUsedFor "currently used for"@en)
AnnotationAssertion(rdfs:label :currentlyUsedFor "huidig gebruik"@nl)
AnnotationAssertion(rdfs:comment :currentlyUsedFor "Current use of the architectural structure, if it is currently being used as anything other than its original purpose."@en)
AnnotationAssertion(rdfs:label :currentlyUsedFor "uso actual"@es)
DataPropertyDomain(:currentlyUsedFor :ArchitecturalStructure)
DataPropertyRange(:currentlyUsedFor xsd:string)
Declaration(DataProperty(:cylinderBore))
AnnotationAssertion(rdfs:label :cylinderBore "cylinder bore (μ)"@en)
DataPropertyDomain(:cylinderBore :AutomobileEngine)
DataPropertyRange(:cylinderBore xsd:double)
Declaration(DataProperty(:cylinderCount))
AnnotationAssertion(rdfs:label :cylinderCount "cylinder count"@en)
DataPropertyDomain(:cylinderCount :Locomotive)
DataPropertyRange(:cylinderCount xsd:nonNegativeInteger)
Declaration(DataProperty(:cyrilliqueName))
AnnotationAssertion(rdfs:label :cyrilliqueName "cyrillique name"@en)
DataPropertyDomain(:cyrilliqueName :PopulatedPlace)
DataPropertyRange(:cyrilliqueName xsd:string)
Declaration(DataProperty(:date))
AnnotationAssertion(rdfs:label :date "date"@en)
AnnotationAssertion(rdfs:label :date "ημερομηνία"@el)
AnnotationAssertion(rdfs:label :date "datum"@nl)
DataPropertyRange(:date xsd:date)
Declaration(DataProperty(:dateAct))
AnnotationAssertion(rdfs:label :dateAct "απόφαση_διάνοιξης"@el)
AnnotationAssertion(rdfs:label :dateAct "date act"@en)
DataPropertyDomain(:dateAct :Canal)
DataPropertyRange(:dateAct xsd:date)
Declaration(DataProperty(:dateAgreement))
AnnotationAssertion(rdfs:label :dateAgreement "date of an agreement"@en)
DataPropertyDomain(:dateAgreement :Place)
DataPropertyRange(:dateAgreement xsd:date)
Declaration(DataProperty(:dateBudget))
AnnotationAssertion(rdfs:label :dateBudget "date budget"@en)
DataPropertyRange(:dateBudget xsd:date)
Declaration(DataProperty(:dateClosed))
AnnotationAssertion(rdfs:label :dateClosed "date closed"@en)
AnnotationAssertion(rdfs:label :dateClosed "τερματισμός_λειτουργίας"@el)
DataPropertyDomain(:dateClosed :Canal)
DataPropertyRange(:dateClosed xsd:date)
Declaration(DataProperty(:dateCompleted))
AnnotationAssertion(rdfs:label :dateCompleted "date completed"@en)
AnnotationAssertion(rdfs:label :dateCompleted "ολοκλήρωση"@el)
DataPropertyDomain(:dateCompleted :Canal)
DataPropertyRange(:dateCompleted xsd:date)
Declaration(DataProperty(:dateConstruction))
AnnotationAssertion(rdfs:label :dateConstruction "έναρξη_κατασκευής"@el)
AnnotationAssertion(rdfs:label :dateConstruction "date construction"@en)
DataPropertyDomain(:dateConstruction :Canal)
DataPropertyRange(:dateConstruction xsd:date)
Declaration(DataProperty(:dateExtended))
AnnotationAssertion(rdfs:label :dateExtended "επέκταση"@el)
AnnotationAssertion(rdfs:label :dateExtended "date extended"@en)
DataPropertyDomain(:dateExtended :Canal)
DataPropertyRange(:dateExtended xsd:date)
Declaration(DataProperty(:dateLastUpdated))
AnnotationAssertion(rdfs:label :dateLastUpdated "Date Last Updated"@en)
DataPropertyRange(:dateLastUpdated xsd:date)
Declaration(DataProperty(:dateOfAbandonment))
AnnotationAssertion(rdfs:label :dateOfAbandonment "date of abandonment"@en)
DataPropertyRange(:dateOfAbandonment xsd:date)
Declaration(DataProperty(:dateOfBurial))
AnnotationAssertion(rdfs:label :dateOfBurial "datum begrafenis"@nl)
AnnotationAssertion(rdfs:label :dateOfBurial "date of burial"@en)
DataPropertyDomain(:dateOfBurial :Person)
DataPropertyRange(:dateOfBurial xsd:date)
Declaration(DataProperty(:dateUnveiled))
AnnotationAssertion(rdfs:label :dateUnveiled "datum onthulling"@nl)
AnnotationAssertion(rdfs:label :dateUnveiled "date unveiled"@en)
AnnotationAssertion(rdfs:comment :dateUnveiled "Designates the unveiling date"@en)
AnnotationAssertion(rdfs:comment :dateUnveiled "Duidt de datum van onthulling aan"@nl)
DataPropertyDomain(:dateUnveiled :Monument)
DataPropertyRange(:dateUnveiled xsd:date)
Declaration(DataProperty(:dateUse))
AnnotationAssertion(rdfs:label :dateUse "έναρξη_χρήσης"@el)
AnnotationAssertion(rdfs:label :dateUse "date use"@en)
DataPropertyDomain(:dateUse :Canal)
DataPropertyRange(:dateUse xsd:date)
Declaration(DataProperty(:day))
AnnotationAssertion(rdfs:label :day "ημέρα"@el)
AnnotationAssertion(rdfs:label :day "day"@en)
AnnotationAssertion(rdfs:label :day "jour"@fr)
DataPropertyDomain(:day :Settlement)
DataPropertyRange(:day xsd:date)
Declaration(DataProperty(:dcc))
AnnotationAssertion(rdfs:label :dcc "Dewey Decimal Classification"@en)
AnnotationAssertion(rdfs:comment :dcc "The Dewey Decimal Classification is a proprietary system of library classification developed by Melvil Dewey in 1876."@en)
DataPropertyDomain(:dcc :Book)
DataPropertyRange(:dcc xsd:string)
Declaration(DataProperty(:deathAge))
AnnotationAssertion(rdfs:label :deathAge "death age"@en)
DataPropertyDomain(:deathAge :Person)
DataPropertyRange(:deathAge xsd:nonNegativeInteger)
Declaration(DataProperty(:deathDate))
AnnotationAssertion(rdfs:label :deathDate "没年月日"@ja)
AnnotationAssertion(rdfs:label :deathDate "death date"@en)
AnnotationAssertion(rdfs:label :deathDate "Sterbedatum"@de)
AnnotationAssertion(rdfs:label :deathDate "date de décès"@fr)
AnnotationAssertion(rdfs:label :deathDate "sterfdatum"@nl)
AnnotationAssertion(rdfs:label :deathDate "ημερομηνία_θανάτου"@el)
FunctionalDataProperty(:deathDate)
DataPropertyDomain(:deathDate :Person)
DataPropertyRange(:deathDate xsd:date)
Declaration(DataProperty(:deathYear))
AnnotationAssertion(rdfs:label :deathYear "没年"@ja)
AnnotationAssertion(rdfs:label :deathYear "jaar van overlijden"@nl)
AnnotationAssertion(rdfs:label :deathYear "death year"@en)
AnnotationAssertion(rdfs:label :deathYear "Sterbejahr"@de)
FunctionalDataProperty(:deathYear)
DataPropertyDomain(:deathYear :Person)
DataPropertyRange(:deathYear xsd:gYear)
Declaration(DataProperty(:debut))
AnnotationAssertion(rdfs:label :debut "debut"@en)
DataPropertyDomain(:debut :Wrestler)
DataPropertyRange(:debut xsd:date)
Declaration(DataProperty(:dec))
AnnotationAssertion(rdfs:label :dec "dec"@en)
DataPropertyRange(:dec xsd:string)
Declaration(DataProperty(:decay))
AnnotationAssertion(rdfs:label :decay "decay"@en)
AnnotationAssertion(rdfs:label :decay "αποσύνθεση"@el)
DataPropertyDomain(:decay :Spacecraft)
DataPropertyRange(:decay xsd:date)
Declaration(DataProperty(:decideDate))
AnnotationAssertion(rdfs:label :decideDate "decide date"@en)
DataPropertyDomain(:decideDate :SupremeCourtOfTheUnitedStatesCase)
DataPropertyRange(:decideDate xsd:date)
Declaration(DataProperty(:declination))
AnnotationAssertion(rdfs:label :declination "declination"@en)
DataPropertyDomain(:declination :Constellation)
DataPropertyRange(:declination xsd:nonNegativeInteger)
Declaration(DataProperty(:decommissioningDate))
AnnotationAssertion(rdfs:label :decommissioningDate "decommissioning date"@en)
DataPropertyDomain(:decommissioningDate :Ship)
DataPropertyRange(:decommissioningDate xsd:date)
Declaration(DataProperty(:decoration))
AnnotationAssertion(rdfs:label :decoration "decoration"@en)
DataPropertyDomain(:decoration :Person)
DataPropertyRange(:decoration xsd:string)
Declaration(DataProperty(:definition))
AnnotationAssertion(rdfs:label :definition "definition"@en)
AnnotationAssertion(rdfs:label :definition "définition"@fr)
AnnotationAssertion(rdfs:label :definition "tanımlar"@tr)
DataPropertyDomain(:definition :Galaxy)
DataPropertyRange(:definition xsd:string)
Declaration(DataProperty(:delegation))
AnnotationAssertion(rdfs:label :delegation "delegation"@en)
DataPropertyDomain(:delegation :PopulatedPlace)
DataPropertyRange(:delegation xsd:string)
Declaration(DataProperty(:deliveryDate))
AnnotationAssertion(rdfs:label :deliveryDate "leverdatum"@nl)
AnnotationAssertion(rdfs:label :deliveryDate "delivery date"@en)
DataPropertyRange(:deliveryDate xsd:date)
Declaration(DataProperty(:deme))
AnnotationAssertion(rdfs:label :deme "deme"@en)
DataPropertyDomain(:deme :PopulatedPlace)
DataPropertyRange(:deme xsd:string)
Declaration(DataProperty(:demographicsAsOf))
AnnotationAssertion(rdfs:label :demographicsAsOf "indicadores demograficos em"@pt)
AnnotationAssertion(rdfs:label :demographicsAsOf "demographics as of"@en)
DataPropertyDomain(:demographicsAsOf :PopulatedPlace)
DataPropertyRange(:demographicsAsOf xsd:date)
Declaration(DataProperty(:demolitionDate))
AnnotationAssertion(rdfs:label :demolitionDate "ημερομηνία κατεδάφισης"@el)
AnnotationAssertion(rdfs:label :demolitionDate "demolition date"@en)
AnnotationAssertion(rdfs:comment :demolitionDate "The date the building was demolished."@en)
DataPropertyDomain(:demolitionDate :ArchitecturalStructure)
DataPropertyRange(:demolitionDate xsd:date)
Declaration(DataProperty(:demolitionYear))
AnnotationAssertion(rdfs:label :demolitionYear "sloop jaar"@nl)
AnnotationAssertion(rdfs:label :demolitionYear "demolition year"@en)
AnnotationAssertion(rdfs:comment :demolitionYear "The year the building was demolished."@en)
DataPropertyDomain(:demolitionYear :ArchitecturalStructure)
DataPropertyRange(:demolitionYear xsd:gYear)
Declaration(DataProperty(:demonym))
AnnotationAssertion(rdfs:label :demonym "τοπονύμιο_πληθυσμού"@el)
AnnotationAssertion(rdfs:label :demonym "naam bevolkingsgroep"@nl)
AnnotationAssertion(rdfs:label :demonym "demonym"@en)
AnnotationAssertion(rdfs:label :demonym "démonyme"@fr)
DataPropertyRange(:demonym xsd:string)
Declaration(DataProperty(:density))
AnnotationAssertion(rdfs:label :density "πυκνότητα (μ3)"@el)
AnnotationAssertion(rdfs:label :density "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label :density "density (μ3)"@en)
AnnotationAssertion(rdfs:label :density "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label :density "Dichte (μ3)"@de)
AnnotationAssertion(rdfs:label :density "densité (μ3)"@fr)
DataPropertyRange(:density xsd:double)
Declaration(DataProperty(:departmentPosition))
AnnotationAssertion(rdfs:label :departmentPosition "geolocDepartment"@en)
DataPropertyDomain(:departmentPosition :PopulatedPlace)
DataPropertyRange(:departmentPosition xsd:string)
Declaration(DataProperty(:depictionDescription))
AnnotationAssertion(rdfs:comment :depictionDescription "This property can be used to map image captions from Infoboxes"@en)
AnnotationAssertion(rdfs:label :depictionDescription "depiction description (caption)"@en)
DataPropertyRange(:depictionDescription xsd:string)
Declaration(DataProperty(:depth))
AnnotationAssertion(rdfs:label :depth "βάθος (μ)"@el)
AnnotationAssertion(rdfs:label :depth "depth (μ)"@en)
AnnotationAssertion(rdfs:label :depth "diepte (μ)"@nl)
AnnotationAssertion(rdfs:label :depth "profondeur (μ)"@fr)
DataPropertyDomain(:depth :Place)
DataPropertyRange(:depth xsd:double)
Declaration(DataProperty(:depthQuote))
AnnotationAssertion(rdfs:label :depthQuote "depth quote"@en)
DataPropertyDomain(:depthQuote :Place)
DataPropertyRange(:depthQuote xsd:string)
Declaration(DataProperty(:description))
AnnotationAssertion(rdfs:comment :description "Short description of a person"@en)
AnnotationAssertion(rdfs:label :description "περιγραφή"@el)
AnnotationAssertion(rdfs:label :description "Beschreibung"@de)
AnnotationAssertion(rdfs:label :description "omschrijving"@nl)
AnnotationAssertion(rdfs:label :description "description"@en)
DataPropertyDomain(:description :Person)
DataPropertyRange(:description xsd:string)
Declaration(DataProperty(:destructionDate))
AnnotationAssertion(rdfs:label :destructionDate "sloopdatum"@nl)
AnnotationAssertion(rdfs:label :destructionDate "destruction date"@en)
AnnotationAssertion(rdfs:label :destructionDate "ημερομηνία καταστροφής"@el)
DataPropertyRange(:destructionDate xsd:date)
Declaration(DataProperty(:detectionMethod))
AnnotationAssertion(rdfs:label :detectionMethod "Method of discovery"@en)
DataPropertyDomain(:detectionMethod :Planet)
DataPropertyRange(:detectionMethod xsd:string)
Declaration(DataProperty(:diameter))
AnnotationAssertion(rdfs:label :diameter "diameter (μ)"@en)
AnnotationAssertion(rdfs:label :diameter "diameter (μ)"@nl)
AnnotationAssertion(rdfs:label :diameter "diamètre (μ)"@fr)
AnnotationAssertion(rdfs:label :diameter "διάμετρος (μ)"@el)
FunctionalDataProperty(:diameter)
DataPropertyRange(:diameter xsd:double)
Declaration(DataProperty(:different))
AnnotationAssertion(rdfs:label :different "different"@en)
DataPropertyDomain(:different :Place)
DataPropertyRange(:different xsd:string)
Declaration(DataProperty(:digitalChannel))
AnnotationAssertion(rdfs:label :digitalChannel "digital channel"@en)
DataPropertyDomain(:digitalChannel :Broadcaster)
DataPropertyRange(:digitalChannel xsd:string)
Declaration(DataProperty(:digitalSubChannel))
AnnotationAssertion(rdfs:label :digitalSubChannel "digital sub channel"@en)
DataPropertyDomain(:digitalSubChannel :Broadcaster)
DataPropertyRange(:digitalSubChannel xsd:string)
Declaration(DataProperty(:diploma))
AnnotationAssertion(rdfs:label :diploma "diploma"@en)
DataPropertyDomain(:diploma :Person)
DataPropertyRange(:diploma xsd:string)
Declaration(DataProperty(:disappearanceDate))
AnnotationAssertion(rdfs:label :disappearanceDate "date disappearance of a populated place"@en)
DataPropertyDomain(:disappearanceDate :PopulatedPlace)
DataPropertyRange(:disappearanceDate xsd:date)
Declaration(DataProperty(:disbanded))
AnnotationAssertion(rdfs:label :disbanded "disbanded"@en)
DataPropertyDomain(:disbanded :MilitaryUnit)
DataPropertyRange(:disbanded xsd:date)
Declaration(DataProperty(:discharge))
AnnotationAssertion(rdfs:label :discharge "εκροή (m³/s)"@el)
AnnotationAssertion(rdfs:label :discharge "uitstoot (m³/s)"@nl)
AnnotationAssertion(rdfs:label :discharge "discharge (m³/s)"@en)
DataPropertyRange(:discharge xsd:double)
Declaration(DataProperty(:dischargeAverage))
AnnotationAssertion(rdfs:label :dischargeAverage "discharge average (m³/s)"@en)
DataPropertyRange(:dischargeAverage xsd:double)
Declaration(DataProperty(:discontinued))
AnnotationAssertion(rdfs:label :discontinued "discontinued"@en)
DataPropertyDomain(:discontinued :Beverage)
DataPropertyRange(:discontinued xsd:date)
Declaration(DataProperty(:discovered))
AnnotationAssertion(rdfs:label :discovered "Ημερομηνία ανακάλυψης"@el)
AnnotationAssertion(rdfs:label :discovered "descobridor"@pt)
AnnotationAssertion(rdfs:label :discovered "discovered"@en)
DataPropertyDomain(:discovered :Planet)
DataPropertyRange(:discovered xsd:date)
Declaration(DataProperty(:discovery))
AnnotationAssertion(rdfs:label :discovery "datum waarop het eiland is ontdekt"@nl)
AnnotationAssertion(rdfs:label :discovery "date when the island has been discovered"@en)
DataPropertyDomain(:discovery :Island)
DataPropertyRange(:discovery xsd:string)
Declaration(DataProperty(:diseasesdb))
AnnotationAssertion(rdfs:label :diseasesdb "DiseasesDB"@en)
AnnotationAssertion(rdfs:label :diseasesdb "DiseasesDB"@ja)
AnnotationAssertion(rdfs:label :diseasesdb "DiseasesDB"@nl)
DataPropertyDomain(:diseasesdb :Disease)
DataPropertyRange(:diseasesdb xsd:string)
Declaration(DataProperty(:displacement))
AnnotationAssertion(rdfs:label :displacement "displacement (μ³)"@en)
FunctionalDataProperty(:displacement)
DataPropertyDomain(:displacement :AutomobileEngine)
DataPropertyRange(:displacement xsd:double)
Declaration(DataProperty(:dissolutionDate))
AnnotationAssertion(rdfs:label :dissolutionDate "dissolution date"@en)
AnnotationAssertion(rdfs:label :dissolutionDate "ontbindingsdatum"@nl)
DataPropertyDomain(:dissolutionDate :PopulatedPlace)
DataPropertyRange(:dissolutionDate xsd:date)
Declaration(DataProperty(:dissolutionYear))
AnnotationAssertion(rdfs:label :dissolutionYear "dissolution year"@en)
DataPropertyDomain(:dissolutionYear :PopulatedPlace)
DataPropertyRange(:dissolutionYear xsd:gYear)
Declaration(DataProperty(:dissolved))
AnnotationAssertion(rdfs:label :dissolved "dissolved"@en)
DataPropertyDomain(:dissolved :SoccerClub)
DataPropertyRange(:dissolved xsd:date)
Declaration(DataProperty(:dist_ly))
AnnotationAssertion(rdfs:label :dist_ly "dist_ly"@en)
DataPropertyRange(:dist_ly xsd:string)
Declaration(DataProperty(:dist_pc))
AnnotationAssertion(rdfs:label :dist_pc "dist_pc"@en)
DataPropertyRange(:dist_pc xsd:integer)
Declaration(DataProperty(:distance))
AnnotationAssertion(rdfs:label :distance "distance (μ)"@en)
AnnotationAssertion(rdfs:label :distance "Entfernung (μ)"@de)
DataPropertyRange(:distance xsd:double)
Declaration(DataProperty(:distanceLaps))
AnnotationAssertion(rdfs:label :distanceLaps "distance laps"@en)
DataPropertyDomain(:distanceLaps :GrandPrix)
DataPropertyRange(:distanceLaps xsd:nonNegativeInteger)
Declaration(DataProperty(:distanceToBelfast))
AnnotationAssertion(rdfs:label :distanceToBelfast "distance to Belfast (μ)"@en)
DataPropertyDomain(:distanceToBelfast :Settlement)
DataPropertyRange(:distanceToBelfast xsd:double)
Declaration(DataProperty(:distanceToCapital))
AnnotationAssertion(rdfs:label :distanceToCapital "distanza alla capitale (μ)"@it)
AnnotationAssertion(rdfs:label :distanceToCapital "distance to capital (μ)"@en)
AnnotationAssertion(rdfs:label :distanceToCapital "απόσταση από την πρωτεύουσα (μ)"@el)
AnnotationAssertion(rdfs:label :distanceToCapital "entfernung zur hauptstadt (μ)"@de)
AnnotationAssertion(rdfs:label :distanceToCapital "distância até a capital (μ)"@pt)
DataPropertyDomain(:distanceToCapital :Settlement)
DataPropertyRange(:distanceToCapital xsd:double)
Declaration(DataProperty(:distanceToCardiff))
AnnotationAssertion(rdfs:label :distanceToCardiff "απόσταση από το Cardiff (μ)"@el)
AnnotationAssertion(rdfs:label :distanceToCardiff "distance to Cardiff (μ)"@en)
DataPropertyDomain(:distanceToCardiff :Settlement)
DataPropertyRange(:distanceToCardiff xsd:double)
Declaration(DataProperty(:distanceToCharingCross))
AnnotationAssertion(rdfs:label :distanceToCharingCross "distance to Charing Cross (μ)"@en)
DataPropertyDomain(:distanceToCharingCross :Settlement)
DataPropertyRange(:distanceToCharingCross xsd:double)
Declaration(DataProperty(:distanceToDouglas))
AnnotationAssertion(rdfs:label :distanceToDouglas "απόσταση από το Douglas (μ)"@el)
AnnotationAssertion(rdfs:label :distanceToDouglas "distance to Douglas (μ)"@en)
DataPropertyDomain(:distanceToDouglas :Settlement)
DataPropertyRange(:distanceToDouglas xsd:double)
Declaration(DataProperty(:distanceToDublin))
AnnotationAssertion(rdfs:label :distanceToDublin "distance to Dublin (μ)"@en)
AnnotationAssertion(rdfs:label :distanceToDublin "απόσταση από το Δουβλίνο (μ)"@el)
DataPropertyDomain(:distanceToDublin :Settlement)
DataPropertyRange(:distanceToDublin xsd:double)
Declaration(DataProperty(:distanceToEdinburgh))
AnnotationAssertion(rdfs:label :distanceToEdinburgh "απόσταση από το Εδιμβούργο (μ)"@el)
AnnotationAssertion(rdfs:label :distanceToEdinburgh "distance to Edinburgh (μ)"@en)
DataPropertyDomain(:distanceToEdinburgh :Settlement)
DataPropertyRange(:distanceToEdinburgh xsd:double)
Declaration(DataProperty(:distanceToLondon))
AnnotationAssertion(rdfs:label :distanceToLondon "distance to London (μ)"@en)
AnnotationAssertion(rdfs:label :distanceToLondon "απόσταση από το Λονδίνο (μ)"@el)
DataPropertyDomain(:distanceToLondon :Settlement)
DataPropertyRange(:distanceToLondon xsd:double)
Declaration(DataProperty(:distanceTraveled))
AnnotationAssertion(rdfs:label :distanceTraveled "afgelegde afstand (μ)"@nl)
AnnotationAssertion(rdfs:label :distanceTraveled "distance traveled (μ)"@en)
DataPropertyDomain(:distanceTraveled :SpaceMission)
DataPropertyRange(:distanceTraveled xsd:double)
Declaration(DataProperty(:dockedTime))
AnnotationAssertion(rdfs:label :dockedTime "docked time (s)"@en)
DataPropertyDomain(:dockedTime :Spacecraft)
DataPropertyRange(:dockedTime xsd:double)
Declaration(DataProperty(:dorlandsPrefix))
AnnotationAssertion(rdfs:label :dorlandsPrefix "Dorlands prefix"@en)
DataPropertyDomain(:dorlandsPrefix :AnatomicalStructure)
DataPropertyRange(:dorlandsPrefix xsd:string)
Declaration(DataProperty(:dorlandsSuffix))
AnnotationAssertion(rdfs:label :dorlandsSuffix "Dorlands suffix"@en)
DataPropertyDomain(:dorlandsSuffix :AnatomicalStructure)
DataPropertyRange(:dorlandsSuffix xsd:string)
Declaration(DataProperty(:draft))
AnnotationAssertion(rdfs:label :draft "draft"@en)
AnnotationAssertion(rdfs:label :draft "Entwurf"@de)
DataPropertyRange(:draft xsd:string)
Declaration(DataProperty(:draftPick))
AnnotationAssertion(rdfs:label :draftPick "draft pick"@en)
DataPropertyDomain(:draftPick :GridironFootballPlayer)
DataPropertyRange(:draftPick xsd:string)
Declaration(DataProperty(:draftRound))
AnnotationAssertion(rdfs:label :draftRound "draft round"@en)
DataPropertyDomain(:draftRound :GridironFootballPlayer)
DataPropertyRange(:draftRound xsd:string)
Declaration(DataProperty(:draftYear))
AnnotationAssertion(rdfs:label :draftYear "draft year"@en)
DataPropertyRange(:draftYear xsd:gYear)
Declaration(DataProperty(:dressCode))
AnnotationAssertion(rdfs:comment :dressCode "The recommended dress code for an establishment or event."@en)
AnnotationAssertion(rdfs:label :dressCode "dress code"@en)
DataPropertyDomain(:dressCode :Restaurant)
DataPropertyRange(:dressCode xsd:string)
Declaration(DataProperty(:drugbank))
AnnotationAssertion(rdfs:label :drugbank "DrugBank"@en)
AnnotationAssertion(rdfs:label :drugbank "DrugBank"@ja)
DataPropertyRange(:drugbank xsd:string)
Declaration(DataProperty(:dryCargo))
AnnotationAssertion(rdfs:label :dryCargo "dry cargo (g)"@en)
AnnotationAssertion(rdfs:label :dryCargo "droge last (g)"@nl)
DataPropertyDomain(:dryCargo :Spacecraft)
DataPropertyRange(:dryCargo xsd:double)
Declaration(DataProperty(:duration))
AnnotationAssertion(rdfs:label :duration "duration (s)"@en)
AnnotationAssertion(rdfs:comment :duration "The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format"@en)
AnnotationAssertion(rdfs:label :duration "duur (s)"@nl)
DataPropertyDomain(:duration :Event)
DataPropertyRange(:duration xsd:double)
Declaration(DataProperty(:dutchMIPCode))
AnnotationAssertion(rdfs:label :dutchMIPCode "monumentcode voor het Monumenten Inventarisatie Project"@nl)
AnnotationAssertion(rdfs:comment :dutchMIPCode "The Dutch MIP project was meant to take stock of all kinds of monuments"@en)
AnnotationAssertion(rdfs:label :dutchMIPCode "monument code for the Monuments Inventory Project"@en)
AnnotationAssertion(rdfs:comment :dutchMIPCode "Code voor alle soorten monumenten gebezigd door het MI-project"@nl)
DataPropertyRange(:dutchMIPCode xsd:string)
Declaration(DataProperty(:dutchName))
AnnotationAssertion(rdfs:label :dutchName "city dutch name"@en)
DataPropertyRange(:dutchName xsd:string)
Declaration(DataProperty(:dynasty))
AnnotationAssertion(rdfs:label :dynasty "dynastie"@nl)
AnnotationAssertion(rdfs:label :dynasty "dynasty"@en)
DataPropertyRange(:dynasty xsd:string)
Declaration(DataProperty(:eTeatrId))
AnnotationAssertion(rdfs:label :eTeatrId "e-teatr.pl id"@en)
DataPropertyDomain(:eTeatrId :Film)
DataPropertyRange(:eTeatrId xsd:string)
Declaration(DataProperty(:ecNumber))
AnnotationAssertion(rdfs:label :ecNumber "EC番号"@ja)
AnnotationAssertion(rdfs:label :ecNumber "EC number"@en)
DataPropertyDomain(:ecNumber :Biomolecule)
DataPropertyRange(:ecNumber xsd:string)
Declaration(DataProperty(:editorTitle))
AnnotationAssertion(rdfs:label :editorTitle "editor title"@en)
AnnotationAssertion(rdfs:label :editorTitle "τίτλος συντάκτη"@el)
DataPropertyDomain(:editorTitle :Magazine)
DataPropertyRange(:editorTitle xsd:string)
Declaration(DataProperty(:effectiveRadiatedPower))
AnnotationAssertion(rdfs:label :effectiveRadiatedPower "effectiveRadiatedPower (W)"@en)
DataPropertyDomain(:effectiveRadiatedPower :Broadcaster)
DataPropertyRange(:effectiveRadiatedPower xsd:double)
Declaration(DataProperty(:egafdId))
AnnotationAssertion(rdfs:label :egafdId "egafd id"@el)
AnnotationAssertion(rdfs:label :egafdId "código no egafd"@pt)
AnnotationAssertion(rdfs:label :egafdId "egafd id"@en)
DataPropertyDomain(:egafdId :Film)
DataPropertyRange(:egafdId xsd:string)
Declaration(DataProperty(:ekatteCode))
AnnotationAssertion(rdfs:label :ekatteCode "EKATTE code"@en)
AnnotationAssertion(rdfs:comment :ekatteCode "Indexing code used by the Bulgarian National Statistical Institute to identify populated places"@en)
AnnotationAssertion(rdfs:comment :ekatteCode "Единен класификатор на административно-териториалните и териториалните единици"@bg)
DataPropertyDomain(:ekatteCode :PopulatedPlace)
DataPropertyRange(:ekatteCode xsd:string)
Declaration(DataProperty(:electionDate))
AnnotationAssertion(rdfs:label :electionDate "election date"@en)
AnnotationAssertion(rdfs:label :electionDate "Wahltermin"@de)
DataPropertyDomain(:electionDate :Person)
DataPropertyRange(:electionDate xsd:date)
Declaration(DataProperty(:electionDateLeader))
AnnotationAssertion(rdfs:label :electionDateLeader "election date leader"@en)
AnnotationAssertion(rdfs:label :electionDateLeader "Wahldatum des Vorsitzenden"@de)
AnnotationAssertion(rdfs:comment :electionDateLeader "The date that leader was elected."@en)
DataPropertyDomain(:electionDateLeader :Legislature)
DataPropertyRange(:electionDateLeader xsd:date)
Declaration(DataProperty(:electionMajority))
AnnotationAssertion(rdfs:label :electionMajority "election majority"@en)
AnnotationAssertion(rdfs:comment :electionMajority "number of votes the office holder attained"@en)
DataPropertyRange(:electionMajority xsd:nonNegativeInteger)
Declaration(DataProperty(:elevation))
AnnotationAssertion(rdfs:label :elevation "altitude (μ)"@pt)
AnnotationAssertion(rdfs:comment :elevation "altitude média acima do nível do mar"@pt)
AnnotationAssertion(rdfs:label :elevation "elevation (μ)"@en)
AnnotationAssertion(rdfs:label :elevation "hoogte (μ)"@nl)
AnnotationAssertion(rdfs:comment :elevation "average elevation above the sea level"@en)
AnnotationAssertion(rdfs:label :elevation "υψόμετρο (μ)"@el)
DataPropertyDomain(:elevation :Place)
DataPropertyRange(:elevation xsd:double)
Declaration(DataProperty(:elevationQuote))
AnnotationAssertion(rdfs:label :elevationQuote "elevation quote"@en)
DataPropertyDomain(:elevationQuote :Place)
DataPropertyRange(:elevationQuote xsd:string)
Declaration(DataProperty(:elevatorCount))
AnnotationAssertion(rdfs:label :elevatorCount "Aufzüge"@de)
AnnotationAssertion(rdfs:label :elevatorCount "elevator count"@en)
DataPropertyDomain(:elevatorCount :Building)
DataPropertyRange(:elevatorCount xsd:nonNegativeInteger)
Declaration(DataProperty(:elo))
AnnotationAssertion(rdfs:label :elo "ELO rating"@en)
DataPropertyDomain(:elo :ChessPlayer)
DataPropertyRange(:elo xsd:nonNegativeInteger)
Declaration(DataProperty(:eloRecord))
AnnotationAssertion(rdfs:label :eloRecord "maximum ELO rating"@en)
DataPropertyDomain(:eloRecord :ChessPlayer)
DataPropertyRange(:eloRecord xsd:nonNegativeInteger)
Declaration(DataProperty(:emblem))
AnnotationAssertion(rdfs:label :emblem "emblem"@en)
DataPropertyDomain(:emblem :PopulatedPlace)
DataPropertyRange(:emblem xsd:string)
Declaration(DataProperty(:emedicineSubject))
AnnotationAssertion(rdfs:label :emedicineSubject "eMedicine subject"@en)
AnnotationAssertion(rdfs:label :emedicineSubject "eMedicine onderwerp"@nl)
DataPropertyDomain(:emedicineSubject :Disease)
DataPropertyRange(:emedicineSubject xsd:string)
Declaration(DataProperty(:emedicineTopic))
AnnotationAssertion(rdfs:label :emedicineTopic "eMedicine onderwerp"@nl)
AnnotationAssertion(rdfs:label :emedicineTopic "eMedicine subject"@en)
DataPropertyDomain(:emedicineTopic :Disease)
DataPropertyRange(:emedicineTopic xsd:string)
Declaration(DataProperty(:employersCelebration))
AnnotationAssertion(rdfs:label :employersCelebration "employer's celebration"@en)
DataPropertyRange(:employersCelebration xsd:string)
Declaration(DataProperty(:endCareer))
AnnotationAssertion(rdfs:label :endCareer "end career"@en)
DataPropertyDomain(:endCareer :Person)
DataPropertyRange(:endCareer xsd:string)
Declaration(DataProperty(:endDate))
AnnotationAssertion(rdfs:label :endDate "einddatum"@nl)
AnnotationAssertion(rdfs:label :endDate "fecha de fin"@es)
AnnotationAssertion(rdfs:label :endDate "end date"@en)
AnnotationAssertion(rdfs:comment :endDate "The end date of the event."@en)
AnnotationAssertion(rdfs:label :endDate "date de fin"@fr)
DataPropertyDomain(:endDate :Event)
DataPropertyRange(:endDate xsd:date)
Declaration(DataProperty(:endReign))
AnnotationAssertion(rdfs:label :endReign "end reign"@en)
DataPropertyDomain(:endReign :Person)
DataPropertyRange(:endReign xsd:string)
Declaration(DataProperty(:endYear))
AnnotationAssertion(rdfs:label :endYear "end year"@en)
DataPropertyDomain(:endYear :Place)
DataPropertyRange(:endYear xsd:string)
Declaration(DataProperty(:endYearOfInsertion))
AnnotationAssertion(rdfs:label :endYearOfInsertion "end year of insertion"@en)
DataPropertyDomain(:endYearOfInsertion :AutomobileEngine)
DataPropertyRange(:endYearOfInsertion xsd:gYear)
Declaration(DataProperty(:endYearOfSales))
AnnotationAssertion(rdfs:label :endYearOfSales "end year of sales"@en)
DataPropertyDomain(:endYearOfSales :Sales)
DataPropertyRange(:endYearOfSales xsd:gYear)
Declaration(DataProperty(:endangeredSince))
AnnotationAssertion(rdfs:label :endangeredSince "em perigo desde"@pt)
AnnotationAssertion(rdfs:label :endangeredSince "endangered since"@en)
DataPropertyDomain(:endangeredSince :Place)
DataPropertyRange(:endangeredSince xsd:date)
Declaration(DataProperty(:endowment))
AnnotationAssertion(rdfs:label :endowment "endowment ($)"@en)
DataPropertyDomain(:endowment :Organisation)
DataPropertyRange(:endowment xsd:double)
Declaration(DataProperty(:englishName))
AnnotationAssertion(rdfs:label :englishName "English name"@en)
DataPropertyDomain(:englishName :Settlement)
DataPropertyRange(:englishName xsd:string)
Declaration(DataProperty(:ensembl))
AnnotationAssertion(rdfs:label :ensembl "ensemble"@ja)
AnnotationAssertion(rdfs:label :ensembl "ensemble"@en)
DataPropertyDomain(:ensembl :Biomolecule)
DataPropertyRange(:ensembl xsd:string)
Declaration(DataProperty(:entrezgene))
AnnotationAssertion(rdfs:label :entrezgene "EntrezGene"@en)
AnnotationAssertion(rdfs:label :entrezgene "EntrezGene"@ja)
DataPropertyDomain(:entrezgene :Biomolecule)
DataPropertyRange(:entrezgene xsd:string)
Declaration(DataProperty(:episode))
AnnotationAssertion(rdfs:label :episode "episode"@en)
DataPropertyDomain(:episode :FictionalCharacter)
DataPropertyRange(:episode xsd:string)
Declaration(DataProperty(:episodeNumber))
AnnotationAssertion(rdfs:comment :episodeNumber "The episode number of the TelevisionEpisode."@en)
AnnotationAssertion(rdfs:label :episodeNumber "episode number"@en)
DataPropertyDomain(:episodeNumber :TelevisionEpisode)
DataPropertyRange(:episodeNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:epoch))
AnnotationAssertion(rdfs:comment :epoch "moment in time used as a referrence point for some time-vaying astronomical quantity"@en)
AnnotationAssertion(rdfs:label :epoch "epoch"@en)
DataPropertyDomain(:epoch :Planet)
DataPropertyRange(:epoch xsd:string)
Declaration(DataProperty(:equity))
AnnotationAssertion(rdfs:label :equity "equity ($)"@en)
DataPropertyDomain(:equity :Company)
DataPropertyRange(:equity xsd:double)
Declaration(DataProperty(:eruption))
AnnotationAssertion(rdfs:label :eruption "eruption"@en)
DataPropertyDomain(:eruption :Island)
DataPropertyRange(:eruption xsd:string)
Declaration(DataProperty(:eruptionYear))
AnnotationAssertion(rdfs:label :eruptionYear "Jahr des letzten Ausbruchs"@de)
AnnotationAssertion(rdfs:label :eruptionYear "jaar uitbarsting"@nl)
AnnotationAssertion(rdfs:label :eruptionYear "eruption date"@en)
DataPropertyDomain(:eruptionYear :Volcano)
DataPropertyRange(:eruptionYear xsd:gYear)
Declaration(DataProperty(:escapeVelocity))
AnnotationAssertion(rdfs:label :escapeVelocity "escape velocity (kmh)"@en)
DataPropertyDomain(:escapeVelocity :Planet)
DataPropertyRange(:escapeVelocity xsd:double)
Declaration(DataProperty(:espnId))
AnnotationAssertion(rdfs:label :espnId "ESPN id"@en)
DataPropertyDomain(:espnId :Athlete)
DataPropertyRange(:espnId xsd:integer)
Declaration(DataProperty(:established))
AnnotationAssertion(rdfs:label :established "Established"@en)
DataPropertyDomain(:established :ChristianDoctrine)
DataPropertyRange(:established xsd:string)
Declaration(DataProperty(:establishment))
AnnotationAssertion(rdfs:label :establishment "Establishment"@en)
AnnotationAssertion(rdfs:label :establishment "ίδρυση"@el)
DataPropertyDomain(:establishment :ChristianDoctrine)
DataPropertyRange(:establishment xsd:integer)
Declaration(DataProperty(:ethnicGroupsInYear))
AnnotationAssertion(rdfs:label :ethnicGroupsInYear "ethnic groups in year"@en)
DataPropertyRange(:ethnicGroupsInYear xsd:gYear)
Declaration(DataProperty(:eurobabeIndexId))
AnnotationAssertion(rdfs:label :eurobabeIndexId "código no eurobabeindex"@pt)
AnnotationAssertion(rdfs:label :eurobabeIndexId "eurobabe index id"@en)
AnnotationAssertion(rdfs:label :eurobabeIndexId "eurobabeindex id"@el)
DataPropertyDomain(:eurobabeIndexId :Film)
DataPropertyRange(:eurobabeIndexId xsd:string)
Declaration(DataProperty(:europeanUnionEntranceDate))
AnnotationAssertion(rdfs:label :europeanUnionEntranceDate "data de entrada na uniao europeia"@pt)
AnnotationAssertion(rdfs:label :europeanUnionEntranceDate "european union entrance date"@en)
DataPropertyDomain(:europeanUnionEntranceDate :Country)
DataPropertyRange(:europeanUnionEntranceDate xsd:date)
Declaration(DataProperty(:eventDate))
AnnotationAssertion(rdfs:label :eventDate "event date"@en)
DataPropertyDomain(:eventDate :Place)
DataPropertyRange(:eventDate xsd:date)
Declaration(DataProperty(:externalOrnament))
AnnotationAssertion(rdfs:label :externalOrnament "external ornament"@en)
DataPropertyDomain(:externalOrnament :Person)
DataPropertyRange(:externalOrnament xsd:string)
Declaration(DataProperty(:extinctionDate))
AnnotationAssertion(rdfs:label :extinctionDate "extinction date"@en)
AnnotationAssertion(rdfs:label :extinctionDate "ontbindingsdatum"@nl)
DataPropertyDomain(:extinctionDate :Organisation)
DataPropertyRange(:extinctionDate xsd:date)
Declaration(DataProperty(:extinctionYear))
AnnotationAssertion(rdfs:label :extinctionYear "extinction year"@en)
DataPropertyDomain(:extinctionYear :Organisation)
DataPropertyRange(:extinctionYear xsd:gYear)
Declaration(DataProperty(:eyes))
AnnotationAssertion(rdfs:label :eyes "ogen"@nl)
AnnotationAssertion(rdfs:label :eyes "eyes"@en)
DataPropertyDomain(:eyes :FictionalCharacter)
DataPropertyRange(:eyes xsd:string)
Declaration(DataProperty(:faaLocationIdentifier))
AnnotationAssertion(rdfs:label :faaLocationIdentifier "FAA Location Identifier"@en)
DataPropertyDomain(:faaLocationIdentifier :Airport)
DataPropertyRange(:faaLocationIdentifier xsd:string)
Declaration(DataProperty(:facilityId))
AnnotationAssertion(rdfs:label :facilityId "facility id"@en)
DataPropertyDomain(:facilityId :RadioStation)
DataPropertyRange(:facilityId xsd:integer)
Declaration(DataProperty(:facultySize))
AnnotationAssertion(rdfs:label :facultySize "faculty size"@en)
AnnotationAssertion(rdfs:comment :facultySize "number of faculty members"@en)
DataPropertyDomain(:facultySize :EducationalInstitution)
DataPropertyRange(:facultySize xsd:nonNegativeInteger)
Declaration(DataProperty(:failedLaunches))
AnnotationAssertion(rdfs:label :failedLaunches "failed launches"@en)
DataPropertyRange(:failedLaunches xsd:nonNegativeInteger)
Declaration(DataProperty(:fansgroup))
AnnotationAssertion(rdfs:label :fansgroup "fansgroup"@en)
DataPropertyDomain(:fansgroup :SoccerClub)
DataPropertyRange(:fansgroup xsd:string)
Declaration(DataProperty(:fareZone))
AnnotationAssertion(rdfs:label :fareZone "fare zone"@en)
AnnotationAssertion(rdfs:label :fareZone "Tarifzone"@de)
AnnotationAssertion(rdfs:comment :fareZone "The fare zone in which station is located."@en)
AnnotationAssertion(rdfs:comment :fareZone "Die Tarifzone zu der die Station gehört."@de)
DataPropertyDomain(:fareZone :Station)
DataPropertyRange(:fareZone xsd:string)
Declaration(DataProperty(:fastestLap))
AnnotationAssertion(rdfs:label :fastestLap "fastest lap"@en)
DataPropertyDomain(:fastestLap :FormulaOneRacer)
DataPropertyRange(:fastestLap xsd:nonNegativeInteger)
Declaration(DataProperty(:fate))
AnnotationAssertion(rdfs:label :fate "fate"@en)
DataPropertyDomain(:fate :Company)
DataPropertyRange(:fate xsd:string)
Declaration(DataProperty(:fauna))
AnnotationAssertion(rdfs:label :fauna "fauna"@en)
AnnotationAssertion(rdfs:label :fauna "fauna"@nl)
DataPropertyDomain(:fauna :Place)
DataPropertyRange(:fauna xsd:string)
Declaration(DataProperty(:fc))
AnnotationAssertion(rdfs:label :fc "FC"@en)
AnnotationAssertion(rdfs:label :fc "FC"@fr)
DataPropertyDomain(:fc :Cricketer)
DataPropertyRange(:fc xsd:nonNegativeInteger)
Declaration(DataProperty(:fcRuns))
AnnotationAssertion(rdfs:label :fcRuns "FC runs"@en)
DataPropertyDomain(:fcRuns :Cricketer)
DataPropertyRange(:fcRuns xsd:nonNegativeInteger)
Declaration(DataProperty(:fdaUniiCode))
AnnotationAssertion(rdfs:comment :fdaUniiCode "FDA Unique Ingredient Identifier (UNII) code for a DBpedia Drug"@en)
AnnotationAssertion(rdfs:label :fdaUniiCode "FDA UNII code"@en)
AnnotationAssertion(rdfs:label :fdaUniiCode "código FDA UNII"@pt)
DataPropertyRange(:fdaUniiCode xsd:string)
Declaration(DataProperty(:feastDay))
AnnotationAssertion(rdfs:label :feastDay "feestdag"@nl)
AnnotationAssertion(rdfs:label :feastDay "feast day"@en)
DataPropertyDomain(:feastDay :Saint)
DataPropertyRange(:feastDay xsd:date)
Declaration(DataProperty(:feat))
AnnotationAssertion(rdfs:label :feat "feat"@en)
DataPropertyDomain(:feat :Person)
DataPropertyRange(:feat xsd:string)
Declaration(DataProperty(:feature))
AnnotationAssertion(rdfs:label :feature "feature"@en)
DataPropertyDomain(:feature :FictionalCharacter)
DataPropertyRange(:feature xsd:string)
Declaration(DataProperty(:fees))
AnnotationAssertion(rdfs:label :fees "fees ($)"@en)
AnnotationAssertion(rdfs:label :fees "δίδακτρα ($)"@el)
DataPropertyDomain(:fees :School)
DataPropertyRange(:fees xsd:double)
Declaration(DataProperty(:fighter))
AnnotationAssertion(rdfs:label :fighter "fighter"@en)
AnnotationAssertion(rdfs:label :fighter "combattant"@fr)
DataPropertyRange(:fighter xsd:string)
Declaration(DataProperty(:fileSize))
AnnotationAssertion(rdfs:label :fileSize "Dateigröße (B)"@de)
AnnotationAssertion(rdfs:comment :fileSize "size of a file or software"@en)
AnnotationAssertion(rdfs:label :fileSize "size (B)"@en)
DataPropertyRange(:fileSize xsd:double)
Declaration(DataProperty(:filename))
AnnotationAssertion(rdfs:label :filename "filename"@en)
AnnotationAssertion(rdfs:label :filename "όνομα αρχείου"@el)
AnnotationAssertion(rdfs:label :filename "bestandsnaam"@nl)
AnnotationAssertion(rdfs:label :filename "dateiname"@de)
DataPropertyRange(:filename xsd:string)
Declaration(DataProperty(:filmAudioType))
AnnotationAssertion(rdfs:comment :filmAudioType "specifies the audio type of the film i.e. 'sound' or 'silent'"@en)
AnnotationAssertion(rdfs:label :filmAudioType "film audio type"@en)
DataPropertyDomain(:filmAudioType :Film)
DataPropertyRange(:filmAudioType xsd:string)
Declaration(DataProperty(:filmColourType))
AnnotationAssertion(rdfs:label :filmColourType "film colour type"@en)
AnnotationAssertion(rdfs:comment :filmColourType "specifies the colour type of the film i.e. 'colour' or 'b/w'"@en)
DataPropertyDomain(:filmColourType :Film)
DataPropertyRange(:filmColourType xsd:string)
Declaration(DataProperty(:filmPolskiId))
AnnotationAssertion(rdfs:label :filmPolskiId "FilmPolski.pl id"@en)
DataPropertyDomain(:filmPolskiId :Film)
DataPropertyRange(:filmPolskiId xsd:string)
Declaration(DataProperty(:finalFlight))
AnnotationAssertion(rdfs:label :finalFlight "final flight"@en)
AnnotationAssertion(rdfs:comment :finalFlight "date of final flight"@en)
DataPropertyDomain(:finalFlight :Rocket)
DataPropertyRange(:finalFlight xsd:date)
Declaration(DataProperty(:finalPublicationDate))
AnnotationAssertion(rdfs:label :finalPublicationDate "Datum der finalen Ausgabe"@de)
AnnotationAssertion(rdfs:comment :finalPublicationDate "Datum der allerletzten Veröffentlichung des Periodikums."@de)
AnnotationAssertion(rdfs:comment :finalPublicationDate "Date of the final publication."@en)
AnnotationAssertion(rdfs:label :finalPublicationDate "laatste publicatiedatum"@nl)
AnnotationAssertion(rdfs:label :finalPublicationDate "final publication date"@en)
DataPropertyDomain(:finalPublicationDate :PeriodicalLiterature)
DataPropertyRange(:finalPublicationDate xsd:date)
Declaration(DataProperty(:finalPublicationYear))
AnnotationAssertion(rdfs:label :finalPublicationYear "final publication year"@en)
AnnotationAssertion(rdfs:label :finalPublicationYear "Jahr der finalen Ausgabe"@de)
AnnotationAssertion(rdfs:comment :finalPublicationYear "Year of the final publication."@en)
AnnotationAssertion(rdfs:comment :finalPublicationYear "Jahr der allerletzten Veröffentlichung des Periodikums."@de)
DataPropertyDomain(:finalPublicationYear :PeriodicalLiterature)
DataPropertyRange(:finalPublicationYear xsd:gYear)
Declaration(DataProperty(:finnishName))
AnnotationAssertion(rdfs:label :finnishName "finnish name of a sweden settlement"@en)
DataPropertyRange(:finnishName xsd:string)
Declaration(DataProperty(:fipsCode))
AnnotationAssertion(rdfs:label :fipsCode "fips code"@en)
DataPropertyDomain(:fipsCode :PopulatedPlace)
DataPropertyRange(:fipsCode xsd:string)
Declaration(DataProperty(:firstAirDate))
AnnotationAssertion(rdfs:label :firstAirDate "first air date"@en)
AnnotationAssertion(rdfs:label :firstAirDate "Sendebeginn"@de)
AnnotationAssertion(rdfs:comment :firstAirDate "The date on which regular broadcasts began."@en)
DataPropertyDomain(:firstAirDate :Broadcaster)
DataPropertyRange(:firstAirDate xsd:date)
Declaration(DataProperty(:firstAscentYear))
AnnotationAssertion(rdfs:label :firstAscentYear "year of first ascent"@en)
AnnotationAssertion(rdfs:label :firstAscentYear "jaar van de eerste beklimming"@nl)
DataPropertyDomain(:firstAscentYear :Mountain)
DataPropertyRange(:firstAscentYear xsd:gYear)
Declaration(DataProperty(:firstFlightEndDate))
AnnotationAssertion(rdfs:label :firstFlightEndDate "first flight end date"@en)
DataPropertyDomain(:firstFlightEndDate :SpaceShuttle)
DataPropertyRange(:firstFlightEndDate xsd:date)
Declaration(DataProperty(:firstFlightStartDate))
AnnotationAssertion(rdfs:label :firstFlightStartDate "first flight start date"@en)
DataPropertyDomain(:firstFlightStartDate :SpaceShuttle)
DataPropertyRange(:firstFlightStartDate xsd:date)
Declaration(DataProperty(:firstGame))
AnnotationAssertion(rdfs:label :firstGame "first game"@en)
DataPropertyDomain(:firstGame :SoccerClub)
DataPropertyRange(:firstGame xsd:string)
Declaration(DataProperty(:firstLaunch))
AnnotationAssertion(rdfs:label :firstLaunch "first launch"@en)
DataPropertyDomain(:firstLaunch :YearInSpaceflight)
DataPropertyRange(:firstLaunch xsd:date)
Declaration(DataProperty(:firstLaunchDate))
AnnotationAssertion(rdfs:label :firstLaunchDate "first launch date"@en)
DataPropertyDomain(:firstLaunchDate :LaunchPad)
DataPropertyRange(:firstLaunchDate xsd:date)
Declaration(DataProperty(:firstMention))
AnnotationAssertion(rdfs:label :firstMention "first mention"@en)
DataPropertyDomain(:firstMention :PopulatedPlace)
DataPropertyRange(:firstMention xsd:string)
Declaration(DataProperty(:firstPublicationDate))
AnnotationAssertion(rdfs:label :firstPublicationDate "data pierwszego wydania"@pl)
AnnotationAssertion(rdfs:label :firstPublicationDate "eerste publicatiedatum"@nl)
AnnotationAssertion(rdfs:comment :firstPublicationDate "Date of the first publication."@en)
AnnotationAssertion(rdfs:comment :firstPublicationDate "Datum der ersten Veröffentlichung des Periodikums."@de)
AnnotationAssertion(rdfs:label :firstPublicationDate "first publication date"@en)
AnnotationAssertion(rdfs:label :firstPublicationDate "Datum der Erstausgabe"@de)
DataPropertyDomain(:firstPublicationDate :WrittenWork)
DataPropertyRange(:firstPublicationDate xsd:date)
Declaration(DataProperty(:firstPublicationYear))
AnnotationAssertion(rdfs:comment :firstPublicationYear "Jahr der ersten Veröffentlichung des Periodikums."@de)
AnnotationAssertion(rdfs:comment :firstPublicationYear "Year of the first publication."@en)
AnnotationAssertion(rdfs:label :firstPublicationYear "first publication year"@en)
AnnotationAssertion(rdfs:comment :firstPublicationYear "Έτος της πρώτης δημοσίευσης."@el)
AnnotationAssertion(rdfs:label :firstPublicationYear "πρώτο έτος δημοσίευσης"@el)
AnnotationAssertion(rdfs:label :firstPublicationYear "Jahr der Erstausgabe"@de)
DataPropertyDomain(:firstPublicationYear :PeriodicalLiterature)
DataPropertyRange(:firstPublicationYear xsd:gYear)
Declaration(DataProperty(:flag))
AnnotationAssertion(rdfs:label :flag "σημαία"@el)
AnnotationAssertion(rdfs:label :flag "vlag"@nl)
AnnotationAssertion(rdfs:label :flag "flag"@en)
AnnotationAssertion(rdfs:label :flag "göndere çekmek"@tr)
DataPropertyRange(:flag xsd:string)
Declaration(DataProperty(:flagBorder))
AnnotationAssertion(rdfs:label :flagBorder "flag border"@en)
DataPropertyRange(:flagBorder xsd:string)
Declaration(DataProperty(:flagCaption))
AnnotationAssertion(rdfs:label :flagCaption "flagCaption"@en)
DataPropertyDomain(:flagCaption :Flag)
DataPropertyRange(:flagCaption xsd:string)
Declaration(DataProperty(:flagLink))
AnnotationAssertion(rdfs:label :flagLink "flag Link"@en)
DataPropertyRange(:flagLink xsd:string)
Declaration(DataProperty(:flagSize))
AnnotationAssertion(rdfs:label :flagSize "flagSize"@en)
DataPropertyDomain(:flagSize :Flag)
DataPropertyRange(:flagSize xsd:integer)
Declaration(DataProperty(:floodingDate))
AnnotationAssertion(rdfs:label :floodingDate "flooding date"@en)
DataPropertyRange(:floodingDate xsd:date)
Declaration(DataProperty(:floorArea))
AnnotationAssertion(rdfs:label :floorArea "vloeroppervlak (m2)"@nl)
AnnotationAssertion(rdfs:label :floorArea "περιοχή ορόφων (m2)"@el)
AnnotationAssertion(rdfs:label :floorArea "floor area (m2)"@en)
DataPropertyDomain(:floorArea :Building)
DataPropertyRange(:floorArea xsd:double)
Declaration(DataProperty(:floorCount))
AnnotationAssertion(rdfs:label :floorCount "αριθμός ορόφων"@el)
AnnotationAssertion(rdfs:label :floorCount "verdiepingen"@nl)
AnnotationAssertion(rdfs:label :floorCount "floor count"@en)
DataPropertyDomain(:floorCount :Building)
DataPropertyRange(:floorCount xsd:positiveInteger)
Declaration(DataProperty(:flora))
AnnotationAssertion(rdfs:label :flora "flora"@en)
DataPropertyDomain(:flora :Place)
DataPropertyRange(:flora xsd:string)
Declaration(DataProperty(:flower))
AnnotationAssertion(rdfs:label :flower "flower"@en)
DataPropertyRange(:flower xsd:string)
Declaration(DataProperty(:flyingHours))
AnnotationAssertion(rdfs:label :flyingHours "flying hours (s)"@en)
DataPropertyDomain(:flyingHours :MilitaryUnit)
DataPropertyRange(:flyingHours xsd:double)
Declaration(DataProperty(:foalDate))
AnnotationAssertion(rdfs:label :foalDate "foal date"@en)
FunctionalDataProperty(:foalDate)
DataPropertyDomain(:foalDate :Animal)
DataPropertyRange(:foalDate xsd:date)
Declaration(DataProperty(:forces))
AnnotationAssertion(rdfs:label :forces "forces"@en)
AnnotationAssertion(rdfs:label :forces "forces"@fr)
DataPropertyRange(:forces xsd:string)
Declaration(DataProperty(:formationDate))
AnnotationAssertion(rdfs:label :formationDate "formation date"@en)
AnnotationAssertion(rdfs:label :formationDate "formatie datum"@nl)
AnnotationAssertion(rdfs:label :formationDate "Ιδρύθηκε"@el)
DataPropertyDomain(:formationDate :Organisation)
DataPropertyRange(:formationDate xsd:date)
Declaration(DataProperty(:formationYear))
AnnotationAssertion(rdfs:label :formationYear "formatie jaar"@nl)
AnnotationAssertion(rdfs:label :formationYear "formation year"@en)
DataPropertyDomain(:formationYear :Organisation)
DataPropertyRange(:formationYear xsd:gYear)
Declaration(DataProperty(:formerCallsign))
AnnotationAssertion(rdfs:label :formerCallsign "former call sign"@en)
DataPropertyDomain(:formerCallsign :Broadcaster)
DataPropertyRange(:formerCallsign xsd:string)
Declaration(DataProperty(:formerChannel))
AnnotationAssertion(rdfs:label :formerChannel "former channel"@en)
DataPropertyDomain(:formerChannel :Broadcaster)
DataPropertyRange(:formerChannel xsd:string)
Declaration(DataProperty(:formerName))
AnnotationAssertion(rdfs:label :formerName "former name"@en)
AnnotationAssertion(rdfs:label :formerName "προηγούμενο όνομα"@el)
DataPropertyRange(:formerName xsd:string)
Declaration(DataProperty(:foundation))
AnnotationAssertion(rdfs:label :foundation "foundation"@en)
DataPropertyDomain(:foundation :PopulatedPlace)
DataPropertyRange(:foundation xsd:string)
Declaration(DataProperty(:foundationDate))
AnnotationAssertion(rdfs:label :foundationDate "date foundation of a populated place"@en)
DataPropertyDomain(:foundationDate :PopulatedPlace)
DataPropertyRange(:foundationDate xsd:date)
Declaration(DataProperty(:foundingDate))
AnnotationAssertion(rdfs:label :foundingDate "data założenia"@pl)
AnnotationAssertion(rdfs:label :foundingDate "ημερομηνία ίδρυσης"@el)
AnnotationAssertion(rdfs:label :foundingDate "創立日"@ja)
AnnotationAssertion(rdfs:label :foundingDate "Gründungsdatum"@de)
AnnotationAssertion(rdfs:label :foundingDate "founding date"@en)
DataPropertyRange(:foundingDate xsd:date)
Declaration(DataProperty(:foundingYear))
AnnotationAssertion(rdfs:label :foundingYear "año de fundación"@es)
AnnotationAssertion(rdfs:label :foundingYear "Gründungsjahr"@de)
AnnotationAssertion(rdfs:label :foundingYear "oprichtingsjaar"@nl)
AnnotationAssertion(rdfs:label :foundingYear "έτος ίδρυσης"@el)
AnnotationAssertion(rdfs:label :foundingYear "founding year"@en)
DataPropertyRange(:foundingYear xsd:gYear)
Declaration(DataProperty(:free))
AnnotationAssertion(rdfs:label :free "free"@en)
DataPropertyDomain(:free :FictionalCharacter)
DataPropertyRange(:free xsd:string)
Declaration(DataProperty(:freeFlightTime))
AnnotationAssertion(rdfs:label :freeFlightTime "free flight time (s)"@en)
DataPropertyDomain(:freeFlightTime :Spacecraft)
DataPropertyRange(:freeFlightTime xsd:double)
Declaration(DataProperty(:freeLabel))
AnnotationAssertion(rdfs:label :freeLabel "freeLabel"@en)
DataPropertyDomain(:freeLabel :FictionalCharacter)
DataPropertyRange(:freeLabel xsd:string)
Declaration(DataProperty(:frenchName))
AnnotationAssertion(rdfs:label :frenchName "french name of a settlement"@en)
DataPropertyDomain(:frenchName :PopulatedPlace)
DataPropertyRange(:frenchName xsd:string)
Declaration(DataProperty(:frenchNickname))
AnnotationAssertion(rdfs:label :frenchNickname "french nickname for something"@en)
DataPropertyRange(:frenchNickname xsd:string)
Declaration(DataProperty(:frequency))
AnnotationAssertion(rdfs:label :frequency "frequency (Hz)"@en)
AnnotationAssertion(rdfs:label :frequency "fréquence (Hz)"@fr)
AnnotationAssertion(rdfs:label :frequency "συχνότητα (Hz)"@el)
DataPropertyRange(:frequency xsd:double)
Declaration(DataProperty(:frequencyOfPublication))
AnnotationAssertion(rdfs:label :frequencyOfPublication "frequentie van publicatie"@nl)
AnnotationAssertion(rdfs:comment :frequencyOfPublication "Die Häufigkeit der Erscheinungen des Periodikums (z.B. wöchentlich, monatlich)."@de)
AnnotationAssertion(rdfs:comment :frequencyOfPublication "The frequency of periodical publication (eg. Weekly, Bimonthly)."@en)
AnnotationAssertion(rdfs:label :frequencyOfPublication "frequency of publication"@en)
AnnotationAssertion(rdfs:label :frequencyOfPublication "Erscheinungsweise"@de)
DataPropertyDomain(:frequencyOfPublication :PeriodicalLiterature)
DataPropertyRange(:frequencyOfPublication xsd:string)
Declaration(DataProperty(:frequentlyUpdated))
AnnotationAssertion(rdfs:label :frequentlyUpdated "frequently updated"@en)
DataPropertyDomain(:frequentlyUpdated :Software)
DataPropertyRange(:frequentlyUpdated xsd:string)
Declaration(DataProperty(:frioulanName))
AnnotationAssertion(rdfs:label :frioulanName "city frioulan name"@en)
DataPropertyDomain(:frioulanName :PopulatedPlace)
DataPropertyRange(:frioulanName xsd:string)
Declaration(DataProperty(:frontierLength))
AnnotationAssertion(rdfs:label :frontierLength "length of a frontier"@en)
DataPropertyDomain(:frontierLength :Place)
DataPropertyRange(:frontierLength xsd:float)
Declaration(DataProperty(:frozen))
AnnotationAssertion(rdfs:label :frozen "παγωμένη"@el)
AnnotationAssertion(rdfs:label :frozen "frozen"@en)
DataPropertyDomain(:frozen :Lake)
DataPropertyRange(:frozen xsd:string)
Declaration(DataProperty(:fuelCapacity))
AnnotationAssertion(rdfs:label :fuelCapacity "fuel capacity (μ³)"@en)
FunctionalDataProperty(:fuelCapacity)
DataPropertyDomain(:fuelCapacity :Automobile)
DataPropertyRange(:fuelCapacity xsd:double)
Declaration(DataProperty(:fuelConsumption))
AnnotationAssertion(rdfs:label :fuelConsumption "fuel consumption"@en)
AnnotationAssertion(rdfs:label :fuelConsumption "brandstofverbruik"@nl)
FunctionalDataProperty(:fuelConsumption)
DataPropertyDomain(:fuelConsumption :AutomobileEngine)
DataPropertyRange(:fuelConsumption xsd:string)
Declaration(DataProperty(:fuelType))
AnnotationAssertion(rdfs:label :fuelType "fuel type"@en)
DataPropertyDomain(:fuelType :AutomobileEngine)
Declaration(DataProperty(:functionEndDate))
AnnotationAssertion(rdfs:label :functionEndDate "function end date"@en)
DataPropertyDomain(:functionEndDate :PersonFunction)
DataPropertyRange(:functionEndDate xsd:date)
Declaration(DataProperty(:functionEndYear))
AnnotationAssertion(rdfs:label :functionEndYear "laatste jaar functie"@nl)
AnnotationAssertion(rdfs:label :functionEndYear "function end year"@en)
DataPropertyDomain(:functionEndYear :PersonFunction)
DataPropertyRange(:functionEndYear xsd:gYear)
Declaration(DataProperty(:functionStartDate))
AnnotationAssertion(rdfs:label :functionStartDate "function start date"@en)
DataPropertyDomain(:functionStartDate :PersonFunction)
DataPropertyRange(:functionStartDate xsd:date)
Declaration(DataProperty(:functionStartYear))
AnnotationAssertion(rdfs:label :functionStartYear "function start year"@en)
DataPropertyDomain(:functionStartYear :PersonFunction)
DataPropertyRange(:functionStartYear xsd:gYear)
Declaration(DataProperty(:gaelicName))
AnnotationAssertion(rdfs:label :gaelicName "gaelic name"@en)
DataPropertyDomain(:gaelicName :Settlement)
DataPropertyRange(:gaelicName xsd:string)
Declaration(DataProperty(:gagaouze))
AnnotationAssertion(rdfs:label :gagaouze "gagaouze"@en)
DataPropertyDomain(:gagaouze :PopulatedPlace)
DataPropertyRange(:gagaouze xsd:string)
Declaration(DataProperty(:gameModus))
AnnotationAssertion(rdfs:label :gameModus "Modus the game can be played in"@en)
DataPropertyRange(:gameModus xsd:string)
Declaration(DataProperty(:games))
AnnotationAssertion(rdfs:label :games "αγώνες"@el)
AnnotationAssertion(rdfs:label :games "games"@en)
DataPropertyDomain(:games :OlympicResult)
DataPropertyRange(:games xsd:string)
Declaration(DataProperty(:geneLocationEnd))
AnnotationAssertion(rdfs:label :geneLocationEnd "gene location end"@en)
AnnotationAssertion(rdfs:label :geneLocationEnd "遺伝子座のエンド座標"@ja)
AnnotationAssertion(rdfs:comment :geneLocationEnd "the end of the gene"@en)
DataPropertyDomain(:geneLocationEnd :GeneLocation)
DataPropertyRange(:geneLocationEnd xsd:integer)
Declaration(DataProperty(:geneLocationStart))
AnnotationAssertion(rdfs:label :geneLocationStart "遺伝子座のスタート座標"@ja)
AnnotationAssertion(rdfs:comment :geneLocationStart "the start of the gene coordinates"@en)
AnnotationAssertion(rdfs:label :geneLocationStart "gene location start"@en)
DataPropertyDomain(:geneLocationStart :GeneLocation)
DataPropertyRange(:geneLocationStart xsd:integer)
Declaration(DataProperty(:generalCouncil))
AnnotationAssertion(rdfs:label :generalCouncil "general council"@en)
DataPropertyDomain(:generalCouncil :Place)
DataPropertyRange(:generalCouncil xsd:string)
Declaration(DataProperty(:genereviewsid))
AnnotationAssertion(rdfs:label :genereviewsid "GeneReviewsID"@en)
DataPropertyDomain(:genereviewsid :Disease)
DataPropertyRange(:genereviewsid xsd:string)
Declaration(DataProperty(:genereviewsname))
AnnotationAssertion(rdfs:label :genereviewsname "GeneReviewsName"@en)
DataPropertyDomain(:genereviewsname :Disease)
DataPropertyRange(:genereviewsname xsd:string)
Declaration(DataProperty(:genomeDB))
AnnotationAssertion(rdfs:comment :genomeDB "the edition of the database used (i.e. hg19)"@en)
AnnotationAssertion(rdfs:label :genomeDB "Genome DB"@en)
AnnotationAssertion(rdfs:label :genomeDB "Genome DB"@ja)
DataPropertyDomain(:genomeDB :GeneLocation)
DataPropertyRange(:genomeDB xsd:string)
Declaration(DataProperty(:geolocDual))
AnnotationAssertion(rdfs:label :geolocDual "geolocdual"@en)
DataPropertyDomain(:geolocDual :Place)
DataPropertyRange(:geolocDual xsd:string)
Declaration(DataProperty(:geologicPeriod))
AnnotationAssertion(rdfs:label :geologicPeriod "geologic period"@en)
DataPropertyDomain(:geologicPeriod :Place)
DataPropertyRange(:geologicPeriod xsd:string)
Declaration(DataProperty(:geology))
AnnotationAssertion(rdfs:label :geology "géologie"@fr)
AnnotationAssertion(rdfs:label :geology "geology"@en)
AnnotationAssertion(rdfs:label :geology "γεωλογία"@el)
DataPropertyRange(:geology xsd:string)
Declaration(DataProperty(:germanName))
AnnotationAssertion(rdfs:label :germanName "city german name"@en)
DataPropertyDomain(:germanName :PopulatedPlace)
DataPropertyRange(:germanName xsd:string)
Declaration(DataProperty(:giniCoefficient))
AnnotationAssertion(rdfs:label :giniCoefficient "gini coefficient"@en)
AnnotationAssertion(rdfs:comment :giniCoefficient "is a measure of the inequality of a distribution. It is commonly used as a measure of inequality of income or wealth."@en)
AnnotationAssertion(rdfs:label :giniCoefficient "coeficiente de Gini"@pt)
DataPropertyDomain(:giniCoefficient :PopulatedPlace)
DataPropertyRange(:giniCoefficient xsd:float)
Declaration(DataProperty(:giniCoefficientAsOf))
AnnotationAssertion(rdfs:label :giniCoefficientAsOf "gini coefficient as of"@en)
AnnotationAssertion(rdfs:label :giniCoefficientAsOf "coeficiente de Gini em"@pt)
DataPropertyDomain(:giniCoefficientAsOf :PopulatedPlace)
DataPropertyRange(:giniCoefficientAsOf xsd:date)
Declaration(DataProperty(:giniCoefficientRanking))
AnnotationAssertion(rdfs:label :giniCoefficientRanking "gini coefficient ranking"@en)
AnnotationAssertion(rdfs:label :giniCoefficientRanking "posição no ranking do coeficiente de Gini"@pt)
DataPropertyDomain(:giniCoefficientRanking :PopulatedPlace)
DataPropertyRange(:giniCoefficientRanking xsd:positiveInteger)
Declaration(DataProperty(:gnisCode))
AnnotationAssertion(rdfs:label :gnisCode "gnis code"@en)
DataPropertyDomain(:gnisCode :PopulatedPlace)
DataPropertyRange(:gnisCode xsd:string)
Declaration(DataProperty(:gnl))
AnnotationAssertion(rdfs:label :gnl "gnl"@en)
DataPropertyDomain(:gnl :PopulatedPlace)
DataPropertyRange(:gnl xsd:string)
Declaration(DataProperty(:goalsInLeague))
AnnotationAssertion(rdfs:label :goalsInLeague "doelpunten in de competitie"@nl)
AnnotationAssertion(rdfs:label :goalsInLeague "goals in league"@en)
DataPropertyDomain(:goalsInLeague :SoccerPlayer)
DataPropertyRange(:goalsInLeague xsd:nonNegativeInteger)
Declaration(DataProperty(:goalsInNationalTeam))
AnnotationAssertion(rdfs:label :goalsInNationalTeam "interland doelpunten"@nl)
AnnotationAssertion(rdfs:label :goalsInNationalTeam "goals in national team"@en)
DataPropertyDomain(:goalsInNationalTeam :SoccerPlayer)
DataPropertyRange(:goalsInNationalTeam xsd:nonNegativeInteger)
Declaration(DataProperty(:governmentElevation))
AnnotationAssertion(rdfs:label :governmentElevation "government elevation (μ)"@en)
DataPropertyDomain(:governmentElevation :Island)
DataPropertyRange(:governmentElevation xsd:double)
Declaration(DataProperty(:governorate))
AnnotationAssertion(rdfs:label :governorate "governorate"@en)
DataPropertyDomain(:governorate :PopulatedPlace)
DataPropertyRange(:governorate xsd:string)
Declaration(DataProperty(:grayPage))
AnnotationAssertion(rdfs:label :grayPage "Gray page"@en)
AnnotationAssertion(rdfs:comment :grayPage "Refers to the famous 1918 edition of Gray's Anatomy."@en)
DataPropertyDomain(:grayPage :AnatomicalStructure)
DataPropertyRange(:grayPage xsd:positiveInteger)
Declaration(DataProperty(:graySubject))
AnnotationAssertion(rdfs:label :graySubject "Gray subject"@en)
AnnotationAssertion(rdfs:comment :graySubject "Refers to the famous 1918 edition of Gray's Anatomy."@en)
DataPropertyDomain(:graySubject :AnatomicalStructure)
DataPropertyRange(:graySubject xsd:positiveInteger)
Declaration(DataProperty(:greekName))
AnnotationAssertion(rdfs:label :greekName "city greek name"@en)
DataPropertyDomain(:greekName :PopulatedPlace)
DataPropertyRange(:greekName xsd:string)
Declaration(DataProperty(:greenLongDistancePisteNumber))
AnnotationAssertion(rdfs:label :greenLongDistancePisteNumber "green long distance piste number"@en)
DataPropertyDomain(:greenLongDistancePisteNumber :Place)
DataPropertyRange(:greenLongDistancePisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:greenSkiPisteNumber))
AnnotationAssertion(rdfs:label :greenSkiPisteNumber "green ski piste number"@en)
DataPropertyDomain(:greenSkiPisteNumber :Place)
DataPropertyRange(:greenSkiPisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:gridReference))
AnnotationAssertion(rdfs:label :gridReference "grid reference"@en)
AnnotationAssertion(rdfs:label :gridReference "coördinaten"@nl)
DataPropertyDomain(:gridReference :Place)
DataPropertyRange(:gridReference xsd:string)
Declaration(DataProperty(:grindingCapability))
AnnotationAssertion(rdfs:comment :grindingCapability "grinding capability for Mills"@en)
AnnotationAssertion(rdfs:label :grindingCapability "maal capaciteit"@nl)
AnnotationAssertion(rdfs:label :grindingCapability "grinding capability"@en)
DataPropertyDomain(:grindingCapability :Mill)
DataPropertyRange(:grindingCapability xsd:string)
Declaration(DataProperty(:gross))
AnnotationAssertion(rdfs:label :gross "ακαθάριστα ($)"@el)
AnnotationAssertion(rdfs:label :gross "gross ($)"@en)
DataPropertyDomain(:gross :Film)
DataPropertyRange(:gross xsd:double)
Declaration(DataProperty(:grossDomesticProduct))
AnnotationAssertion(rdfs:label :grossDomesticProduct "gross domestic product (GDP) ($)"@en)
DataPropertyDomain(:grossDomesticProduct :PopulatedPlace)
DataPropertyRange(:grossDomesticProduct xsd:double)
Declaration(DataProperty(:grossDomesticProductAsOf))
AnnotationAssertion(rdfs:label :grossDomesticProductAsOf "produto interno bruto em"@pt)
AnnotationAssertion(rdfs:label :grossDomesticProductAsOf "gross domestic product as of"@en)
DataPropertyDomain(:grossDomesticProductAsOf :PopulatedPlace)
DataPropertyRange(:grossDomesticProductAsOf xsd:date)
Declaration(DataProperty(:grossDomesticProductPerPeople))
AnnotationAssertion(rdfs:label :grossDomesticProductPerPeople "gross domestic product per people"@en)
DataPropertyDomain(:grossDomesticProductPerPeople :Place)
DataPropertyRange(:grossDomesticProductPerPeople xsd:string)
Declaration(DataProperty(:grossDomesticProductRank))
AnnotationAssertion(rdfs:label :grossDomesticProductRank "gross domestic product rank"@en)
DataPropertyDomain(:grossDomesticProductRank :Place)
DataPropertyRange(:grossDomesticProductRank xsd:string)
Declaration(DataProperty(:groupCommemorated))
AnnotationAssertion(rdfs:comment :groupCommemorated "Designates the category of people commemorated by a monument"@en)
AnnotationAssertion(rdfs:comment :groupCommemorated "Aanduiding van de categorie mensen die door dit monument worden herdacht"@nl)
AnnotationAssertion(rdfs:label :groupCommemorated "groep mensen herdacht"@nl)
AnnotationAssertion(rdfs:label :groupCommemorated "group commemorated"@en)
DataPropertyDomain(:groupCommemorated :Monument)
DataPropertyRange(:groupCommemorated xsd:string)
Declaration(DataProperty(:gun))
AnnotationAssertion(rdfs:label :gun "aircraft gun"@en)
AnnotationAssertion(rdfs:label :gun "Πολυβόλο"@el)
DataPropertyDomain(:gun :Aircraft)
DataPropertyRange(:gun xsd:string)
Declaration(DataProperty(:hairs))
AnnotationAssertion(rdfs:label :hairs "hairs"@en)
DataPropertyDomain(:hairs :FictionalCharacter)
DataPropertyRange(:hairs xsd:string)
Declaration(DataProperty(:hallOfFame))
AnnotationAssertion(rdfs:label :hallOfFame "hall of fame"@en)
DataPropertyDomain(:hallOfFame :IceHockeyPlayer)
DataPropertyRange(:hallOfFame xsd:string)
Declaration(DataProperty(:hasNaturalBust))
AnnotationAssertion(rdfs:label :hasNaturalBust "has natural bust"@en)
AnnotationAssertion(rdfs:label :hasNaturalBust "tem busto natural"@pt)
DataPropertyDomain(:hasNaturalBust :Person)
DataPropertyRange(:hasNaturalBust xsd:string)
Declaration(DataProperty(:hasSurfaceForm))
AnnotationAssertion(rdfs:label :hasSurfaceForm "επιφάνεια από"@el)
AnnotationAssertion(rdfs:comment :hasSurfaceForm "Reserved for DBpedia."@en)
DataPropertyRange(:hasSurfaceForm xsd:string)
Declaration(DataProperty(:headLabel))
AnnotationAssertion(rdfs:label :headLabel "head label"@en)
DataPropertyDomain(:headLabel :School)
DataPropertyRange(:headLabel xsd:string)
Declaration(DataProperty(:height))
AnnotationAssertion(rdfs:label :height "ύψος (μ)"@el)
AnnotationAssertion(rdfs:label :height "hauteur (μ)"@fr)
AnnotationAssertion(rdfs:label :height "hoogte (μ)"@nl)
AnnotationAssertion(rdfs:label :height "身長 (μ)"@ja)
AnnotationAssertion(rdfs:label :height "altura (μ)"@pt)
AnnotationAssertion(rdfs:label :height "height (μ)"@en)
AnnotationAssertion(rdfs:label :height "Höhe (μ)"@de)
AnnotationAssertion(rdfs:label :height "višina (μ)"@sl)
FunctionalDataProperty(:height)
DataPropertyRange(:height xsd:double)
Declaration(DataProperty(:heightAboveAverageTerrain))
AnnotationAssertion(rdfs:label :heightAboveAverageTerrain "height above average terrain (μ)"@en)
DataPropertyDomain(:heightAboveAverageTerrain :Broadcaster)
DataPropertyRange(:heightAboveAverageTerrain xsd:double)
Declaration(DataProperty(:hgncid))
AnnotationAssertion(rdfs:label :hgncid "HGNCid"@ja)
AnnotationAssertion(rdfs:label :hgncid "HGNCid"@en)
DataPropertyDomain(:hgncid :Biomolecule)
DataPropertyRange(:hgncid xsd:string)
Declaration(DataProperty(:highestBreak))
AnnotationAssertion(rdfs:label :highestBreak "Höchstes Break"@de)
AnnotationAssertion(rdfs:label :highestBreak "highest break"@en)
DataPropertyDomain(:highestBreak :SnookerPlayer)
DataPropertyRange(:highestBreak xsd:integer)
Declaration(DataProperty(:highestBuildingInYear))
AnnotationAssertion(rdfs:label :highestBuildingInYear "highest building in year"@en)
DataPropertyDomain(:highestBuildingInYear :Skyscraper)
DataPropertyRange(:highestBuildingInYear xsd:date)
Declaration(DataProperty(:highestPointIsland))
AnnotationAssertion(rdfs:label :highestPointIsland "highest point of the island"@en)
DataPropertyDomain(:highestPointIsland :Island)
DataPropertyRange(:highestPointIsland xsd:string)
Declaration(DataProperty(:highestRank))
AnnotationAssertion(rdfs:label :highestRank "highest rank"@en)
AnnotationAssertion(rdfs:label :highestRank "höchster Ranglistenplatz"@de)
DataPropertyDomain(:highestRank :SnookerPlayer)
DataPropertyRange(:highestRank xsd:integer)
Declaration(DataProperty(:hipSize))
AnnotationAssertion(rdfs:label :hipSize "hip size (μ)"@en)
AnnotationAssertion(rdfs:label :hipSize "ヒップ (μ)"@ja)
AnnotationAssertion(rdfs:label :hipSize "Hüftumfang (μ)"@de)
DataPropertyDomain(:hipSize :Person)
DataPropertyRange(:hipSize xsd:double)
Declaration(DataProperty(:historicalMap))
AnnotationAssertion(rdfs:label :historicalMap "historical map"@en)
DataPropertyDomain(:historicalMap :Place)
DataPropertyRange(:historicalMap xsd:string)
Declaration(DataProperty(:historicalName))
AnnotationAssertion(rdfs:label :historicalName "historical name"@en)
DataPropertyDomain(:historicalName :Place)
DataPropertyRange(:historicalName xsd:string)
Declaration(DataProperty(:historicalRegion))
AnnotationAssertion(rdfs:label :historicalRegion "historical region"@en)
DataPropertyDomain(:historicalRegion :PopulatedPlace)
DataPropertyRange(:historicalRegion xsd:string)
Declaration(DataProperty(:homeColourHexCode))
AnnotationAssertion(rdfs:label :homeColourHexCode "Farben Hex Code des Heimtrikots oder Teile dieses"@de)
AnnotationAssertion(rdfs:comment :homeColourHexCode "A colour represented by its hex code (e.g.: #FF0000 or #40E0D0)."@en)
AnnotationAssertion(rdfs:label :homeColourHexCode "colour hex code of home jersey or its parts"@en)
DataPropertyRange(:homeColourHexCode xsd:string)
Declaration(DataProperty(:hraState))
AnnotationAssertion(rdfs:label :hraState "hra state"@en)
DataPropertyDomain(:hraState :PopulatedPlace)
DataPropertyRange(:hraState xsd:string)
Declaration(DataProperty(:hsvCoordinateHue))
AnnotationAssertion(rdfs:label :hsvCoordinateHue "hue coordinate in the HSV colour space"@en)
DataPropertyDomain(:hsvCoordinateHue :Colour)
DataPropertyRange(:hsvCoordinateHue xsd:integer)
Declaration(DataProperty(:hsvCoordinateSaturation))
AnnotationAssertion(rdfs:label :hsvCoordinateSaturation "saturation coordinate in the HSV colour space"@en)
DataPropertyDomain(:hsvCoordinateSaturation :Colour)
DataPropertyRange(:hsvCoordinateSaturation xsd:integer)
Declaration(DataProperty(:hsvCoordinateValue))
AnnotationAssertion(rdfs:label :hsvCoordinateValue "value coordinate in the HSV colour space"@en)
DataPropertyDomain(:hsvCoordinateValue :Colour)
DataPropertyRange(:hsvCoordinateValue xsd:integer)
Declaration(DataProperty(:humanDevelopmentIndex))
AnnotationAssertion(rdfs:comment :humanDevelopmentIndex "a composite statistic used to rank countries by level of \"human development\""@en)
AnnotationAssertion(rdfs:label :humanDevelopmentIndex "Índice de Desenvolvimento Humano (IDH)"@pt)
AnnotationAssertion(rdfs:label :humanDevelopmentIndex "Human Development Index (HDI)"@en)
DataPropertyDomain(:humanDevelopmentIndex :PopulatedPlace)
DataPropertyRange(:humanDevelopmentIndex xsd:float)
Declaration(DataProperty(:humanDevelopmentIndexAsOf))
AnnotationAssertion(rdfs:label :humanDevelopmentIndexAsOf "human development index as of"@en)
AnnotationAssertion(rdfs:label :humanDevelopmentIndexAsOf "Índice de desenvolvimento humano em"@pt)
DataPropertyDomain(:humanDevelopmentIndexAsOf :PopulatedPlace)
DataPropertyRange(:humanDevelopmentIndexAsOf xsd:date)
Declaration(DataProperty(:humanDevelopmentIndexRank))
AnnotationAssertion(rdfs:label :humanDevelopmentIndexRank "human development index rank"@en)
DataPropertyDomain(:humanDevelopmentIndexRank :Place)
DataPropertyRange(:humanDevelopmentIndexRank xsd:string)
Declaration(DataProperty(:iafdId))
AnnotationAssertion(rdfs:label :iafdId "código no iafd"@pt)
AnnotationAssertion(rdfs:label :iafdId "iafd id"@el)
AnnotationAssertion(rdfs:label :iafdId "iafd id"@en)
DataPropertyDomain(:iafdId :Film)
DataPropertyRange(:iafdId xsd:string)
Declaration(DataProperty(:iataAirlineCode))
AnnotationAssertion(rdfs:label :iataAirlineCode "IATA code"@en)
AnnotationAssertion(rdfs:comment :iataAirlineCode "IATA designation for airline companies"@en)
DataPropertyDomain(:iataAirlineCode :Airline)
DataPropertyRange(:iataAirlineCode xsd:string)
Declaration(DataProperty(:iataLocationIdentifier))
AnnotationAssertion(rdfs:label :iataLocationIdentifier "ΙΑΤΑ"@el)
AnnotationAssertion(rdfs:label :iataLocationIdentifier "IATA Location Identifier"@en)
DataPropertyDomain(:iataLocationIdentifier :Infrastructure)
DataPropertyRange(:iataLocationIdentifier xsd:string)
Declaration(DataProperty(:ibdbId))
AnnotationAssertion(rdfs:comment :ibdbId "The Internet Broadway Database ID (IBDB ID) from ibdb.com."@en)
AnnotationAssertion(rdfs:label :ibdbId "IBDB ID"@en)
DataPropertyDomain(:ibdbId :Play)
DataPropertyRange(:ibdbId xsd:string)
Declaration(DataProperty(:icaoAirlineCode))
AnnotationAssertion(rdfs:comment :icaoAirlineCode "ICAO designation for airline companies"@en)
AnnotationAssertion(rdfs:label :icaoAirlineCode "ICAO code"@en)
DataPropertyDomain(:icaoAirlineCode :Airline)
DataPropertyRange(:icaoAirlineCode xsd:string)
Declaration(DataProperty(:icaoLocationIdentifier))
AnnotationAssertion(rdfs:label :icaoLocationIdentifier "ICAO Location Identifier"@en)
AnnotationAssertion(rdfs:label :icaoLocationIdentifier "ΙΚΑΟ"@el)
DataPropertyDomain(:icaoLocationIdentifier :Airport)
DataPropertyRange(:icaoLocationIdentifier xsd:string)
Declaration(DataProperty(:icd10))
AnnotationAssertion(rdfs:label :icd10 "ICD10"@nl)
AnnotationAssertion(rdfs:label :icd10 "ICD10"@en)
DataPropertyDomain(:icd10 :Disease)
DataPropertyRange(:icd10 xsd:string)
Declaration(DataProperty(:icd9))
AnnotationAssertion(rdfs:label :icd9 "ICD9"@nl)
AnnotationAssertion(rdfs:label :icd9 "ICD9"@en)
DataPropertyDomain(:icd9 :Disease)
DataPropertyRange(:icd9 xsd:string)
Declaration(DataProperty(:icdo))
AnnotationAssertion(rdfs:label :icdo "ICDO"@en)
AnnotationAssertion(rdfs:label :icdo "ICDO"@nl)
DataPropertyDomain(:icdo :Disease)
DataPropertyRange(:icdo xsd:string)
Declaration(DataProperty(:id))
AnnotationAssertion(rdfs:label :id "id"@en)
DataPropertyDomain(:id :WorldHeritageSite)
DataPropertyRange(:id xsd:string)
Declaration(DataProperty(:identificationSymbol))
AnnotationAssertion(rdfs:label :identificationSymbol "identification symbol"@en)
DataPropertyDomain(:identificationSymbol :MilitaryUnit)
DataPropertyRange(:identificationSymbol xsd:string)
Declaration(DataProperty(:illiteracy))
AnnotationAssertion(rdfs:label :illiteracy "illiteracy"@en)
AnnotationAssertion(rdfs:label :illiteracy "analfabetismo"@pt)
DataPropertyDomain(:illiteracy :PopulatedPlace)
DataPropertyRange(:illiteracy xsd:float)
Declaration(DataProperty(:imageSize))
AnnotationAssertion(rdfs:label :imageSize "イメージサイズ　(px2)"@ja)
AnnotationAssertion(rdfs:label :imageSize "μέγεθος εικόνας (px1)"@el)
AnnotationAssertion(rdfs:label :imageSize "image size (px)"@en)
AnnotationAssertion(rdfs:label :imageSize "tamaño de la imagen (px)"@es)
AnnotationAssertion(rdfs:comment :imageSize "the image size expressed in pixels"@en)
AnnotationAssertion(rdfs:label :imageSize "taille de l'image (px)"@fr)
DataPropertyRange(:imageSize xsd:integer)
Declaration(DataProperty(:imdbId))
AnnotationAssertion(rdfs:label :imdbId "IMDB id"@nl)
AnnotationAssertion(rdfs:label :imdbId "IMDB id"@en)
AnnotationAssertion(rdfs:label :imdbId "imdb id"@el)
AnnotationAssertion(rdfs:label :imdbId "IMDb id"@ja)
DataPropertyDomain(:imdbId :Film)
DataPropertyRange(:imdbId xsd:string)
Declaration(DataProperty(:impactFactor))
AnnotationAssertion(rdfs:comment :impactFactor "Der Impact Factor oder genauer Journal Impact Factor (JIF) einer Fachzeitschrift soll messen, wie oft andere Zeitschriften einen Artikel aus ihr in Relation zur Gesamtzahl der dort veröffentlichten Artikel zitieren. Je höher der Impact Factor, desto angesehener ist eine Fachzeitschrift."@de)
AnnotationAssertion(rdfs:label :impactFactor "impact factor"@en)
AnnotationAssertion(rdfs:comment :impactFactor "The impact factor, often abbreviated IF, is a measure reflecting the average number of citations to articles published in science and social science journals."@en)
AnnotationAssertion(rdfs:label :impactFactor "Impact Factor"@de)
DataPropertyDomain(:impactFactor :AcademicJournal)
DataPropertyRange(:impactFactor xsd:double)
Declaration(DataProperty(:impactFactorAsOf))
AnnotationAssertion(rdfs:label :impactFactorAsOf "impact factor as of"@en)
AnnotationAssertion(rdfs:comment :impactFactorAsOf "Census year of the imapct factor."@en)
AnnotationAssertion(rdfs:comment :impactFactorAsOf "Erhebungsjahr des Impact Factors."@de)
AnnotationAssertion(rdfs:label :impactFactorAsOf "Impact Factor ist von"@de)
DataPropertyDomain(:impactFactorAsOf :AcademicJournal)
DataPropertyRange(:impactFactorAsOf xsd:gYear)
Declaration(DataProperty(:inchi))
AnnotationAssertion(rdfs:label :inchi "The IUPAC International Chemical Identifier"@en)
AnnotationAssertion(rdfs:label :inchi "Internationale chemische Bezeichnung der IUPAC"@de)
DataPropertyDomain(:inchi :ChemicalCompound)
DataPropertyRange(:inchi xsd:string)
Declaration(DataProperty(:inclination))
AnnotationAssertion(rdfs:label :inclination "inclination"@en)
DataPropertyDomain(:inclination :Spacecraft)
DataPropertyRange(:inclination xsd:float)
Declaration(DataProperty(:income))
AnnotationAssertion(rdfs:label :income "income"@en)
DataPropertyDomain(:income :PopulatedPlace)
DataPropertyRange(:income xsd:string)
Declaration(DataProperty(:individualisedGnd))
AnnotationAssertion(rdfs:label :individualisedGnd "individualised GND number"@en)
AnnotationAssertion(rdfs:comment :individualisedGnd "GND (Gemeinsame Normdatei) is an international authority file for the organisation of personal names, subject headings and corporate bodies from catalogues. It is used mainly for documentation in libraries and archives. The GND is managed by the German National Library in cooperation with various library networks. The GND falls under the Creative Commons Zero(CC0) license."@en)
AnnotationAssertion(rdfs:label :individualisedGnd "Gemeinsame Normdatei"@de)
DataPropertyRange(:individualisedGnd xsd:string)
Declaration(DataProperty(:individualisedPnd))
AnnotationAssertion(rdfs:comment :individualisedPnd "PND (Personennamendatei) data about a person. PND is published by the German National Library. For each person there is a record with her/his name, birth and occupation connected with a unique identifier, the PND number."@en)
AnnotationAssertion(rdfs:label :individualisedPnd "individualised PND number"@en)
AnnotationAssertion(rdfs:label :individualisedPnd "Personennamendatei"@de)
DataPropertyDomain(:individualisedPnd :Person)
DataPropertyRange(:individualisedPnd xsd:nonNegativeInteger)
Declaration(DataProperty(:infantMortality))
AnnotationAssertion(rdfs:label :infantMortality "mortalidade infantil"@pt)
AnnotationAssertion(rdfs:label :infantMortality "infant mortality"@en)
DataPropertyDomain(:infantMortality :PopulatedPlace)
DataPropertyRange(:infantMortality xsd:float)
Declaration(DataProperty(:information))
AnnotationAssertion(rdfs:label :information "information"@en)
DataPropertyDomain(:information :Place)
DataPropertyRange(:information xsd:string)
Declaration(DataProperty(:informationName))
AnnotationAssertion(rdfs:label :informationName "information name"@en)
DataPropertyDomain(:informationName :Place)
DataPropertyRange(:informationName xsd:string)
Declaration(DataProperty(:initiallyUsedFor))
AnnotationAssertion(rdfs:label :initiallyUsedFor "usage initial"@fr)
AnnotationAssertion(rdfs:label :initiallyUsedFor "initally used for"@en)
AnnotationAssertion(rdfs:comment :initiallyUsedFor "Initial use of the architectural structure."@en)
AnnotationAssertion(rdfs:label :initiallyUsedFor "uso inicial"@es)
DataPropertyDomain(:initiallyUsedFor :ArchitecturalStructure)
DataPropertyRange(:initiallyUsedFor xsd:string)
Declaration(DataProperty(:inn))
AnnotationAssertion(rdfs:label :inn "DCI"@fr)
AnnotationAssertion(rdfs:comment :inn "International Nonproprietary Name given to a pharmaceutical substance"@en)
AnnotationAssertion(rdfs:label :inn "INN"@en)
DataPropertyDomain(:inn :ChemicalCompound)
DataPropertyRange(:inn xsd:string)
Declaration(DataProperty(:inseeCode))
AnnotationAssertion(rdfs:label :inseeCode "INSEE-code"@nl)
AnnotationAssertion(rdfs:comment :inseeCode "numerical indexing code used by the French National Institute for Statistics and Economic Studies (INSEE) to identify various entities"@en)
AnnotationAssertion(rdfs:label :inseeCode "INSEE code"@en)
DataPropertyRange(:inseeCode xsd:nonNegativeInteger)
Declaration(DataProperty(:interest))
AnnotationAssertion(rdfs:label :interest "interest"@en)
AnnotationAssertion(rdfs:label :interest "ενδιαφέρον"@el)
DataPropertyDomain(:interest :SiteOfSpecialScientificInterest)
DataPropertyRange(:interest xsd:string)
Declaration(DataProperty(:internationalPhonePrefix))
AnnotationAssertion(rdfs:label :internationalPhonePrefix "international phone prefix"@en)
DataPropertyDomain(:internationalPhonePrefix :PopulatedPlace)
DataPropertyRange(:internationalPhonePrefix xsd:string)
Declaration(DataProperty(:internationalPhonePrefixLabel))
AnnotationAssertion(rdfs:label :internationalPhonePrefixLabel "international phone prefix label"@en)
DataPropertyDomain(:internationalPhonePrefixLabel :PopulatedPlace)
DataPropertyRange(:internationalPhonePrefixLabel xsd:string)
Declaration(DataProperty(:internationally))
AnnotationAssertion(rdfs:label :internationally "internationally"@en)
DataPropertyDomain(:internationally :Company)
DataPropertyRange(:internationally xsd:boolean)
Declaration(DataProperty(:introduced))
AnnotationAssertion(rdfs:label :introduced "introduced"@en)
DataPropertyDomain(:introduced :Beverage)
DataPropertyRange(:introduced xsd:date)
Declaration(DataProperty(:introductionDate))
AnnotationAssertion(rdfs:label :introductionDate "introduction date"@en)
DataPropertyDomain(:introductionDate :MeanOfTransportation)
DataPropertyRange(:introductionDate xsd:date)
Declaration(DataProperty(:iobdbId))
AnnotationAssertion(rdfs:comment :iobdbId "Lortel Archives Internet Off-Broadway database \"show id\" from lortel.org."@en)
AnnotationAssertion(rdfs:label :iobdbId "IOBDB ID"@en)
DataPropertyDomain(:iobdbId :Play)
DataPropertyRange(:iobdbId xsd:string)
Declaration(DataProperty(:irishName))
AnnotationAssertion(rdfs:label :irishName "irish name"@en)
DataPropertyDomain(:irishName :Settlement)
DataPropertyRange(:irishName xsd:string)
Declaration(DataProperty(:isCityState))
AnnotationAssertion(rdfs:label :isCityState "is a city state"@en)
DataPropertyRange(:isCityState xsd:string)
Declaration(DataProperty(:isHandicappedAccessible))
AnnotationAssertion(rdfs:label :isHandicappedAccessible "is handicapped accessible"@en)
AnnotationAssertion(rdfs:label :isHandicappedAccessible "ist rollstuhlgerecht"@de)
AnnotationAssertion(rdfs:comment :isHandicappedAccessible "True if the station is handicapped accessible."@en)
DataPropertyDomain(:isHandicappedAccessible :Station)
DataPropertyRange(:isHandicappedAccessible xsd:boolean)
Declaration(DataProperty(:isPartOfRoute))
AnnotationAssertion(rdfs:comment :isPartOfRoute "Name of another route from which the route is part of. Infobox property values are mostly given as plain text, therefore range is xsd:string."@en)
AnnotationAssertion(rdfs:label :isPartOfRoute "is part of route"@en)
DataPropertyDomain(:isPartOfRoute :RouteOfTransportation)
DataPropertyRange(:isPartOfRoute xsd:string)
Declaration(DataProperty(:isPeerReviewed))
AnnotationAssertion(rdfs:comment :isPeerReviewed "In academia peer review is often used to determine an academic papers suitability for publication."@en)
AnnotationAssertion(rdfs:label :isPeerReviewed "is peer reviewed"@en)
DataPropertyDomain(:isPeerReviewed :AcademicJournal)
DataPropertyRange(:isPeerReviewed xsd:boolean)
Declaration(DataProperty(:isbn))
AnnotationAssertion(rdfs:label :isbn "ISBN"@nl)
AnnotationAssertion(rdfs:comment :isbn "The International Standard Book Number (ISBN) is a unique numeric commercial book identifier based upon the 9-digit Standard Book Numbering (SBN) code."@en)
AnnotationAssertion(rdfs:label :isbn "ISBN"@en)
DataPropertyDomain(:isbn :Book)
DataPropertyRange(:isbn xsd:string)
Declaration(DataProperty(:isil))
AnnotationAssertion(rdfs:label :isil "International Standard Identifier for Libraries and Related Organizations (ISIL)"@en)
DataPropertyDomain(:isil :Library)
DataPropertyRange(:isil xsd:string)
Declaration(DataProperty(:iso31661Code))
AnnotationAssertion(rdfs:comment :iso31661Code "defines codes for the names of countries, dependent territories, and special areas of geographical interest"@en)
AnnotationAssertion(rdfs:label :iso31661Code "ISO 3166-1 code"@en)
DataPropertyDomain(:iso31661Code :Place)
DataPropertyRange(:iso31661Code xsd:string)
Declaration(DataProperty(:isoCode))
AnnotationAssertion(rdfs:label :isoCode "iso code of a place"@en)
DataPropertyDomain(:isoCode :Place)
DataPropertyRange(:isoCode xsd:string)
Declaration(DataProperty(:issDockings))
AnnotationAssertion(rdfs:label :issDockings "iss dockings"@en)
DataPropertyDomain(:issDockings :SpaceShuttle)
DataPropertyRange(:issDockings xsd:nonNegativeInteger)
Declaration(DataProperty(:issn))
AnnotationAssertion(rdfs:label :issn "ISSN"@nl)
AnnotationAssertion(rdfs:label :issn "ISSN"@de)
AnnotationAssertion(rdfs:comment :issn "International Standard Serial Number (ISSN)"@en)
AnnotationAssertion(rdfs:label :issn "issn"@el)
AnnotationAssertion(rdfs:label :issn "issn"@en)
DataPropertyDomain(:issn :PeriodicalLiterature)
DataPropertyRange(:issn xsd:string)
Declaration(DataProperty(:ist))
AnnotationAssertion(rdfs:label :ist "ist"@en)
DataPropertyDomain(:ist :PopulatedPlace)
DataPropertyRange(:ist xsd:string)
Declaration(DataProperty(:istat))
AnnotationAssertion(rdfs:label :istat "code istat"@en)
DataPropertyDomain(:istat :PopulatedPlace)
DataPropertyRange(:istat xsd:string)
Declaration(DataProperty(:italianName))
AnnotationAssertion(rdfs:label :italianName "city italian name"@en)
DataPropertyDomain(:italianName :PopulatedPlace)
DataPropertyRange(:italianName xsd:string)
Declaration(DataProperty(:iucnCategory))
AnnotationAssertion(rdfs:label :iucnCategory "IUCN categorie"@nl)
AnnotationAssertion(rdfs:label :iucnCategory "iucn category"@en)
DataPropertyDomain(:iucnCategory :ProtectedArea)
DataPropertyRange(:iucnCategory xsd:string)
Declaration(DataProperty(:iupacName))
AnnotationAssertion(rdfs:label :iupacName "IUPAC名"@ja)
AnnotationAssertion(rdfs:label :iupacName "IUPAC name"@en)
DataPropertyDomain(:iupacName :Drug)
DataPropertyRange(:iupacName xsd:string)
Declaration(DataProperty(:japanName))
AnnotationAssertion(rdfs:label :japanName "japan name"@en)
DataPropertyDomain(:japanName :Place)
DataPropertyRange(:japanName xsd:string)
Declaration(DataProperty(:jstor))
AnnotationAssertion(rdfs:label :jstor "JSTOR"@en)
AnnotationAssertion(rdfs:comment :jstor "JSTOR number (short for Journal Storage) is a United States-based online system number for archiving academic journals."@en)
DataPropertyDomain(:jstor :AcademicJournal)
DataPropertyRange(:jstor xsd:string)
Declaration(DataProperty(:kabyleSettlementName))
AnnotationAssertion(rdfs:label :kabyleSettlementName "kabyle settlement name"@en)
DataPropertyRange(:kabyleSettlementName xsd:string)
Declaration(DataProperty(:kanjiName))
AnnotationAssertion(rdfs:label :kanjiName "kanji name"@en)
DataPropertyDomain(:kanjiName :PopulatedPlace)
DataPropertyRange(:kanjiName xsd:string)
Declaration(DataProperty(:kinOfLanguage))
AnnotationAssertion(rdfs:label :kinOfLanguage "kindOfLanguage"@en)
DataPropertyRange(:kinOfLanguage xsd:string)
Declaration(DataProperty(:kindOfCoordinate))
AnnotationAssertion(rdfs:label :kindOfCoordinate "kind of coordinate"@en)
DataPropertyDomain(:kindOfCoordinate :Place)
DataPropertyRange(:kindOfCoordinate xsd:string)
Declaration(DataProperty(:kindOfRock))
AnnotationAssertion(rdfs:label :kindOfRock "kind of rock"@en)
DataPropertyDomain(:kindOfRock :Place)
DataPropertyRange(:kindOfRock xsd:string)
Declaration(DataProperty(:ladinName))
AnnotationAssertion(rdfs:label :ladinName "city ladin name"@en)
DataPropertyDomain(:ladinName :PopulatedPlace)
DataPropertyRange(:ladinName xsd:string)
Declaration(DataProperty(:landArea))
AnnotationAssertion(rdfs:label :landArea "area of a land (m2)"@en)
EquivalentDataProperties(:landArea :area)
DataPropertyDomain(:landArea :Place)
DataPropertyRange(:landArea xsd:double)
Declaration(DataProperty(:landPercentage))
AnnotationAssertion(rdfs:label :landPercentage "land percentage of a place"@en)
DataPropertyDomain(:landPercentage :Place)
DataPropertyRange(:landPercentage xsd:float)
Declaration(DataProperty(:landRegistryCode))
AnnotationAssertion(rdfs:label :landRegistryCode "land registry code"@en)
DataPropertyRange(:landRegistryCode xsd:string)
Declaration(DataProperty(:landingDate))
AnnotationAssertion(rdfs:label :landingDate "landing date"@en)
DataPropertyDomain(:landingDate :SpaceMission)
DataPropertyRange(:landingDate xsd:date)
Declaration(DataProperty(:landingSite))
AnnotationAssertion(rdfs:label :landingSite "landing site"@en)
DataPropertyDomain(:landingSite :SpaceMission)
DataPropertyRange(:landingSite xsd:string)
Declaration(DataProperty(:landskap))
AnnotationAssertion(rdfs:label :landskap "norwegian landskap"@en)
DataPropertyRange(:landskap xsd:string)
Declaration(DataProperty(:landtag))
AnnotationAssertion(rdfs:label :landtag "austrian land tag"@en)
DataPropertyRange(:landtag xsd:string)
Declaration(DataProperty(:landtagMandate))
AnnotationAssertion(rdfs:label :landtagMandate "austrian land tag mandate"@en)
DataPropertyRange(:landtagMandate xsd:string)
Declaration(DataProperty(:largestWin))
AnnotationAssertion(rdfs:label :largestWin "largest win"@en)
DataPropertyDomain(:largestWin :SoccerClub)
DataPropertyRange(:largestWin xsd:string)
Declaration(DataProperty(:lastAirDate))
AnnotationAssertion(rdfs:label :lastAirDate "last air date"@en)
AnnotationAssertion(rdfs:label :lastAirDate "Sendeschluss"@de)
AnnotationAssertion(rdfs:comment :lastAirDate "The date on which the broadcaster made its last broadcast."@en)
DataPropertyDomain(:lastAirDate :Broadcaster)
DataPropertyRange(:lastAirDate xsd:date)
Declaration(DataProperty(:lastElectionDate))
AnnotationAssertion(rdfs:comment :lastElectionDate "The last election date for the house."@en)
AnnotationAssertion(rdfs:label :lastElectionDate "last election date"@en)
DataPropertyDomain(:lastElectionDate :Legislature)
DataPropertyRange(:lastElectionDate xsd:date)
Declaration(DataProperty(:lastFlightEndDate))
AnnotationAssertion(rdfs:label :lastFlightEndDate "last flight end date"@en)
DataPropertyDomain(:lastFlightEndDate :SpaceShuttle)
DataPropertyRange(:lastFlightEndDate xsd:date)
Declaration(DataProperty(:lastFlightStartDate))
AnnotationAssertion(rdfs:label :lastFlightStartDate "last flight start date"@en)
DataPropertyDomain(:lastFlightStartDate :SpaceShuttle)
DataPropertyRange(:lastFlightStartDate xsd:date)
Declaration(DataProperty(:lastLaunch))
AnnotationAssertion(rdfs:label :lastLaunch "last launch"@en)
DataPropertyDomain(:lastLaunch :YearInSpaceflight)
DataPropertyRange(:lastLaunch xsd:date)
Declaration(DataProperty(:lastLaunchDate))
AnnotationAssertion(rdfs:label :lastLaunchDate "last launch date"@en)
DataPropertyDomain(:lastLaunchDate :LaunchPad)
DataPropertyRange(:lastLaunchDate xsd:date)
Declaration(DataProperty(:lastPosition))
AnnotationAssertion(rdfs:label :lastPosition "last position"@en)
AnnotationAssertion(rdfs:label :lastPosition "τελευταία θέση"@el)
DataPropertyDomain(:lastPosition :FormulaOneRacer)
DataPropertyRange(:lastPosition xsd:positiveInteger)
Declaration(DataProperty(:lastPublicationDate))
AnnotationAssertion(rdfs:comment :lastPublicationDate "Date of the last publication."@en)
AnnotationAssertion(rdfs:label :lastPublicationDate "last publication date"@en)
DataPropertyDomain(:lastPublicationDate :WrittenWork)
DataPropertyRange(:lastPublicationDate xsd:date)
Declaration(DataProperty(:lastSeason))
AnnotationAssertion(rdfs:label :lastSeason "Προηγούμενη Περίοδος"@el)
AnnotationAssertion(rdfs:label :lastSeason "last season"@en)
DataPropertyDomain(:lastSeason :FormulaOneRacer)
DataPropertyRange(:lastSeason xsd:date)
Declaration(DataProperty(:latestPreviewDate))
AnnotationAssertion(rdfs:label :latestPreviewDate "latest preview date"@en)
DataPropertyDomain(:latestPreviewDate :Software)
DataPropertyRange(:latestPreviewDate xsd:date)
Declaration(DataProperty(:latestPreviewVersion))
AnnotationAssertion(rdfs:label :latestPreviewVersion "latest preview version"@en)
DataPropertyDomain(:latestPreviewVersion :Software)
DataPropertyRange(:latestPreviewVersion xsd:string)
Declaration(DataProperty(:latestReleaseDate))
AnnotationAssertion(rdfs:label :latestReleaseDate "date de dernière version"@fr)
AnnotationAssertion(rdfs:label :latestReleaseDate "latest release date"@en)
FunctionalDataProperty(:latestReleaseDate)
DataPropertyDomain(:latestReleaseDate :Software)
DataPropertyRange(:latestReleaseDate xsd:date)
Declaration(DataProperty(:latestReleaseVersion))
AnnotationAssertion(rdfs:label :latestReleaseVersion "latest release version"@en)
DataPropertyDomain(:latestReleaseVersion :Software)
DataPropertyRange(:latestReleaseVersion xsd:string)
Declaration(DataProperty(:launch))
AnnotationAssertion(rdfs:label :launch "launch"@en)
DataPropertyDomain(:launch :Spacecraft)
DataPropertyRange(:launch xsd:date)
Declaration(DataProperty(:launchDate))
AnnotationAssertion(rdfs:label :launchDate "launch date"@en)
DataPropertyDomain(:launchDate :SpaceMission)
DataPropertyRange(:launchDate xsd:date)
Declaration(DataProperty(:launches))
AnnotationAssertion(rdfs:label :launches "launches"@en)
DataPropertyDomain(:launches :LaunchPad)
DataPropertyRange(:launches xsd:nonNegativeInteger)
Declaration(DataProperty(:lawCountry))
AnnotationAssertion(rdfs:label :lawCountry "law country"@en)
DataPropertyDomain(:lawCountry :Place)
DataPropertyRange(:lawCountry xsd:string)
Declaration(DataProperty(:layingDown))
AnnotationAssertion(rdfs:label :layingDown "laying down"@en)
DataPropertyDomain(:layingDown :Ship)
DataPropertyRange(:layingDown xsd:date)
Declaration(DataProperty(:lcc))
AnnotationAssertion(rdfs:label :lcc "LCC"@en)
AnnotationAssertion(rdfs:comment :lcc "The Library of Congress Classification (LCC) is a system of library classification developed by the Library of Congress."@en)
DataPropertyDomain(:lcc :WrittenWork)
DataPropertyRange(:lcc xsd:string)
Declaration(DataProperty(:lccn))
AnnotationAssertion(rdfs:comment :lccn "The Library of Congress Control Number or LCCN is a serially based system of numbering cataloging records in the Library of Congress in the United States. It has nothing to do with the contents of any book, and should not be confused with Library of Congress Classification."@en)
AnnotationAssertion(rdfs:label :lccn "LCCN"@en)
DataPropertyDomain(:lccn :WrittenWork)
DataPropertyRange(:lccn xsd:string)
Declaration(DataProperty(:leaderTitle))
AnnotationAssertion(rdfs:label :leaderTitle "τίτλος_αρχηγού"@el)
AnnotationAssertion(rdfs:label :leaderTitle "leader title"@en)
DataPropertyDomain(:leaderTitle :PopulatedPlace)
DataPropertyRange(:leaderTitle xsd:string)
Declaration(DataProperty(:leadership))
AnnotationAssertion(rdfs:label :leadership "leadership"@en)
DataPropertyDomain(:leadership :Person)
DataPropertyRange(:leadership xsd:string)
Declaration(DataProperty(:legalArrondissement))
AnnotationAssertion(rdfs:label :legalArrondissement "legal arrondissement"@en)
DataPropertyRange(:legalArrondissement xsd:string)
Declaration(DataProperty(:legalArticle))
AnnotationAssertion(rdfs:label :legalArticle "legal article"@en)
AnnotationAssertion(rdfs:comment :legalArticle "article in code book or statute book referred to in this legal case"@en)
AnnotationAssertion(rdfs:label :legalArticle "wetsartikel"@nl)
DataPropertyDomain(:legalArticle :LegalCase)
DataPropertyRange(:legalArticle xsd:string)
Declaration(DataProperty(:legislativePeriodName))
AnnotationAssertion(rdfs:comment :legislativePeriodName "The term of the on-going session (e.g.: \"40th Canadian Parliament\")."@en)
AnnotationAssertion(rdfs:label :legislativePeriodName "legislative period name"@en)
AnnotationAssertion(rdfs:label :legislativePeriodName "Name in der Legislaturperiode"@de)
DataPropertyDomain(:legislativePeriodName :Legislature)
DataPropertyRange(:legislativePeriodName xsd:string)
Declaration(DataProperty(:length))
AnnotationAssertion(rdfs:label :length "μήκος (μ)"@el)
AnnotationAssertion(rdfs:label :length "longueur (μ)"@fr)
AnnotationAssertion(rdfs:label :length "lengte (μ)"@nl)
AnnotationAssertion(rdfs:label :length "length (μ)"@en)
AnnotationAssertion(rdfs:label :length "Länge (μ)"@de)
FunctionalDataProperty(:length)
DataPropertyRange(:length xsd:double)
Declaration(DataProperty(:lengthQuote))
AnnotationAssertion(rdfs:label :lengthQuote "length quote"@en)
DataPropertyDomain(:lengthQuote :Place)
DataPropertyRange(:lengthQuote xsd:string)
Declaration(DataProperty(:lengthReference))
AnnotationAssertion(rdfs:label :lengthReference "length reference"@en)
DataPropertyDomain(:lengthReference :RouteOfTransportation)
DataPropertyRange(:lengthReference xsd:string)
Declaration(DataProperty(:licenceLetter))
AnnotationAssertion(rdfs:label :licenceLetter "licence letter of a german settlement"@en)
DataPropertyRange(:licenceLetter xsd:string)
Declaration(DataProperty(:licenceNumber))
AnnotationAssertion(rdfs:label :licenceNumber "licence number"@en)
DataPropertyDomain(:licenceNumber :PopulatedPlace)
DataPropertyRange(:licenceNumber xsd:string)
Declaration(DataProperty(:licenceNumberLabel))
AnnotationAssertion(rdfs:label :licenceNumberLabel "licence number label"@en)
DataPropertyDomain(:licenceNumberLabel :PopulatedPlace)
DataPropertyRange(:licenceNumberLabel xsd:string)
Declaration(DataProperty(:licensee))
AnnotationAssertion(rdfs:label :licensee "licensee"@en)
AnnotationAssertion(rdfs:comment :licensee "Identify which company or entity holds the licence (mostly string are used in Wikipedia, therefore range is xsd:sting)."@en)
DataPropertyRange(:licensee xsd:string)
Declaration(DataProperty(:lieutenancy))
AnnotationAssertion(rdfs:label :lieutenancy "lieutenancy"@en)
DataPropertyDomain(:lieutenancy :PopulatedPlace)
DataPropertyRange(:lieutenancy xsd:string)
Declaration(DataProperty(:lifeExpectancy))
AnnotationAssertion(rdfs:label :lifeExpectancy "life expectancy"@en)
AnnotationAssertion(rdfs:label :lifeExpectancy "expectativa de vida"@pt)
DataPropertyDomain(:lifeExpectancy :PopulatedPlace)
DataPropertyRange(:lifeExpectancy xsd:string)
Declaration(DataProperty(:limit))
AnnotationAssertion(rdfs:label :limit "limit"@en)
DataPropertyDomain(:limit :Place)
DataPropertyRange(:limit xsd:string)
Declaration(DataProperty(:lineLength))
AnnotationAssertion(rdfs:label :lineLength "Linienlänge (μ)"@de)
AnnotationAssertion(rdfs:label :lineLength "line length (μ)"@en)
AnnotationAssertion(rdfs:comment :lineLength "Length of the line. Wikipedians usually do not differentiate between track length and line lenght."@en)
DataPropertyDomain(:lineLength :RouteOfTransportation)
DataPropertyRange(:lineLength xsd:double)
Declaration(DataProperty(:linkedSpace))
AnnotationAssertion(rdfs:label :linkedSpace "linked space"@en)
DataPropertyDomain(:linkedSpace :Place)
DataPropertyRange(:linkedSpace xsd:string)
Declaration(DataProperty(:loadLimit))
AnnotationAssertion(rdfs:label :loadLimit "load limit (g)"@en)
AnnotationAssertion(rdfs:label :loadLimit "Belastungsgrenze (g)"@de)
AnnotationAssertion(rdfs:comment :loadLimit "Load limit of the bridge."@en)
DataPropertyDomain(:loadLimit :Bridge)
DataPropertyRange(:loadLimit xsd:double)
Declaration(DataProperty(:locality))
AnnotationAssertion(rdfs:label :locality "locality of a switzerland settlement"@en)
DataPropertyRange(:locality xsd:string)
Declaration(DataProperty(:localization))
AnnotationAssertion(rdfs:label :localization "localization of the island"@en)
DataPropertyDomain(:localization :Island)
DataPropertyRange(:localization xsd:string)
Declaration(DataProperty(:localizationThumbnailCaption))
AnnotationAssertion(rdfs:label :localizationThumbnailCaption "legend thumbnail localization"@en)
DataPropertyDomain(:localizationThumbnailCaption :PopulatedPlace)
DataPropertyRange(:localizationThumbnailCaption xsd:string)
Declaration(DataProperty(:locationIdentifier))
AnnotationAssertion(rdfs:label :locationIdentifier "Location Identifier"@en)
DataPropertyDomain(:locationIdentifier :Airport)
DataPropertyRange(:locationIdentifier xsd:string)
Declaration(DataProperty(:locusSupplementaryData))
AnnotationAssertion(rdfs:label :locusSupplementaryData "locus supplementary data"@en)
DataPropertyDomain(:locusSupplementaryData :Protein)
DataPropertyRange(:locusSupplementaryData xsd:string)
Declaration(DataProperty(:logo))
AnnotationAssertion(rdfs:label :logo "logo"@nl)
AnnotationAssertion(rdfs:label :logo "λογότυπο"@el)
AnnotationAssertion(rdfs:label :logo "logo"@en)
DataPropertyRange(:logo xsd:string)
Declaration(DataProperty(:longDistancePisteKilometre))
AnnotationAssertion(rdfs:label :longDistancePisteKilometre "long distance piste kilometre (μ)"@en)
DataPropertyDomain(:longDistancePisteKilometre :Place)
DataPropertyRange(:longDistancePisteKilometre xsd:double)
Declaration(DataProperty(:longDistancePisteNumber))
AnnotationAssertion(rdfs:label :longDistancePisteNumber "long distance piste number"@en)
DataPropertyDomain(:longDistancePisteNumber :Place)
DataPropertyRange(:longDistancePisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:longName))
AnnotationAssertion(rdfs:label :longName "volledige naam"@nl)
AnnotationAssertion(rdfs:label :longName "longName"@en)
DataPropertyRange(:longName xsd:string)
Declaration(DataProperty(:longtype))
AnnotationAssertion(rdfs:comment :longtype "can be used to include more informations e.g. the name of the artist that a tribute album is in honor of"@en)
AnnotationAssertion(rdfs:label :longtype "longtype"@en)
DataPropertyDomain(:longtype :Album)
DataPropertyRange(:longtype xsd:string)
Declaration(DataProperty(:lowerAge))
AnnotationAssertion(rdfs:label :lowerAge "lower age"@en)
DataPropertyDomain(:lowerAge :School)
DataPropertyRange(:lowerAge xsd:nonNegativeInteger)
Declaration(DataProperty(:lowerEarthOrbitPayload))
AnnotationAssertion(rdfs:comment :lowerEarthOrbitPayload "Payload mass in a typical Low Earth orbit"@en)
AnnotationAssertion(rdfs:label :lowerEarthOrbitPayload "lower earth orbit payload (g)"@en)
DataPropertyDomain(:lowerEarthOrbitPayload :Rocket)
DataPropertyRange(:lowerEarthOrbitPayload xsd:double)
Declaration(DataProperty(:lowest))
AnnotationAssertion(rdfs:label :lowest "χαμηλότερο"@el)
AnnotationAssertion(rdfs:label :lowest "lowest"@en)
DataPropertyDomain(:lowest :Place)
DataPropertyRange(:lowest xsd:string)
Declaration(DataProperty(:lunarEvaTime))
AnnotationAssertion(rdfs:label :lunarEvaTime "lunar EVA time (s)"@en)
DataPropertyDomain(:lunarEvaTime :SpaceMission)
DataPropertyRange(:lunarEvaTime xsd:double)
Declaration(DataProperty(:lunarLandingSite))
AnnotationAssertion(rdfs:label :lunarLandingSite "lunar landing site"@en)
DataPropertyDomain(:lunarLandingSite :SpaceMission)
DataPropertyRange(:lunarLandingSite xsd:string)
Declaration(DataProperty(:lunarModule))
AnnotationAssertion(rdfs:label :lunarModule "lunar module"@en)
DataPropertyDomain(:lunarModule :SpaceMission)
DataPropertyRange(:lunarModule xsd:string)
Declaration(DataProperty(:lunarOrbitTime))
AnnotationAssertion(rdfs:label :lunarOrbitTime "lunar orbit time (s)"@en)
DataPropertyDomain(:lunarOrbitTime :SpaceMission)
DataPropertyRange(:lunarOrbitTime xsd:double)
Declaration(DataProperty(:lunarSampleMass))
AnnotationAssertion(rdfs:label :lunarSampleMass "lunar sample mass (g)"@en)
DataPropertyDomain(:lunarSampleMass :SpaceMission)
DataPropertyRange(:lunarSampleMass xsd:double)
Declaration(DataProperty(:lunarSurfaceTime))
AnnotationAssertion(rdfs:label :lunarSurfaceTime "lunar surface time (s)"@en)
DataPropertyDomain(:lunarSurfaceTime :SpaceMission)
DataPropertyRange(:lunarSurfaceTime xsd:double)
Declaration(DataProperty(:luxembourgishName))
AnnotationAssertion(rdfs:label :luxembourgishName "city luxembourgish name"@en)
DataPropertyDomain(:luxembourgishName :PopulatedPlace)
DataPropertyRange(:luxembourgishName xsd:string)
Declaration(DataProperty(:maidenFlight))
AnnotationAssertion(rdfs:comment :maidenFlight "date of maiden flight"@en)
AnnotationAssertion(rdfs:label :maidenFlight "maiden flight"@en)
DataPropertyDomain(:maidenFlight :Rocket)
DataPropertyRange(:maidenFlight xsd:date)
Declaration(DataProperty(:maidenVoyage))
AnnotationAssertion(rdfs:label :maidenVoyage "maiden voyage"@en)
DataPropertyDomain(:maidenVoyage :Ship)
DataPropertyRange(:maidenVoyage xsd:date)
Declaration(DataProperty(:mainBuilding))
AnnotationAssertion(rdfs:label :mainBuilding "本殿"@ja)
AnnotationAssertion(rdfs:label :mainBuilding "main building"@en)
DataPropertyDomain(:mainBuilding :Shrine)
DataPropertyRange(:mainBuilding xsd:string)
Declaration(DataProperty(:mainIsland))
AnnotationAssertion(rdfs:label :mainIsland "main island"@en)
DataPropertyDomain(:mainIsland :Place)
DataPropertyRange(:mainIsland xsd:string)
Declaration(DataProperty(:mainIslands))
AnnotationAssertion(rdfs:label :mainIslands "main islands"@en)
DataPropertyDomain(:mainIslands :Island)
DataPropertyRange(:mainIslands xsd:string)
Declaration(DataProperty(:mainspan))
AnnotationAssertion(rdfs:label :mainspan "mainspan (μ)"@en)
AnnotationAssertion(rdfs:label :mainspan "κύρια καμάρα (μ)"@el)
AnnotationAssertion(rdfs:label :mainspan "portée principale (μ)"@fr)
DataPropertyDomain(:mainspan :Bridge)
DataPropertyRange(:mainspan xsd:double)
Declaration(DataProperty(:majorityFloorLeader))
AnnotationAssertion(rdfs:comment :majorityFloorLeader "number of office holder"@en)
AnnotationAssertion(rdfs:label :majorityFloorLeader "majority floor leader"@en)
DataPropertyRange(:majorityFloorLeader xsd:integer)
Declaration(DataProperty(:majorityLeader))
AnnotationAssertion(rdfs:label :majorityLeader "majority leader"@en)
AnnotationAssertion(rdfs:comment :majorityLeader "number of office holder"@en)
DataPropertyRange(:majorityLeader xsd:integer)
Declaration(DataProperty(:managementElevation))
AnnotationAssertion(rdfs:label :managementElevation "management elevation (μ)"@en)
DataPropertyRange(:managementElevation xsd:double)
Declaration(DataProperty(:managerTitle))
AnnotationAssertion(rdfs:label :managerTitle "manager title"@en)
DataPropertyDomain(:managerTitle :SoccerClub)
DataPropertyRange(:managerTitle xsd:string)
Declaration(DataProperty(:managerYears))
AnnotationAssertion(rdfs:label :managerYears "manager years"@en)
DataPropertyDomain(:managerYears :SoccerPlayer)
DataPropertyRange(:managerYears xsd:date)
Declaration(DataProperty(:mandate))
AnnotationAssertion(rdfs:label :mandate "political mandate"@en)
DataPropertyDomain(:mandate :Place)
DataPropertyRange(:mandate xsd:string)
Declaration(DataProperty(:manxName))
AnnotationAssertion(rdfs:label :manxName "manx name"@en)
DataPropertyDomain(:manxName :Settlement)
DataPropertyRange(:manxName xsd:string)
Declaration(DataProperty(:maoriName))
AnnotationAssertion(rdfs:label :maoriName "maori name"@en)
DataPropertyDomain(:maoriName :PopulatedPlace)
DataPropertyRange(:maoriName xsd:string)
Declaration(DataProperty(:mapCaption))
AnnotationAssertion(rdfs:label :mapCaption "map caption"@en)
DataPropertyDomain(:mapCaption :Place)
DataPropertyRange(:mapCaption xsd:string)
Declaration(DataProperty(:mapDescription))
AnnotationAssertion(rdfs:label :mapDescription "kaart omschrijving"@nl)
AnnotationAssertion(rdfs:label :mapDescription "map description"@en)
DataPropertyDomain(:mapDescription :Place)
DataPropertyRange(:mapDescription xsd:string)
Declaration(DataProperty(:marketCapitalisation))
AnnotationAssertion(rdfs:label :marketCapitalisation "market capitalisation ($)"@en)
FunctionalDataProperty(:marketCapitalisation)
DataPropertyDomain(:marketCapitalisation :Company)
DataPropertyRange(:marketCapitalisation xsd:double)
Declaration(DataProperty(:mascot))
AnnotationAssertion(rdfs:comment :mascot "Animal, poupée, objets divers servant de porte-bonheur ou d’emblème."@fr)
AnnotationAssertion(rdfs:label :mascot "mascot"@en)
AnnotationAssertion(rdfs:label :mascot "mascotte"@fr)
AnnotationAssertion(rdfs:label :mascot "mascote"@pt)
AnnotationAssertion(rdfs:comment :mascot "something, especially a person or animal, used to symbolize a sports team, company, organization or other group."@en)
DataPropertyRange(:mascot xsd:string)
Declaration(DataProperty(:mass))
AnnotationAssertion(rdfs:label :mass "μάζα (g)"@el)
AnnotationAssertion(rdfs:label :mass "mass (g)"@en)
DataPropertyRange(:mass xsd:double)
Declaration(DataProperty(:material))
AnnotationAssertion(rdfs:label :material "matériel"@fr)
AnnotationAssertion(rdfs:label :material "material"@en)
DataPropertyDomain(:material :Island)
DataPropertyRange(:material xsd:string)
Declaration(DataProperty(:maximumArea))
AnnotationAssertion(rdfs:label :maximumArea "maximum area"@en)
DataPropertyDomain(:maximumArea :Place)
DataPropertyRange(:maximumArea xsd:string)
Declaration(DataProperty(:maximumAreaQuote))
AnnotationAssertion(rdfs:label :maximumAreaQuote "maximum area quote"@en)
DataPropertyDomain(:maximumAreaQuote :Place)
DataPropertyRange(:maximumAreaQuote xsd:string)
Declaration(DataProperty(:maximumBoatBeam))
AnnotationAssertion(rdfs:label :maximumBoatBeam "μέγιστο_πλάτος_πλοίου (μ)"@el)
AnnotationAssertion(rdfs:label :maximumBoatBeam "maximum boat beam (μ)"@en)
DataPropertyDomain(:maximumBoatBeam :Canal)
DataPropertyRange(:maximumBoatBeam xsd:double)
Declaration(DataProperty(:maximumBoatLength))
AnnotationAssertion(rdfs:label :maximumBoatLength "maximum boat length (μ)"@en)
AnnotationAssertion(rdfs:label :maximumBoatLength "μέγιστο_μήκος_πλοίου (μ)"@el)
DataPropertyDomain(:maximumBoatLength :Canal)
DataPropertyRange(:maximumBoatLength xsd:double)
Declaration(DataProperty(:maximumDepth))
AnnotationAssertion(rdfs:label :maximumDepth "maximum depth (μ)"@en)
AnnotationAssertion(rdfs:label :maximumDepth "μέγιστο_βάθος (μ)"@el)
DataPropertyDomain(:maximumDepth :Place)
DataPropertyRange(:maximumDepth xsd:double)
Declaration(DataProperty(:maximumDepthQuote))
AnnotationAssertion(rdfs:label :maximumDepthQuote "maximum depth quote"@en)
DataPropertyDomain(:maximumDepthQuote :Place)
DataPropertyRange(:maximumDepthQuote xsd:string)
Declaration(DataProperty(:maximumDischarge))
AnnotationAssertion(rdfs:label :maximumDischarge "maximum discharge (m³/s)"@en)
DataPropertyRange(:maximumDischarge xsd:double)
Declaration(DataProperty(:maximumElevation))
AnnotationAssertion(rdfs:comment :maximumElevation "maximum elevation above the sea level"@en)
AnnotationAssertion(rdfs:label :maximumElevation "κορυφή (μ)"@el)
AnnotationAssertion(rdfs:label :maximumElevation "maximum elevation (μ)"@en)
DataPropertyDomain(:maximumElevation :Place)
DataPropertyRange(:maximumElevation xsd:double)
Declaration(DataProperty(:maximumInclination))
AnnotationAssertion(rdfs:label :maximumInclination "maximum inclination"@en)
DataPropertyDomain(:maximumInclination :LaunchPad)
DataPropertyRange(:maximumInclination xsd:float)
Declaration(DataProperty(:maximumTemperature))
AnnotationAssertion(rdfs:label :maximumTemperature "maximum temperature (K)"@en)
AnnotationAssertion(rdfs:label :maximumTemperature "μέγιστη θερμοκρασία (K)"@el)
DataPropertyDomain(:maximumTemperature :Planet)
DataPropertyRange(:maximumTemperature xsd:double)
Declaration(DataProperty(:mayorArticle))
AnnotationAssertion(rdfs:label :mayorArticle "mayor article"@en)
DataPropertyDomain(:mayorArticle :Place)
DataPropertyRange(:mayorArticle xsd:string)
Declaration(DataProperty(:mayorCouncillor))
AnnotationAssertion(rdfs:label :mayorCouncillor "councillor of an austrian mayor"@en)
DataPropertyRange(:mayorCouncillor xsd:string)
Declaration(DataProperty(:mayorFunction))
AnnotationAssertion(rdfs:label :mayorFunction "mayor function of a switzerland settlement"@en)
DataPropertyRange(:mayorFunction xsd:string)
Declaration(DataProperty(:mayorMandate))
AnnotationAssertion(rdfs:label :mayorMandate "mayorMandate"@en)
DataPropertyDomain(:mayorMandate :Mayor)
DataPropertyRange(:mayorMandate xsd:string)
Declaration(DataProperty(:mayorTitle))
AnnotationAssertion(rdfs:label :mayorTitle "mayor title of a hungarian settlement"@en)
DataPropertyRange(:mayorTitle xsd:string)
Declaration(DataProperty(:meanRadius))
AnnotationAssertion(rdfs:label :meanRadius "mean radius (μ)"@en)
AnnotationAssertion(rdfs:label :meanRadius "μέση ακτίνα (μ)"@el)
DataPropertyDomain(:meanRadius :Planet)
DataPropertyRange(:meanRadius xsd:double)
Declaration(DataProperty(:meanTemperature))
AnnotationAssertion(rdfs:label :meanTemperature "mean temperature (K)"@en)
AnnotationAssertion(rdfs:label :meanTemperature "μέση θερμοκρασία (K)"@el)
DataPropertyDomain(:meanTemperature :Planet)
DataPropertyRange(:meanTemperature xsd:double)
Declaration(DataProperty(:meaning))
AnnotationAssertion(rdfs:label :meaning "meaning"@en)
DataPropertyDomain(:meaning :Settlement)
DataPropertyRange(:meaning xsd:string)
Declaration(DataProperty(:measurements))
AnnotationAssertion(rdfs:label :measurements "measurements"@en)
AnnotationAssertion(rdfs:label :measurements "medidas"@pt)
DataPropertyDomain(:measurements :Person)
DataPropertyRange(:measurements xsd:string)
Declaration(DataProperty(:medlineplus))
AnnotationAssertion(rdfs:label :medlineplus "MedlinePlus"@nl)
AnnotationAssertion(rdfs:label :medlineplus "MedlinePlus"@en)
DataPropertyDomain(:medlineplus :Disease)
DataPropertyRange(:medlineplus xsd:string)
Declaration(DataProperty(:meltingPoint))
AnnotationAssertion(rdfs:label :meltingPoint "Schmelzpunkt (K)"@de)
AnnotationAssertion(rdfs:label :meltingPoint "融点 (K)"@ja)
AnnotationAssertion(rdfs:label :meltingPoint "melting point (K)"@en)
AnnotationAssertion(rdfs:label :meltingPoint "point de fusion (K)"@fr)
DataPropertyRange(:meltingPoint xsd:double)
Declaration(DataProperty(:member))
AnnotationAssertion(rdfs:label :member "member"@en)
AnnotationAssertion(rdfs:label :member "lid van"@nl)
DataPropertyDomain(:member :FictionalCharacter)
DataPropertyRange(:member xsd:string)
Declaration(DataProperty(:membership))
AnnotationAssertion(rdfs:label :membership "membership"@en)
AnnotationAssertion(rdfs:label :membership "lidmaatschap"@nl)
DataPropertyDomain(:membership :Organisation)
DataPropertyRange(:membership xsd:string)
Declaration(DataProperty(:membershipAsOf))
AnnotationAssertion(rdfs:label :membershipAsOf "date membership established"@en)
AnnotationAssertion(rdfs:label :membershipAsOf "datum vaststellen ledental"@nl)
DataPropertyRange(:membershipAsOf xsd:date)
Declaration(DataProperty(:mergerDate))
AnnotationAssertion(rdfs:label :mergerDate "merger date"@en)
DataPropertyDomain(:mergerDate :Place)
DataPropertyRange(:mergerDate xsd:date)
Declaration(DataProperty(:meshId))
AnnotationAssertion(rdfs:label :meshId "MeSH ID"@en)
AnnotationAssertion(rdfs:label :meshId "MeSH ID"@nl)
DataPropertyDomain(:meshId :Disease)
DataPropertyRange(:meshId xsd:string)
Declaration(DataProperty(:meshName))
AnnotationAssertion(rdfs:label :meshName "MeSH name"@en)
DataPropertyDomain(:meshName :AnatomicalStructure)
DataPropertyRange(:meshName xsd:string)
Declaration(DataProperty(:meshNumber))
AnnotationAssertion(rdfs:label :meshNumber "MeSH number"@en)
DataPropertyDomain(:meshNumber :AnatomicalStructure)
DataPropertyRange(:meshNumber xsd:string)
Declaration(DataProperty(:mgiid))
AnnotationAssertion(rdfs:label :mgiid "mgiid"@ja)
AnnotationAssertion(rdfs:comment :mgiid "Mouse Genomic Informatics ID"@en)
AnnotationAssertion(rdfs:label :mgiid "mgiid"@en)
DataPropertyDomain(:mgiid :Biomolecule)
DataPropertyRange(:mgiid xsd:string)
Declaration(DataProperty(:militaryCommand))
AnnotationAssertion(rdfs:comment :militaryCommand "For persons who are notable as commanding officers, the units they commanded. Dates should be given if multiple notable commands were held."@en)
AnnotationAssertion(rdfs:label :militaryCommand "military command"@en)
DataPropertyDomain(:militaryCommand :MilitaryPerson)
DataPropertyRange(:militaryCommand xsd:string)
Declaration(DataProperty(:militaryGovernment))
AnnotationAssertion(rdfs:label :militaryGovernment "military government"@en)
DataPropertyRange(:militaryGovernment xsd:string)
Declaration(DataProperty(:militaryUnitSize))
AnnotationAssertion(rdfs:comment :militaryUnitSize "the size of the military unit"@en)
AnnotationAssertion(rdfs:label :militaryUnitSize "military unit size"@en)
DataPropertyRange(:militaryUnitSize xsd:string)
Declaration(DataProperty(:millSpan))
AnnotationAssertion(rdfs:label :millSpan "vlucht (μ)"@nl)
AnnotationAssertion(rdfs:label :millSpan "Εκπέτασμα (μ)"@el)
AnnotationAssertion(rdfs:label :millSpan "mill span (μ)"@en)
DataPropertyDomain(:millSpan :Mill)
DataPropertyRange(:millSpan xsd:double)
Declaration(DataProperty(:millsCodeBE))
AnnotationAssertion(rdfs:comment :millsCodeBE "unieke code voor molens in database www.molenechos.org"@nl)
AnnotationAssertion(rdfs:comment :millsCodeBE "mills code from the Belgian database on mills"@en)
AnnotationAssertion(rdfs:label :millsCodeBE "molen code BE"@nl)
AnnotationAssertion(rdfs:label :millsCodeBE "mill code BE"@en)
DataPropertyDomain(:millsCodeBE :Mill)
DataPropertyRange(:millsCodeBE xsd:string)
Declaration(DataProperty(:millsCodeDutch))
AnnotationAssertion(rdfs:label :millsCodeDutch "mill code NL"@en)
AnnotationAssertion(rdfs:label :millsCodeDutch "molen code NL"@nl)
DataPropertyDomain(:millsCodeDutch :Mill)
DataPropertyRange(:millsCodeDutch xsd:string)
Declaration(DataProperty(:millsCodeNL))
AnnotationAssertion(rdfs:label :millsCodeNL "molen code NL"@nl)
AnnotationAssertion(rdfs:label :millsCodeNL "mill code NL"@en)
AnnotationAssertion(rdfs:comment :millsCodeNL "unieke code voor molens in www.molendatabase.nl"@nl)
AnnotationAssertion(rdfs:comment :millsCodeNL "mills code from the central Dutch database on mills"@en)
DataPropertyDomain(:millsCodeNL :Mill)
DataPropertyRange(:millsCodeNL xsd:string)
Declaration(DataProperty(:millsCodeNLVerdwenen))
AnnotationAssertion(rdfs:label :millsCodeNLVerdwenen "mill dissapeared code NL"@en)
AnnotationAssertion(rdfs:label :millsCodeNLVerdwenen "verdwenen molen code NL"@nl)
DataPropertyDomain(:millsCodeNLVerdwenen :Mill)
DataPropertyRange(:millsCodeNLVerdwenen xsd:string)
Declaration(DataProperty(:millsCodeNLWindmotoren))
AnnotationAssertion(rdfs:label :millsCodeNLWindmotoren "millsCodeNLWindmotoren"@nl)
AnnotationAssertion(rdfs:label :millsCodeNLWindmotoren "millsCodeNLWindmotoren"@en)
DataPropertyDomain(:millsCodeNLWindmotoren :Mill)
DataPropertyRange(:millsCodeNLWindmotoren xsd:string)
Declaration(DataProperty(:minimumArea))
AnnotationAssertion(rdfs:label :minimumArea "minimum area"@en)
DataPropertyDomain(:minimumArea :Place)
DataPropertyRange(:minimumArea xsd:string)
Declaration(DataProperty(:minimumAreaQuote))
AnnotationAssertion(rdfs:label :minimumAreaQuote "minimum area quote"@en)
DataPropertyDomain(:minimumAreaQuote :Place)
DataPropertyRange(:minimumAreaQuote xsd:string)
Declaration(DataProperty(:minimumDischarge))
AnnotationAssertion(rdfs:label :minimumDischarge "minimum discharge (m³/s)"@en)
DataPropertyRange(:minimumDischarge xsd:double)
Declaration(DataProperty(:minimumElevation))
AnnotationAssertion(rdfs:comment :minimumElevation "minimum elevation above the sea level"@en)
AnnotationAssertion(rdfs:label :minimumElevation "βάση (μ)"@el)
AnnotationAssertion(rdfs:label :minimumElevation "minimum elevation (μ)"@en)
DataPropertyDomain(:minimumElevation :Place)
DataPropertyRange(:minimumElevation xsd:double)
Declaration(DataProperty(:minimumInclination))
AnnotationAssertion(rdfs:label :minimumInclination "minimum inclination"@en)
DataPropertyDomain(:minimumInclination :LaunchPad)
DataPropertyRange(:minimumInclination xsd:float)
Declaration(DataProperty(:minimumTemperature))
AnnotationAssertion(rdfs:label :minimumTemperature "minimum temperature (K)"@en)
AnnotationAssertion(rdfs:label :minimumTemperature "ελάχιστη θερμοκρασία (K)"@el)
DataPropertyDomain(:minimumTemperature :Planet)
DataPropertyRange(:minimumTemperature xsd:double)
Declaration(DataProperty(:minority))
AnnotationAssertion(rdfs:label :minority "minority of a settlement"@en)
DataPropertyDomain(:minority :Settlement)
DataPropertyRange(:minority xsd:string)
Declaration(DataProperty(:minorityFloorLeader))
AnnotationAssertion(rdfs:label :minorityFloorLeader "minority floor leader"@en)
AnnotationAssertion(rdfs:comment :minorityFloorLeader "number of office holder"@en)
DataPropertyRange(:minorityFloorLeader xsd:integer)
Declaration(DataProperty(:minorityLeader))
AnnotationAssertion(rdfs:label :minorityLeader "minority leader"@en)
AnnotationAssertion(rdfs:comment :minorityLeader "number of office holder"@en)
DataPropertyRange(:minorityLeader xsd:integer)
Declaration(DataProperty(:mirDockings))
AnnotationAssertion(rdfs:label :mirDockings "mir dockings"@en)
DataPropertyDomain(:mirDockings :SpaceShuttle)
DataPropertyRange(:mirDockings xsd:nonNegativeInteger)
Declaration(DataProperty(:missionDuration))
AnnotationAssertion(rdfs:label :missionDuration "mission duration (s)"@en)
DataPropertyDomain(:missionDuration :SpaceMission)
DataPropertyRange(:missionDuration xsd:double)
Declaration(DataProperty(:missions))
AnnotationAssertion(rdfs:label :missions "missions"@en)
AnnotationAssertion(rdfs:label :missions "αποστολές"@el)
DataPropertyDomain(:missions :SpaceShuttle)
DataPropertyRange(:missions xsd:nonNegativeInteger)
Declaration(DataProperty(:model))
AnnotationAssertion(rdfs:label :model "modèle"@fr)
AnnotationAssertion(rdfs:label :model "model"@en)
DataPropertyDomain(:model :Sales)
DataPropertyRange(:model xsd:string)
Declaration(DataProperty(:modelEndDate))
AnnotationAssertion(rdfs:label :modelEndDate "model end date"@en)
DataPropertyDomain(:modelEndDate :MeanOfTransportation)
DataPropertyRange(:modelEndDate xsd:date)
Declaration(DataProperty(:modelEndYear))
AnnotationAssertion(rdfs:label :modelEndYear "model end year"@en)
DataPropertyDomain(:modelEndYear :MeanOfTransportation)
DataPropertyRange(:modelEndYear xsd:gYear)
Declaration(DataProperty(:modelStartDate))
AnnotationAssertion(rdfs:label :modelStartDate "model start date"@en)
DataPropertyDomain(:modelStartDate :MeanOfTransportation)
DataPropertyRange(:modelStartDate xsd:date)
Declaration(DataProperty(:modelStartYear))
AnnotationAssertion(rdfs:label :modelStartYear "model start year"@en)
DataPropertyDomain(:modelStartYear :MeanOfTransportation)
DataPropertyRange(:modelStartYear xsd:gYear)
Declaration(DataProperty(:moldavianName))
AnnotationAssertion(rdfs:label :moldavianName "moldavian name"@en)
DataPropertyDomain(:moldavianName :PopulatedPlace)
DataPropertyRange(:moldavianName xsd:string)
Declaration(DataProperty(:month))
AnnotationAssertion(rdfs:label :month "month"@en)
AnnotationAssertion(rdfs:label :month "Monat"@de)
AnnotationAssertion(rdfs:label :month "μήνας"@el)
DataPropertyRange(:month xsd:string)
Declaration(DataProperty(:motto))
AnnotationAssertion(rdfs:label :motto "motto"@nl)
AnnotationAssertion(rdfs:label :motto "σύνθημα"@el)
AnnotationAssertion(rdfs:label :motto "devise"@fr)
AnnotationAssertion(rdfs:label :motto "motto"@en)
AnnotationAssertion(rdfs:label :motto "lema"@pt)
DataPropertyRange(:motto xsd:string)
Declaration(DataProperty(:mouthElevation))
AnnotationAssertion(rdfs:label :mouthElevation "mouth elevation (μ)"@en)
AnnotationAssertion(rdfs:label :mouthElevation "ύψος_εκβολών (μ)"@el)
DataPropertyRange(:mouthElevation xsd:double)
Declaration(DataProperty(:mozabiteSettlementName))
AnnotationAssertion(rdfs:label :mozabiteSettlementName "mozabite settlement name"@en)
DataPropertyRange(:mozabiteSettlementName xsd:string)
Declaration(DataProperty(:mukhtar))
AnnotationAssertion(rdfs:label :mukhtar "mukthar of a lebanon settlement"@en)
DataPropertyRange(:mukhtar xsd:string)
Declaration(DataProperty(:municipalityCode))
AnnotationAssertion(rdfs:label :municipalityCode "gemeente-code"@nl)
AnnotationAssertion(rdfs:label :municipalityCode "municipality code"@en)
DataPropertyDomain(:municipalityCode :Place)
DataPropertyRange(:municipalityCode xsd:string)
Declaration(DataProperty(:municipalityType))
AnnotationAssertion(rdfs:label :municipalityType "type of municipality"@en)
AnnotationAssertion(rdfs:label :municipalityType "type gemeente"@nl)
DataPropertyDomain(:municipalityType :Municipality)
DataPropertyRange(:municipalityType xsd:string)
Declaration(DataProperty(:musicFormat))
AnnotationAssertion(rdfs:label :musicFormat "musikFormate"@de)
AnnotationAssertion(rdfs:label :musicFormat "musicFormat"@en)
AnnotationAssertion(rdfs:comment :musicFormat "The format of the album: EP, Single etc."@en)
DataPropertyDomain(:musicFormat :Album)
DataPropertyRange(:musicFormat xsd:string)
Declaration(DataProperty(:musicalKey))
AnnotationAssertion(rdfs:label :musicalKey "μουσικό κλειδί"@el)
AnnotationAssertion(rdfs:label :musicalKey "musical key"@en)
AnnotationAssertion(rdfs:label :musicalKey "toonsoort"@nl)
DataPropertyDomain(:musicalKey :MusicalWork)
DataPropertyRange(:musicalKey xsd:string)
Declaration(DataProperty(:muteCharacterInPlay))
AnnotationAssertion(rdfs:comment :muteCharacterInPlay "Name of a mute character in play."@en)
AnnotationAssertion(rdfs:label :muteCharacterInPlay "mute character in play"@en)
DataPropertyDomain(:muteCharacterInPlay :Play)
DataPropertyRange(:muteCharacterInPlay xsd:string)
Declaration(DataProperty(:name))
AnnotationAssertion(rdfs:label :name "name"@en)
DataPropertyDomain(:name :FictionalCharacter)
DataPropertyRange(:name xsd:string)
Declaration(DataProperty(:nameDay))
AnnotationAssertion(rdfs:label :nameDay "ονομαστική εορτή"@el)
AnnotationAssertion(rdfs:label :nameDay "name day"@en)
AnnotationAssertion(rdfs:label :nameDay "imieniny"@pl)
DataPropertyDomain(:nameDay :GivenName)
DataPropertyRange(:nameDay xsd:date)
Declaration(DataProperty(:names))
AnnotationAssertion(rdfs:label :names "names"@en)
DataPropertyRange(:names xsd:string)
Declaration(DataProperty(:nation))
AnnotationAssertion(rdfs:label :nation "nation"@en)
DataPropertyDomain(:nation :PopulatedPlace)
DataPropertyRange(:nation xsd:string)
Declaration(DataProperty(:nationalRanking))
AnnotationAssertion(rdfs:label :nationalRanking "national ranking"@en)
DataPropertyDomain(:nationalRanking :School)
DataPropertyRange(:nationalRanking xsd:positiveInteger)
Declaration(DataProperty(:nationalTopographicSystemMapNumber))
AnnotationAssertion(rdfs:label :nationalTopographicSystemMapNumber "National Topographic System map number"@en)
DataPropertyDomain(:nationalTopographicSystemMapNumber :Place)
DataPropertyRange(:nationalTopographicSystemMapNumber xsd:string)
Declaration(DataProperty(:nationalYears))
AnnotationAssertion(rdfs:label :nationalYears "national years"@en)
DataPropertyDomain(:nationalYears :SoccerPlayer)
DataPropertyRange(:nationalYears xsd:gYear)
Declaration(DataProperty(:neighbourConstellations))
AnnotationAssertion(rdfs:label :neighbourConstellations "neighbour constellations"@en)
DataPropertyDomain(:neighbourConstellations :Constellation)
DataPropertyRange(:neighbourConstellations xsd:string)
Declaration(DataProperty(:neighbourRegion))
AnnotationAssertion(rdfs:label :neighbourRegion "neighbour region"@en)
DataPropertyDomain(:neighbourRegion :Place)
DataPropertyRange(:neighbourRegion xsd:string)
Declaration(DataProperty(:neighbourhood))
AnnotationAssertion(rdfs:label :neighbourhood "neighbourhood of a hungarian settlement"@en)
DataPropertyRange(:neighbourhood xsd:string)
Declaration(DataProperty(:netIncome))
AnnotationAssertion(rdfs:label :netIncome "net income ($)"@en)
FunctionalDataProperty(:netIncome)
DataPropertyDomain(:netIncome :Company)
DataPropertyRange(:netIncome xsd:double)
Declaration(DataProperty(:networth))
AnnotationAssertion(rdfs:label :networth "networth ($)"@en)
DataPropertyDomain(:networth :Person)
DataPropertyRange(:networth xsd:double)
Declaration(DataProperty(:nickname))
AnnotationAssertion(rdfs:label :nickname "nickname for something"@en)
DataPropertyRange(:nickname xsd:string)
Declaration(DataProperty(:nndbId))
AnnotationAssertion(rdfs:label :nndbId "NNDB id"@en)
DataPropertyDomain(:nndbId :Person)
DataPropertyRange(:nndbId xsd:string)
Declaration(DataProperty(:notableFeatures))
AnnotationAssertion(rdfs:label :notableFeatures "notlar"@tr)
AnnotationAssertion(rdfs:label :notableFeatures "notable features"@en)
DataPropertyDomain(:notableFeatures :Galaxy)
DataPropertyRange(:notableFeatures xsd:string)
Declaration(DataProperty(:note))
AnnotationAssertion(rdfs:label :note "note"@en)
DataPropertyDomain(:note :AutomobileEngine)
DataPropertyRange(:note xsd:string)
Declaration(DataProperty(:noteOnPlaceOfBurial))
AnnotationAssertion(rdfs:label :noteOnPlaceOfBurial "note on place of burial"@en)
DataPropertyDomain(:noteOnPlaceOfBurial :MilitaryPerson)
DataPropertyRange(:noteOnPlaceOfBurial xsd:string)
Declaration(DataProperty(:noteOnRestingPlace))
AnnotationAssertion(rdfs:label :noteOnRestingPlace "note on resting place"@en)
DataPropertyDomain(:noteOnRestingPlace :Person)
DataPropertyRange(:noteOnRestingPlace xsd:string)
Declaration(DataProperty(:notes))
AnnotationAssertion(rdfs:label :notes "notes"@en)
AnnotationAssertion(rdfs:label :notes "notes"@fr)
AnnotationAssertion(rdfs:comment :notes "additional notes that better describe the entity"@en)
DataPropertyRange(:notes xsd:string)
Declaration(DataProperty(:notifyDate))
AnnotationAssertion(rdfs:label :notifyDate "notify date"@en)
DataPropertyDomain(:notifyDate :SiteOfSpecialScientificInterest)
DataPropertyRange(:notifyDate xsd:date)
Declaration(DataProperty(:nrhpReferenceNumber))
AnnotationAssertion(rdfs:label :nrhpReferenceNumber "NRHP Reference Number"@en)
DataPropertyDomain(:nrhpReferenceNumber :HistoricPlace)
DataPropertyRange(:nrhpReferenceNumber xsd:string)
Declaration(DataProperty(:nssdcId))
AnnotationAssertion(rdfs:label :nssdcId "NSSDC ID"@en)
DataPropertyDomain(:nssdcId :SpaceStation)
DataPropertyRange(:nssdcId xsd:string)
Declaration(DataProperty(:number))
AnnotationAssertion(rdfs:label :number "number"@en)
AnnotationAssertion(rdfs:label :number "αριθμός"@el)
AnnotationAssertion(rdfs:label :number "nummer"@nl)
DataPropertyRange(:number xsd:integer)
Declaration(DataProperty(:numberBuilt))
AnnotationAssertion(rdfs:label :numberBuilt "number built"@en)
DataPropertyDomain(:numberBuilt :Aircraft)
DataPropertyRange(:numberBuilt xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfAcademicStaff))
AnnotationAssertion(rdfs:label :numberOfAcademicStaff "number of academic staff"@en)
AnnotationAssertion(rdfs:label :numberOfAcademicStaff "αριθμός ακαδημαϊκού προσωπικού"@el)
DataPropertyDomain(:numberOfAcademicStaff :EducationalInstitution)
DataPropertyRange(:numberOfAcademicStaff xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfAlbums))
AnnotationAssertion(rdfs:comment :numberOfAlbums "the total number of albums released by the musical artist"@en)
AnnotationAssertion(rdfs:label :numberOfAlbums "number of albums"@en)
DataPropertyDomain(:numberOfAlbums :MusicalArtist)
DataPropertyRange(:numberOfAlbums xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfBombs))
AnnotationAssertion(rdfs:label :numberOfBombs "αριθμός των βομβών"@el)
AnnotationAssertion(rdfs:label :numberOfBombs "number of bombs"@en)
DataPropertyDomain(:numberOfBombs :Aircraft)
DataPropertyRange(:numberOfBombs xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfBronzeMedalsWon))
AnnotationAssertion(rdfs:label :numberOfBronzeMedalsWon "nomber de médailles de bronze gagnées"@fr)
AnnotationAssertion(rdfs:label :numberOfBronzeMedalsWon "cantidad de medallas de bronce ganadas"@es)
AnnotationAssertion(rdfs:label :numberOfBronzeMedalsWon "number of bronze medals won"@en)
DataPropertyDomain(:numberOfBronzeMedalsWon :SportCompetitionResult)
DataPropertyRange(:numberOfBronzeMedalsWon xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfCapitalDeputies))
AnnotationAssertion(rdfs:label :numberOfCapitalDeputies "numero de deputados distritais"@pt)
AnnotationAssertion(rdfs:label :numberOfCapitalDeputies "Number Of Capital Deputies"@en)
DataPropertyDomain(:numberOfCapitalDeputies :PopulatedPlace)
DataPropertyRange(:numberOfCapitalDeputies xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfCity))
AnnotationAssertion(rdfs:label :numberOfCity "number of contries inside en continent"@en)
DataPropertyDomain(:numberOfCity :Continent)
DataPropertyRange(:numberOfCity xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfClubs))
AnnotationAssertion(rdfs:label :numberOfClubs "nombre de clubs"@fr)
AnnotationAssertion(rdfs:label :numberOfClubs "number of clubs"@en)
AnnotationAssertion(rdfs:label :numberOfClubs "numero de clubs"@es)
DataPropertyDomain(:numberOfClubs :Activity)
DataPropertyRange(:numberOfClubs xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfCollectionItems))
AnnotationAssertion(rdfs:label :numberOfCollectionItems "number of items in collection"@en)
AnnotationAssertion(rdfs:comment :numberOfCollectionItems "Indication as to the size of the collection of this library"@en)
AnnotationAssertion(rdfs:comment :numberOfCollectionItems "Aanduiding van omvang van de collectie van deze bibliotheek"@nl)
AnnotationAssertion(rdfs:label :numberOfCollectionItems "aantal titels/items"@nl)
DataPropertyDomain(:numberOfCollectionItems :Library)
DataPropertyRange(:numberOfCollectionItems xsd:integer)
Declaration(DataProperty(:numberOfCompetitors))
AnnotationAssertion(rdfs:label :numberOfCompetitors "number of competitors"@en)
DataPropertyDomain(:numberOfCompetitors :OlympicResult)
DataPropertyRange(:numberOfCompetitors xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfCounties))
AnnotationAssertion(rdfs:label :numberOfCounties "número de condados"@pt)
AnnotationAssertion(rdfs:label :numberOfCounties "number of counties"@en)
DataPropertyDomain(:numberOfCounties :PopulatedPlace)
DataPropertyRange(:numberOfCounties xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfCountries))
AnnotationAssertion(rdfs:label :numberOfCountries "number of countries"@en)
AnnotationAssertion(rdfs:label :numberOfCountries "αριθμός χωρών"@el)
AnnotationAssertion(rdfs:label :numberOfCountries "número de países"@pt)
DataPropertyDomain(:numberOfCountries :AdministrativeRegion)
DataPropertyRange(:numberOfCountries xsd:positiveInteger)
Declaration(DataProperty(:numberOfCrew))
AnnotationAssertion(rdfs:label :numberOfCrew "aantal bemanningsleden"@nl)
AnnotationAssertion(rdfs:label :numberOfCrew "αριθμός πληρώματος"@el)
AnnotationAssertion(rdfs:label :numberOfCrew "number of crew"@en)
DataPropertyDomain(:numberOfCrew :MeanOfTransportation)
DataPropertyRange(:numberOfCrew xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfDependency))
AnnotationAssertion(rdfs:label :numberOfDependency "number of continent dependencies"@en)
DataPropertyDomain(:numberOfDependency :Continent)
DataPropertyRange(:numberOfDependency xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfDistricts))
AnnotationAssertion(rdfs:label :numberOfDistricts "jumlah kecamatan"@id)
AnnotationAssertion(rdfs:label :numberOfDistricts "number of districts"@en)
DataPropertyDomain(:numberOfDistricts :Regency)
DataPropertyRange(:numberOfDistricts xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfDoctoralStudents))
AnnotationAssertion(rdfs:label :numberOfDoctoralStudents "number of doctoral students"@en)
DataPropertyDomain(:numberOfDoctoralStudents :University)
DataPropertyRange(:numberOfDoctoralStudents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfEmployees))
AnnotationAssertion(rdfs:label :numberOfEmployees "nombre d'employés"@fr)
AnnotationAssertion(rdfs:label :numberOfEmployees "número de empleados"@es)
AnnotationAssertion(rdfs:label :numberOfEmployees "aantal medewerkers"@nl)
AnnotationAssertion(rdfs:label :numberOfEmployees "αριθμός εργαζομένων"@el)
AnnotationAssertion(rdfs:label :numberOfEmployees "number of employees"@en)
DataPropertyDomain(:numberOfEmployees :Organisation)
DataPropertyRange(:numberOfEmployees xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfEntrances))
AnnotationAssertion(rdfs:label :numberOfEntrances "αριθμός εισόδων"@el)
AnnotationAssertion(rdfs:label :numberOfEntrances "aantal ingangen"@nl)
AnnotationAssertion(rdfs:label :numberOfEntrances "number of entrances"@en)
DataPropertyDomain(:numberOfEntrances :Cave)
DataPropertyRange(:numberOfEntrances xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfEpisodes))
AnnotationAssertion(rdfs:label :numberOfEpisodes "number of episodes"@en)
AnnotationAssertion(rdfs:label :numberOfEpisodes "αριθμός επειδοδίων"@el)
DataPropertyDomain(:numberOfEpisodes :TelevisionShow)
DataPropertyRange(:numberOfEpisodes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfFederalDeputies))
AnnotationAssertion(rdfs:label :numberOfFederalDeputies "numero de deputados federais"@pt)
AnnotationAssertion(rdfs:label :numberOfFederalDeputies "Number Of Federal Deputies"@en)
DataPropertyDomain(:numberOfFederalDeputies :PopulatedPlace)
DataPropertyRange(:numberOfFederalDeputies xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfFilms))
AnnotationAssertion(rdfs:label :numberOfFilms "number of films"@en)
AnnotationAssertion(rdfs:label :numberOfFilms "αριθμός ταινιών"@el)
DataPropertyDomain(:numberOfFilms :AdultActor)
DataPropertyRange(:numberOfFilms xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfGoals))
AnnotationAssertion(rdfs:label :numberOfGoals "number of goals scored"@en)
DataPropertyDomain(:numberOfGoals :CareerStation)
DataPropertyRange(:numberOfGoals xsd:string)
Declaration(DataProperty(:numberOfGoldMedalsWon))
AnnotationAssertion(rdfs:label :numberOfGoldMedalsWon "cantidad de medallas de oro ganadas"@es)
AnnotationAssertion(rdfs:label :numberOfGoldMedalsWon "nomber de médailles d'or gagnées"@fr)
AnnotationAssertion(rdfs:label :numberOfGoldMedalsWon "number of gold medals won"@en)
DataPropertyDomain(:numberOfGoldMedalsWon :SportCompetitionResult)
DataPropertyRange(:numberOfGoldMedalsWon xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfGraduateStudents))
AnnotationAssertion(rdfs:label :numberOfGraduateStudents "number of graduate students"@en)
DataPropertyDomain(:numberOfGraduateStudents :EducationalInstitution)
DataPropertyRange(:numberOfGraduateStudents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfHouses))
AnnotationAssertion(rdfs:comment :numberOfHouses "Count of the houses in the Protected Area"@en)
AnnotationAssertion(rdfs:label :numberOfHouses "aantal huizen aanwezig"@nl)
AnnotationAssertion(rdfs:label :numberOfHouses "number of houses present)"@en)
AnnotationAssertion(rdfs:comment :numberOfHouses "Aantal huizen in afgegrensd gebied"@nl)
DataPropertyDomain(:numberOfHouses :ProtectedArea)
DataPropertyRange(:numberOfHouses xsd:string)
Declaration(DataProperty(:numberOfIsland))
AnnotationAssertion(rdfs:label :numberOfIsland "number of islands"@en)
DataPropertyDomain(:numberOfIsland :Place)
DataPropertyRange(:numberOfIsland xsd:string)
Declaration(DataProperty(:numberOfIslands))
AnnotationAssertion(rdfs:label :numberOfIslands "aantal eilanden"@nl)
AnnotationAssertion(rdfs:label :numberOfIslands "αριθμός νησιών"@el)
AnnotationAssertion(rdfs:label :numberOfIslands "number of islands"@en)
DataPropertyDomain(:numberOfIslands :Island)
DataPropertyRange(:numberOfIslands xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLanes))
AnnotationAssertion(rdfs:label :numberOfLanes "nombre de voies"@fr)
AnnotationAssertion(rdfs:label :numberOfLanes "Anzahl der Fahrstreifen"@de)
AnnotationAssertion(rdfs:label :numberOfLanes "number of lanes"@en)
DataPropertyDomain(:numberOfLanes :RouteOfTransportation)
DataPropertyRange(:numberOfLanes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLaps))
AnnotationAssertion(rdfs:label :numberOfLaps "number of laps"@en)
DataPropertyDomain(:numberOfLaps :FormulaOneRacing)
DataPropertyRange(:numberOfLaps xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLaunches))
AnnotationAssertion(rdfs:label :numberOfLaunches "number of launches"@en)
DataPropertyDomain(:numberOfLaunches :MeanOfTransportation)
DataPropertyRange(:numberOfLaunches xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLawyers))
AnnotationAssertion(rdfs:comment :numberOfLawyers "Number of lawyers or attorneys in the company."@en)
AnnotationAssertion(rdfs:label :numberOfLawyers "Anzahl Rechtsanwälte"@de)
AnnotationAssertion(rdfs:label :numberOfLawyers "number of lawyers"@en)
DataPropertyDomain(:numberOfLawyers :LawFirm)
DataPropertyRange(:numberOfLawyers xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLines))
AnnotationAssertion(rdfs:label :numberOfLines "Anzahl der Linien"@de)
AnnotationAssertion(rdfs:label :numberOfLines "number of lines"@en)
AnnotationAssertion(rdfs:comment :numberOfLines "Number of lines in the transit system."@en)
DataPropertyDomain(:numberOfLines :PublicTransitSystem)
DataPropertyRange(:numberOfLines xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLiveAlbums))
AnnotationAssertion(rdfs:comment :numberOfLiveAlbums "the number of live albums released by the musical artist"@en)
AnnotationAssertion(rdfs:label :numberOfLiveAlbums "number of live albums"@en)
DataPropertyDomain(:numberOfLiveAlbums :MusicalArtist)
DataPropertyRange(:numberOfLiveAlbums xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfLocations))
AnnotationAssertion(rdfs:label :numberOfLocations "nombre de sites"@fr)
AnnotationAssertion(rdfs:label :numberOfLocations "number of locations"@en)
DataPropertyDomain(:numberOfLocations :Organisation)
DataPropertyRange(:numberOfLocations xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfMatches))
AnnotationAssertion(rdfs:label :numberOfMatches "number of matches or caps"@en)
DataPropertyDomain(:numberOfMatches :CareerStation)
DataPropertyRange(:numberOfMatches xsd:integer)
Declaration(DataProperty(:numberOfMembers))
AnnotationAssertion(rdfs:label :numberOfMembers "number of members"@en)
AnnotationAssertion(rdfs:label :numberOfMembers "αριθμός μελών"@el)
AnnotationAssertion(rdfs:label :numberOfMembers "número de membros"@pt)
AnnotationAssertion(rdfs:label :numberOfMembers "nombre de membres"@fr)
AnnotationAssertion(rdfs:label :numberOfMembers "numero de miembros"@es)
DataPropertyDomain(:numberOfMembers :Legislature)
DataPropertyRange(:numberOfMembers xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfMembersAsOf))
AnnotationAssertion(rdfs:label :numberOfMembersAsOf "numero de membros em"@pt)
AnnotationAssertion(rdfs:label :numberOfMembersAsOf "number of members as of"@en)
DataPropertyDomain(:numberOfMembersAsOf :PoliticalParty)
DataPropertyRange(:numberOfMembersAsOf xsd:date)
Declaration(DataProperty(:numberOfMinistries))
AnnotationAssertion(rdfs:label :numberOfMinistries "number of ministries"@en)
AnnotationAssertion(rdfs:label :numberOfMinistries "numero de ministerios"@pt)
DataPropertyDomain(:numberOfMinistries :Country)
DataPropertyRange(:numberOfMinistries xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfMunicipalities))
AnnotationAssertion(rdfs:label :numberOfMunicipalities "Number Of Municipalities"@en)
AnnotationAssertion(rdfs:label :numberOfMunicipalities "Aantal gemeenten"@nl)
AnnotationAssertion(rdfs:label :numberOfMunicipalities "numero de municipios"@pt)
DataPropertyDomain(:numberOfMunicipalities :PopulatedPlace)
DataPropertyRange(:numberOfMunicipalities xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfNeighbourhood))
AnnotationAssertion(rdfs:label :numberOfNeighbourhood "number of neighbourhood"@en)
DataPropertyRange(:numberOfNeighbourhood xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfNewlyIntroducedSports))
AnnotationAssertion(rdfs:label :numberOfNewlyIntroducedSports "numbre de sports nouvellement ajoutés"@fr)
AnnotationAssertion(rdfs:label :numberOfNewlyIntroducedSports "numero de deportes nuevamente añadidos"@es)
AnnotationAssertion(rdfs:label :numberOfNewlyIntroducedSports "number of newly introduced sports"@en)
DataPropertyDomain(:numberOfNewlyIntroducedSports :Olympics)
DataPropertyRange(:numberOfNewlyIntroducedSports xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfOffices))
AnnotationAssertion(rdfs:label :numberOfOffices "αριθμός γραφείων"@el)
AnnotationAssertion(rdfs:label :numberOfOffices "Anzahl Büros"@de)
AnnotationAssertion(rdfs:comment :numberOfOffices "Number of the company's offices."@en)
AnnotationAssertion(rdfs:label :numberOfOffices "number of offices"@en)
AnnotationAssertion(rdfs:comment :numberOfOffices "Αριθμός γραφείων εταιρείας."@el)
DataPropertyDomain(:numberOfOffices :LawFirm)
DataPropertyRange(:numberOfOffices xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfOfficials))
AnnotationAssertion(rdfs:label :numberOfOfficials "number of officials"@en)
DataPropertyDomain(:numberOfOfficials :OlympicResult)
DataPropertyRange(:numberOfOfficials xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfOrbits))
AnnotationAssertion(rdfs:label :numberOfOrbits "number of orbits"@en)
DataPropertyDomain(:numberOfOrbits :SpaceMission)
DataPropertyRange(:numberOfOrbits xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPads))
AnnotationAssertion(rdfs:label :numberOfPads "number of pads"@en)
DataPropertyDomain(:numberOfPads :LaunchPad)
DataPropertyRange(:numberOfPads xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPages))
AnnotationAssertion(rdfs:label :numberOfPages "Anzahl der Seiten"@de)
AnnotationAssertion(rdfs:label :numberOfPages "aantal pagina's"@nl)
AnnotationAssertion(rdfs:comment :numberOfPages "The books number of pages."@en)
AnnotationAssertion(rdfs:label :numberOfPages "number of pages"@en)
DataPropertyDomain(:numberOfPages :Book)
DataPropertyRange(:numberOfPages xsd:positiveInteger)
Declaration(DataProperty(:numberOfParkingSpaces))
AnnotationAssertion(rdfs:label :numberOfParkingSpaces "number of parking spaces"@en)
DataPropertyDomain(:numberOfParkingSpaces :Hotel)
DataPropertyRange(:numberOfParkingSpaces xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfParticipatingAthletes))
AnnotationAssertion(rdfs:label :numberOfParticipatingAthletes "number of participating athletes"@en)
AnnotationAssertion(rdfs:label :numberOfParticipatingAthletes "nombre d'athlètes participant"@fr)
DataPropertyDomain(:numberOfParticipatingAthletes :Olympics)
DataPropertyRange(:numberOfParticipatingAthletes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfParticipatingFemaleAthletes))
AnnotationAssertion(rdfs:label :numberOfParticipatingFemaleAthletes "number of participating female athletes"@en)
AnnotationAssertion(rdfs:label :numberOfParticipatingFemaleAthletes "nombre d'athlètes participant féminins"@fr)
DataPropertyDomain(:numberOfParticipatingFemaleAthletes :Olympics)
DataPropertyRange(:numberOfParticipatingFemaleAthletes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfParticipatingMaleAthletes))
AnnotationAssertion(rdfs:label :numberOfParticipatingMaleAthletes "number of participating male athletes"@en)
AnnotationAssertion(rdfs:label :numberOfParticipatingMaleAthletes "nombre d'athlètes masculins participant"@fr)
DataPropertyDomain(:numberOfParticipatingMaleAthletes :Olympics)
DataPropertyRange(:numberOfParticipatingMaleAthletes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfParticipatingNations))
AnnotationAssertion(rdfs:label :numberOfParticipatingNations "number of participating nations"@en)
DataPropertyDomain(:numberOfParticipatingNations :Olympics)
DataPropertyRange(:numberOfParticipatingNations xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPeopleAttending))
AnnotationAssertion(rdfs:label :numberOfPeopleAttending "nombre de participants"@fr)
AnnotationAssertion(rdfs:label :numberOfPeopleAttending "número de participantes"@pt)
AnnotationAssertion(rdfs:label :numberOfPeopleAttending "number of people attending"@en)
DataPropertyDomain(:numberOfPeopleAttending :Event)
DataPropertyRange(:numberOfPeopleAttending xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPeopleLicensed))
AnnotationAssertion(rdfs:comment :numberOfPeopleLicensed "nombre de personnes ayant une license pour pratiquer cette activité"@en)
AnnotationAssertion(rdfs:label :numberOfPeopleLicensed "nombre de licenciés"@fr)
AnnotationAssertion(rdfs:label :numberOfPeopleLicensed "number of licensed"@en)
DataPropertyDomain(:numberOfPeopleLicensed :Activity)
DataPropertyRange(:numberOfPeopleLicensed xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPiersInWater))
AnnotationAssertion(rdfs:comment :numberOfPiersInWater "Number of piers standing in a river or other water in normal conditions."@en)
AnnotationAssertion(rdfs:label :numberOfPiersInWater "number of piers in water"@en)
AnnotationAssertion(rdfs:label :numberOfPiersInWater "Anzahl der Pfeiler in Wasser"@de)
DataPropertyDomain(:numberOfPiersInWater :Bridge)
DataPropertyRange(:numberOfPiersInWater xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPlatformLevels))
AnnotationAssertion(rdfs:label :numberOfPlatformLevels "number of platform levels"@en)
AnnotationAssertion(rdfs:comment :numberOfPlatformLevels "Number of levels of platforms at the station."@en)
DataPropertyDomain(:numberOfPlatformLevels :Station)
DataPropertyRange(:numberOfPlatformLevels xsd:integer)
Declaration(DataProperty(:numberOfPlayers))
AnnotationAssertion(rdfs:label :numberOfPlayers "αριθμός παιχτών"@el)
AnnotationAssertion(rdfs:label :numberOfPlayers "number of players"@en)
AnnotationAssertion(rdfs:label :numberOfPlayers "nombre de joueurs"@fr)
AnnotationAssertion(rdfs:label :numberOfPlayers "numero de jugadores"@es)
DataPropertyDomain(:numberOfPlayers :Activity)
DataPropertyRange(:numberOfPlayers xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfPostgraduateStudents))
AnnotationAssertion(rdfs:label :numberOfPostgraduateStudents "number of postgraduate students"@en)
DataPropertyDomain(:numberOfPostgraduateStudents :University)
DataPropertyRange(:numberOfPostgraduateStudents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfProfessionals))
AnnotationAssertion(rdfs:label :numberOfProfessionals "number of professionals"@en)
AnnotationAssertion(rdfs:comment :numberOfProfessionals "number of people who earns his living from a specified activity."@en)
AnnotationAssertion(rdfs:label :numberOfProfessionals "nombre de professionnels"@fr)
AnnotationAssertion(rdfs:label :numberOfProfessionals "numero de profesionales"@es)
DataPropertyDomain(:numberOfProfessionals :Activity)
DataPropertyRange(:numberOfProfessionals xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfRestaurants))
AnnotationAssertion(rdfs:label :numberOfRestaurants "number of restaurants"@en)
AnnotationAssertion(rdfs:label :numberOfRestaurants "αριθμός εστιατορίων"@el)
DataPropertyDomain(:numberOfRestaurants :Hotel)
DataPropertyRange(:numberOfRestaurants xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfRockets))
AnnotationAssertion(rdfs:label :numberOfRockets "number of rockets"@en)
DataPropertyDomain(:numberOfRockets :Aircraft)
DataPropertyRange(:numberOfRockets xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfRooms))
AnnotationAssertion(rdfs:label :numberOfRooms "αριθμός δωματίων"@el)
AnnotationAssertion(rdfs:label :numberOfRooms "aantal kamers"@nl)
AnnotationAssertion(rdfs:label :numberOfRooms "number of rooms"@en)
DataPropertyDomain(:numberOfRooms :Hotel)
DataPropertyRange(:numberOfRooms xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSeasons))
AnnotationAssertion(rdfs:label :numberOfSeasons "number of seasons"@en)
DataPropertyDomain(:numberOfSeasons :TelevisionShow)
DataPropertyRange(:numberOfSeasons xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSettlement))
AnnotationAssertion(rdfs:label :numberOfSettlement "number of settlement inside a department"@en)
DataPropertyDomain(:numberOfSettlement :Department)
DataPropertyRange(:numberOfSettlement xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSilverMedalsWon))
AnnotationAssertion(rdfs:label :numberOfSilverMedalsWon "number of silver medals won"@en)
AnnotationAssertion(rdfs:label :numberOfSilverMedalsWon "nomber de médailles d'argent gagnées"@fr)
AnnotationAssertion(rdfs:label :numberOfSilverMedalsWon "cantidad de medallas de plata ganadas"@es)
DataPropertyDomain(:numberOfSilverMedalsWon :SportCompetitionResult)
DataPropertyRange(:numberOfSilverMedalsWon xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSpans))
AnnotationAssertion(rdfs:label :numberOfSpans "number of spans"@en)
AnnotationAssertion(rdfs:label :numberOfSpans "Anzahl der Bögen"@de)
AnnotationAssertion(rdfs:comment :numberOfSpans "Number of spans or arches."@en)
DataPropertyDomain(:numberOfSpans :Bridge)
DataPropertyRange(:numberOfSpans xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSpeakers))
AnnotationAssertion(rdfs:label :numberOfSpeakers "Anzahl Sprecher"@de)
AnnotationAssertion(rdfs:label :numberOfSpeakers "aantal sprekers"@nl)
AnnotationAssertion(rdfs:label :numberOfSpeakers "number of speakers"@en)
DataPropertyDomain(:numberOfSpeakers :Language)
DataPropertyRange(:numberOfSpeakers xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSports))
AnnotationAssertion(rdfs:label :numberOfSports "numbre de sports"@fr)
AnnotationAssertion(rdfs:label :numberOfSports "numero de deportes"@es)
AnnotationAssertion(rdfs:label :numberOfSports "number of sports"@en)
DataPropertyRange(:numberOfSports xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSportsEvents))
AnnotationAssertion(rdfs:label :numberOfSportsEvents "αριθμός αθλητικών γεγονότων"@el)
AnnotationAssertion(rdfs:label :numberOfSportsEvents "number of sports events"@en)
AnnotationAssertion(rdfs:label :numberOfSportsEvents "numbre d'épreuves sportives"@fr)
AnnotationAssertion(rdfs:label :numberOfSportsEvents "numero de dpruebas deportivas"@es)
DataPropertyRange(:numberOfSportsEvents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStaff))
AnnotationAssertion(rdfs:label :numberOfStaff "aantal medewerkers"@nl)
AnnotationAssertion(rdfs:label :numberOfStaff "αριθμός προσωπικού"@el)
AnnotationAssertion(rdfs:label :numberOfStaff "number of staff"@en)
DataPropertyDomain(:numberOfStaff :Organisation)
DataPropertyRange(:numberOfStaff xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStars))
AnnotationAssertion(rdfs:label :numberOfStars "number of stars"@en)
DataPropertyDomain(:numberOfStars :Constellation)
DataPropertyRange(:numberOfStars xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStateDeputies))
AnnotationAssertion(rdfs:label :numberOfStateDeputies "numero de deputados estaduais"@pt)
AnnotationAssertion(rdfs:label :numberOfStateDeputies "Number Of State Deputies"@en)
DataPropertyDomain(:numberOfStateDeputies :PopulatedPlace)
DataPropertyRange(:numberOfStateDeputies xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStations))
AnnotationAssertion(rdfs:label :numberOfStations "number of stations"@en)
AnnotationAssertion(rdfs:label :numberOfStations "Anzahl der Stationen"@de)
AnnotationAssertion(rdfs:comment :numberOfStations "Number of stations or stops."@en)
DataPropertyDomain(:numberOfStations :RouteOfTransportation)
DataPropertyRange(:numberOfStations xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStudents))
AnnotationAssertion(rdfs:label :numberOfStudents "number of students"@en)
AnnotationAssertion(rdfs:label :numberOfStudents "αριθμός φοιτητών"@el)
DataPropertyDomain(:numberOfStudents :EducationalInstitution)
DataPropertyRange(:numberOfStudents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfStudioAlbums))
AnnotationAssertion(rdfs:comment :numberOfStudioAlbums "the number of studio albums released by the musical artist"@en)
AnnotationAssertion(rdfs:label :numberOfStudioAlbums "number of studio albums"@en)
DataPropertyDomain(:numberOfStudioAlbums :MusicalArtist)
DataPropertyRange(:numberOfStudioAlbums xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfSuites))
AnnotationAssertion(rdfs:label :numberOfSuites "number of suites"@en)
DataPropertyDomain(:numberOfSuites :Hotel)
DataPropertyRange(:numberOfSuites xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfTeams))
AnnotationAssertion(rdfs:label :numberOfTeams "number of teams"@en)
AnnotationAssertion(rdfs:label :numberOfTeams "numero di squadre"@it)
DataPropertyDomain(:numberOfTeams :SportsLeague)
DataPropertyRange(:numberOfTeams xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfTerritories))
AnnotationAssertion(rdfs:label :numberOfTerritories "number of territories"@en)
AnnotationAssertion(rdfs:label :numberOfTerritories "número de territórios"@pt)
DataPropertyDomain(:numberOfTerritories :AdministrativeRegion)
DataPropertyRange(:numberOfTerritories xsd:positiveInteger)
Declaration(DataProperty(:numberOfTracks))
AnnotationAssertion(rdfs:label :numberOfTracks "Anzahl der Gleise"@de)
AnnotationAssertion(rdfs:label :numberOfTracks "number of tracks"@en)
AnnotationAssertion(rdfs:comment :numberOfTracks "Number of tracks of a railway or railway station."@en)
DataPropertyDomain(:numberOfTracks :Infrastructure)
DataPropertyRange(:numberOfTracks xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfTurns))
AnnotationAssertion(rdfs:label :numberOfTurns "number of turns"@en)
AnnotationAssertion(rdfs:label :numberOfTurns "nombre de virages"@fr)
DataPropertyDomain(:numberOfTurns :RaceTrack)
DataPropertyRange(:numberOfTurns xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfUndergraduateStudents))
AnnotationAssertion(rdfs:label :numberOfUndergraduateStudents "number of undergraduate students"@en)
DataPropertyDomain(:numberOfUndergraduateStudents :EducationalInstitution)
DataPropertyRange(:numberOfUndergraduateStudents xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVehicles))
AnnotationAssertion(rdfs:comment :numberOfVehicles "Number of vehicles used in the transit system."@en)
AnnotationAssertion(rdfs:label :numberOfVehicles "Anzahl der Fahrzeuge"@de)
AnnotationAssertion(rdfs:label :numberOfVehicles "number of vehicles"@en)
DataPropertyDomain(:numberOfVehicles :PublicTransitSystem)
DataPropertyRange(:numberOfVehicles xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVillages))
AnnotationAssertion(rdfs:label :numberOfVillages "jumlah desa/kelurahan"@id)
AnnotationAssertion(rdfs:label :numberOfVillages "number of villages"@en)
DataPropertyDomain(:numberOfVillages :District)
DataPropertyRange(:numberOfVillages xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVineyards))
AnnotationAssertion(rdfs:label :numberOfVineyards "number of vineyards"@en)
DataPropertyDomain(:numberOfVineyards :WineRegion)
DataPropertyRange(:numberOfVineyards xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVisitors))
AnnotationAssertion(rdfs:label :numberOfVisitors "αριθμός επισκεπτών"@el)
AnnotationAssertion(rdfs:label :numberOfVisitors "bezoekersaantal"@nl)
AnnotationAssertion(rdfs:label :numberOfVisitors "number of visitors"@en)
DataPropertyRange(:numberOfVisitors xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVisitorsAsOf))
AnnotationAssertion(rdfs:label :numberOfVisitorsAsOf "number of visitors as of"@en)
AnnotationAssertion(rdfs:comment :numberOfVisitorsAsOf "The year in which number of visitors occurred."@en)
DataPropertyDomain(:numberOfVisitorsAsOf :HistoricPlace)
DataPropertyRange(:numberOfVisitorsAsOf xsd:gYear)
Declaration(DataProperty(:numberOfVolumes))
AnnotationAssertion(rdfs:label :numberOfVolumes "number of volumes"@en)
DataPropertyDomain(:numberOfVolumes :WrittenWork)
DataPropertyRange(:numberOfVolumes xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfVolunteers))
AnnotationAssertion(rdfs:label :numberOfVolunteers "number of volunteers"@en)
AnnotationAssertion(rdfs:label :numberOfVolunteers "αριθμός εθελοντών"@el)
DataPropertyDomain(:numberOfVolunteers :Organisation)
DataPropertyRange(:numberOfVolunteers xsd:nonNegativeInteger)
Declaration(DataProperty(:numberOfWineries))
AnnotationAssertion(rdfs:label :numberOfWineries "number of wineries"@en)
DataPropertyDomain(:numberOfWineries :WineRegion)
DataPropertyRange(:numberOfWineries xsd:nonNegativeInteger)
Declaration(DataProperty(:nutsCode))
AnnotationAssertion(rdfs:label :nutsCode "NUTS code"@en)
AnnotationAssertion(rdfs:label :nutsCode "NUTS-code:"@nl)
AnnotationAssertion(rdfs:comment :nutsCode "Nomenclature of Territorial Units for Statistics (NUTS) is a geocode  standard for referencing the subdivisions of countries  for statistical purposes. The standard is developed and regulated by the European Union, and thus only covers the member states of the EU in detail."@en)
DataPropertyDomain(:nutsCode :Place)
DataPropertyRange(:nutsCode xsd:string)
Declaration(DataProperty(:observatory))
AnnotationAssertion(rdfs:label :observatory "observatory"@en)
DataPropertyDomain(:observatory :Island)
DataPropertyRange(:observatory xsd:string)
Declaration(DataProperty(:occitanName))
AnnotationAssertion(rdfs:label :occitanName "city occitan name"@en)
DataPropertyDomain(:occitanName :PopulatedPlace)
DataPropertyRange(:occitanName xsd:string)
Declaration(DataProperty(:oclc))
AnnotationAssertion(rdfs:label :oclc "OCLC"@en)
AnnotationAssertion(rdfs:comment :oclc "Online Computer Library Center number"@en)
DataPropertyDomain(:oclc :WrittenWork)
DataPropertyRange(:oclc xsd:string)
Declaration(DataProperty(:offeredClasses))
AnnotationAssertion(rdfs:label :offeredClasses "offered classes"@en)
DataPropertyDomain(:offeredClasses :School)
DataPropertyRange(:offeredClasses xsd:string)
Declaration(DataProperty(:office))
AnnotationAssertion(rdfs:label :office "υπηρεσία"@el)
AnnotationAssertion(rdfs:label :office "Büro"@de)
AnnotationAssertion(rdfs:label :office "office"@en)
DataPropertyRange(:office xsd:string)
Declaration(DataProperty(:officialName))
AnnotationAssertion(rdfs:label :officialName "official name of a switzerland settlement"@en)
DataPropertyRange(:officialName xsd:string)
Declaration(DataProperty(:officialSchoolColour))
AnnotationAssertion(rdfs:label :officialSchoolColour "offizielle Schulfarbe"@de)
AnnotationAssertion(rdfs:comment :officialSchoolColour "The official colour of the EducationalInstitution represented by the colour name (e.g.: red or green)."@en)
AnnotationAssertion(rdfs:label :officialSchoolColour "official school colour"@en)
DataPropertyDomain(:officialSchoolColour :EducationalInstitution)
DataPropertyRange(:officialSchoolColour xsd:string)
Declaration(DataProperty(:ofsCode))
AnnotationAssertion(rdfs:label :ofsCode "ofs code of a settlement"@en)
DataPropertyDomain(:ofsCode :Settlement)
DataPropertyRange(:ofsCode xsd:string)
Declaration(DataProperty(:okatoCode))
AnnotationAssertion(rdfs:label :okatoCode "okato code"@en)
DataPropertyDomain(:okatoCode :PopulatedPlace)
DataPropertyRange(:okatoCode xsd:string)
Declaration(DataProperty(:oldName))
AnnotationAssertion(rdfs:label :oldName "old name"@en)
DataPropertyDomain(:oldName :PopulatedPlace)
DataPropertyRange(:oldName xsd:string)
Declaration(DataProperty(:oldcode))
AnnotationAssertion(rdfs:label :oldcode "oldcode"@en)
DataPropertyDomain(:oldcode :OlympicResult)
DataPropertyRange(:oldcode xsd:string)
Declaration(DataProperty(:omim))
AnnotationAssertion(rdfs:label :omim "OMIM id"@ja)
AnnotationAssertion(rdfs:label :omim "OMIM id"@en)
AnnotationAssertion(rdfs:label :omim "OMIM id"@nl)
DataPropertyDomain(:omim :Biomolecule)
DataPropertyRange(:omim xsd:integer)
Declaration(DataProperty(:onChromosome))
AnnotationAssertion(rdfs:label :onChromosome "on chromosome"@en)
AnnotationAssertion(rdfs:comment :onChromosome "the number corresponding to the chromosome on which the gene is located"@en)
DataPropertyDomain(:onChromosome :GeneLocation)
DataPropertyRange(:onChromosome xsd:integer)
Declaration(DataProperty(:ons))
AnnotationAssertion(rdfs:label :ons "ons"@en)
DataPropertyRange(:ons xsd:nonNegativeInteger)
Declaration(DataProperty(:openAccessContent))
AnnotationAssertion(rdfs:label :openAccessContent "open access content"@en)
AnnotationAssertion(rdfs:comment :openAccessContent "Verfügbarkeit von frei zugänglichem Inhalten."@de)
AnnotationAssertion(rdfs:label :openAccessContent "frei zugänglicher Inhalten"@de)
AnnotationAssertion(rdfs:comment :openAccessContent "Availability of open access content."@en)
DataPropertyDomain(:openAccessContent :PeriodicalLiterature)
DataPropertyRange(:openAccessContent xsd:string)
Declaration(DataProperty(:openingDate))
AnnotationAssertion(rdfs:label :openingDate "opening date"@en)
AnnotationAssertion(rdfs:label :openingDate "Eröffnungsdatum"@de)
AnnotationAssertion(rdfs:label :openingDate "date d'ouverture"@fr)
AnnotationAssertion(rdfs:label :openingDate "ημερομηνία ανοίγματος"@el)
DataPropertyDomain(:openingDate :ArchitecturalStructure)
DataPropertyRange(:openingDate xsd:date)
Declaration(DataProperty(:openingYear))
AnnotationAssertion(rdfs:label :openingYear "Eröffnungsjahr"@de)
AnnotationAssertion(rdfs:label :openingYear "openingsjaar"@nl)
AnnotationAssertion(rdfs:label :openingYear "opening year"@en)
DataPropertyDomain(:openingYear :ArchitecturalStructure)
DataPropertyRange(:openingYear xsd:gYear)
Declaration(DataProperty(:operatingIncome))
AnnotationAssertion(rdfs:label :operatingIncome "operating income ($)"@en)
FunctionalDataProperty(:operatingIncome)
DataPropertyDomain(:operatingIncome :Company)
DataPropertyRange(:operatingIncome xsd:double)
Declaration(DataProperty(:orbitalFlights))
AnnotationAssertion(rdfs:label :orbitalFlights "orbital flights"@en)
DataPropertyDomain(:orbitalFlights :YearInSpaceflight)
DataPropertyRange(:orbitalFlights xsd:nonNegativeInteger)
Declaration(DataProperty(:orbitalInclination))
AnnotationAssertion(rdfs:label :orbitalInclination "orbital inclination"@en)
DataPropertyDomain(:orbitalInclination :SpaceMission)
DataPropertyRange(:orbitalInclination xsd:float)
Declaration(DataProperty(:orbitalPeriod))
AnnotationAssertion(rdfs:label :orbitalPeriod "Περίοδος περιφοράς (s)"@el)
AnnotationAssertion(rdfs:label :orbitalPeriod "orbital period (s)"@en)
DataPropertyDomain(:orbitalPeriod :Planet)
DataPropertyRange(:orbitalPeriod xsd:double)
Declaration(DataProperty(:orbits))
AnnotationAssertion(rdfs:label :orbits "orbits"@en)
DataPropertyRange(:orbits xsd:integer)
Declaration(DataProperty(:orderDate))
AnnotationAssertion(rdfs:label :orderDate "order date"@en)
DataPropertyDomain(:orderDate :Ship)
DataPropertyRange(:orderDate xsd:date)
Declaration(DataProperty(:orderInOffice))
AnnotationAssertion(rdfs:label :orderInOffice "order in office"@en)
DataPropertyRange(:orderInOffice xsd:string)
Declaration(DataProperty(:ordination))
AnnotationAssertion(rdfs:label :ordination "Ordination"@en)
DataPropertyDomain(:ordination :Priest)
DataPropertyRange(:ordination xsd:date)
Declaration(DataProperty(:originalMaximumBoatBeam))
AnnotationAssertion(rdfs:label :originalMaximumBoatBeam "original maximum boat beam (μ)"@en)
DataPropertyDomain(:originalMaximumBoatBeam :Canal)
DataPropertyRange(:originalMaximumBoatBeam xsd:double)
Declaration(DataProperty(:originalMaximumBoatLength))
AnnotationAssertion(rdfs:label :originalMaximumBoatLength "original maximum boat length (μ)"@en)
DataPropertyDomain(:originalMaximumBoatLength :Canal)
DataPropertyRange(:originalMaximumBoatLength xsd:double)
Declaration(DataProperty(:originalName))
AnnotationAssertion(rdfs:comment :originalName "The original name of the entity, e.g. film, settlement, etc."@en)
AnnotationAssertion(rdfs:label :originalName "original name"@en)
AnnotationAssertion(rdfs:label :originalName "oorspronkelijke naam"@nl)
DataPropertyRange(:originalName xsd:string)
Declaration(DataProperty(:originalTitle))
AnnotationAssertion(rdfs:label :originalTitle "oorspronkelijke titel"@nl)
AnnotationAssertion(rdfs:label :originalTitle "original title"@en)
AnnotationAssertion(rdfs:comment :originalTitle "The original title of the work, most of the time in the original language as well"@en)
DataPropertyDomain(:originalTitle :Work)
DataPropertyRange(:originalTitle xsd:string)
Declaration(DataProperty(:originallyUsedFor))
AnnotationAssertion(rdfs:label :originallyUsedFor "originally used for"@en)
AnnotationAssertion(rdfs:label :originallyUsedFor "oorspronkelijk gebruik"@nl)
AnnotationAssertion(rdfs:comment :originallyUsedFor "Original use of the architectural structure, if it is currently being used as anything other than its original purpose."@en)
DataPropertyDomain(:originallyUsedFor :ArchitecturalStructure)
DataPropertyRange(:originallyUsedFor xsd:string)
Declaration(DataProperty(:other))
AnnotationAssertion(rdfs:label :other "other"@en)
DataPropertyDomain(:other :University)
DataPropertyRange(:other xsd:integer)
Declaration(DataProperty(:otherChannel))
AnnotationAssertion(rdfs:label :otherChannel "other channel"@en)
DataPropertyDomain(:otherChannel :Broadcaster)
DataPropertyRange(:otherChannel xsd:string)
Declaration(DataProperty(:otherFunction))
AnnotationAssertion(rdfs:label :otherFunction "other function"@en)
DataPropertyDomain(:otherFunction :Person)
DataPropertyRange(:otherFunction xsd:string)
Declaration(DataProperty(:otherInformation))
AnnotationAssertion(rdfs:label :otherInformation "other information of a settlement"@en)
DataPropertyDomain(:otherInformation :Settlement)
DataPropertyRange(:otherInformation xsd:string)
Declaration(DataProperty(:otherLanguage))
AnnotationAssertion(rdfs:label :otherLanguage "other language of a settlement"@en)
DataPropertyDomain(:otherLanguage :Settlement)
DataPropertyRange(:otherLanguage xsd:string)
Declaration(DataProperty(:otherName))
AnnotationAssertion(rdfs:label :otherName "other name"@en)
DataPropertyDomain(:otherName :PopulatedPlace)
DataPropertyRange(:otherName xsd:string)
Declaration(DataProperty(:otherServingLines))
AnnotationAssertion(rdfs:label :otherServingLines "other serving lines"@en)
AnnotationAssertion(rdfs:label :otherServingLines "andere Verbindungen"@de)
AnnotationAssertion(rdfs:label :otherServingLines "andere verbindingen"@nl)
AnnotationAssertion(rdfs:comment :otherServingLines "Connecting services that serve the station such as bus, etc."@en)
DataPropertyDomain(:otherServingLines :Station)
DataPropertyRange(:otherServingLines xsd:string)
Declaration(DataProperty(:otherWins))
AnnotationAssertion(rdfs:label :otherWins "Sonstige Siege"@de)
AnnotationAssertion(rdfs:label :otherWins "other wins"@en)
DataPropertyDomain(:otherWins :SnookerPlayer)
DataPropertyRange(:otherWins xsd:nonNegativeInteger)
Declaration(DataProperty(:output))
AnnotationAssertion(rdfs:label :output "output"@en)
DataPropertyDomain(:output :Place)
DataPropertyRange(:output xsd:float)
Declaration(DataProperty(:outskirts))
AnnotationAssertion(rdfs:label :outskirts "outskirts"@en)
DataPropertyDomain(:outskirts :PopulatedPlace)
DataPropertyRange(:outskirts xsd:string)
Declaration(DataProperty(:overallRecord))
AnnotationAssertion(rdfs:label :overallRecord "overall record"@en)
DataPropertyDomain(:overallRecord :CollegeCoach)
DataPropertyRange(:overallRecord xsd:string)
Declaration(DataProperty(:oversight))
AnnotationAssertion(rdfs:label :oversight "oversight"@en)
DataPropertyDomain(:oversight :School)
DataPropertyRange(:oversight xsd:string)
Declaration(DataProperty(:parkingInformation))
AnnotationAssertion(rdfs:comment :parkingInformation "Information on station's parking facilities."@en)
AnnotationAssertion(rdfs:label :parkingInformation "Parkplatzinformationen"@de)
AnnotationAssertion(rdfs:label :parkingInformation "parking information"@en)
DataPropertyDomain(:parkingInformation :Station)
DataPropertyRange(:parkingInformation xsd:string)
Declaration(DataProperty(:parliament))
AnnotationAssertion(rdfs:label :parliament "parliament"@en)
DataPropertyDomain(:parliament :Place)
DataPropertyRange(:parliament xsd:string)
Declaration(DataProperty(:parliamentType))
AnnotationAssertion(rdfs:label :parliamentType "parliament type"@en)
DataPropertyDomain(:parliamentType :Place)
DataPropertyRange(:parliamentType xsd:string)
Declaration(DataProperty(:partialFailedLaunches))
AnnotationAssertion(rdfs:comment :partialFailedLaunches "total number of launches resulting in partial failure"@en)
AnnotationAssertion(rdfs:label :partialFailedLaunches "partial failed launches"@en)
DataPropertyRange(:partialFailedLaunches xsd:nonNegativeInteger)
Declaration(DataProperty(:participant))
AnnotationAssertion(rdfs:label :participant "deelnemer"@nl)
AnnotationAssertion(rdfs:label :participant "participant"@en)
AnnotationAssertion(rdfs:label :participant "Teilnehmer"@de)
DataPropertyDomain(:participant :Event)
DataPropertyRange(:participant xsd:string)
Declaration(DataProperty(:partyNumber))
AnnotationAssertion(rdfs:label :partyNumber "número do partido"@pt)
AnnotationAssertion(rdfs:label :partyNumber "party number"@en)
DataPropertyRange(:partyNumber xsd:integer)
Declaration(DataProperty(:passengersPerDay))
AnnotationAssertion(rdfs:label :passengersPerDay "passengers per day"@en)
AnnotationAssertion(rdfs:comment :passengersPerDay "Number of passengers per day."@en)
AnnotationAssertion(rdfs:label :passengersPerDay "Passagiere pro Tag"@de)
DataPropertyDomain(:passengersPerDay :Infrastructure)
DataPropertyRange(:passengersPerDay xsd:nonNegativeInteger)
Declaration(DataProperty(:passengersPerYear))
AnnotationAssertion(rdfs:label :passengersPerYear "passagiers per jaar"@nl)
AnnotationAssertion(rdfs:label :passengersPerYear "passengers per year"@en)
AnnotationAssertion(rdfs:label :passengersPerYear "Passagiere pro Jahr"@de)
AnnotationAssertion(rdfs:comment :passengersPerYear "Number of passengers per year."@en)
DataPropertyDomain(:passengersPerYear :Infrastructure)
DataPropertyRange(:passengersPerYear xsd:nonNegativeInteger)
Declaration(DataProperty(:passengersUsedSystem))
AnnotationAssertion(rdfs:label :passengersUsedSystem "benutztes System der Passagiere"@de)
AnnotationAssertion(rdfs:label :passengersUsedSystem "passengers used system"@en)
AnnotationAssertion(rdfs:comment :passengersUsedSystem "System the passengers are using (from which the passenger statistics are)."@en)
DataPropertyDomain(:passengersUsedSystem :Station)
DataPropertyRange(:passengersUsedSystem xsd:string)
Declaration(DataProperty(:pccSecretary))
AnnotationAssertion(rdfs:label :pccSecretary "pcc secretary"@en)
DataPropertyRange(:pccSecretary xsd:string)
Declaration(DataProperty(:pdb))
AnnotationAssertion(rdfs:label :pdb "PDB"@ja)
AnnotationAssertion(rdfs:label :pdb "PDB"@en)
DataPropertyDomain(:pdb :Protein)
DataPropertyRange(:pdb xsd:string)
Declaration(DataProperty(:penaltiesTeamA))
AnnotationAssertion(rdfs:label :penaltiesTeamA "Penalties Team A"@en)
DataPropertyDomain(:penaltiesTeamA :PenaltyShootOut)
DataPropertyRange(:penaltiesTeamA xsd:string)
Declaration(DataProperty(:penaltiesTeamB))
AnnotationAssertion(rdfs:label :penaltiesTeamB "Penalties Team B"@en)
DataPropertyDomain(:penaltiesTeamB :PenaltyShootOut)
DataPropertyRange(:penaltiesTeamB xsd:string)
Declaration(DataProperty(:penaltyScore))
AnnotationAssertion(rdfs:label :penaltyScore "penalty score"@en)
DataPropertyDomain(:penaltyScore :PenaltyShootOut)
DataPropertyRange(:penaltyScore xsd:integer)
Declaration(DataProperty(:peopleName))
AnnotationAssertion(rdfs:label :peopleName "peopleName"@en)
DataPropertyDomain(:peopleName :PopulatedPlace)
DataPropertyRange(:peopleName xsd:string)
Declaration(DataProperty(:perCapitaIncome))
AnnotationAssertion(rdfs:label :perCapitaIncome "renda per capita ($)"@pt)
AnnotationAssertion(rdfs:label :perCapitaIncome "per capita income ($)"@en)
DataPropertyDomain(:perCapitaIncome :PopulatedPlace)
DataPropertyRange(:perCapitaIncome xsd:double)
Declaration(DataProperty(:perCapitaIncomeAsOf))
AnnotationAssertion(rdfs:label :perCapitaIncomeAsOf "renda per capita em"@pt)
AnnotationAssertion(rdfs:label :perCapitaIncomeAsOf "per capita income as of"@en)
DataPropertyDomain(:perCapitaIncomeAsOf :PopulatedPlace)
DataPropertyRange(:perCapitaIncomeAsOf xsd:date)
Declaration(DataProperty(:perCapitaIncomeRank))
AnnotationAssertion(rdfs:label :perCapitaIncomeRank "per capital income rank"@en)
DataPropertyDomain(:perCapitaIncomeRank :Place)
DataPropertyRange(:perCapitaIncomeRank xsd:string)
Declaration(DataProperty(:percentageAlcohol))
AnnotationAssertion(rdfs:comment :percentageAlcohol "percentage of alcohol present in a beverage"@en)
AnnotationAssertion(rdfs:label :percentageAlcohol "alcoholpercentage"@nl)
AnnotationAssertion(rdfs:label :percentageAlcohol "percentage of alcohol"@en)
DataPropertyDomain(:percentageAlcohol :Beverage)
DataPropertyRange(:percentageAlcohol xsd:nonNegativeInteger)
Declaration(DataProperty(:percentageFat))
AnnotationAssertion(rdfs:comment :percentageFat "how much fat (in relative terms) does this unity of food contain"@en)
AnnotationAssertion(rdfs:label :percentageFat "percentage of fat"@en)
AnnotationAssertion(rdfs:label :percentageFat "vetgehalte"@nl)
DataPropertyDomain(:percentageFat :Cheese)
DataPropertyRange(:percentageFat xsd:nonNegativeInteger)
Declaration(DataProperty(:percentageOfAreaWater))
AnnotationAssertion(rdfs:label :percentageOfAreaWater "percentage of area water"@en)
AnnotationAssertion(rdfs:label :percentageOfAreaWater "percentage wateroppervlak"@nl)
AnnotationAssertion(rdfs:label :percentageOfAreaWater "ποσοστό_υδάτων"@el)
DataPropertyRange(:percentageOfAreaWater xsd:float)
Declaration(DataProperty(:periapsis))
AnnotationAssertion(rdfs:label :periapsis "periapsis (μ)"@en)
DataPropertyRange(:periapsis xsd:double)
Declaration(DataProperty(:period))
AnnotationAssertion(rdfs:label :period "event period"@en)
AnnotationAssertion(rdfs:label :period "periode"@nl)
DataPropertyRange(:period xsd:string)
Declaration(DataProperty(:personName))
AnnotationAssertion(rdfs:label :personName "personName"@en)
DataPropertyDomain(:personName :PersonFunction)
DataPropertyRange(:personName xsd:string)
Declaration(DataProperty(:phonePrefix))
AnnotationAssertion(rdfs:label :phonePrefix "phone prefix"@en)
DataPropertyDomain(:phonePrefix :PopulatedPlace)
DataPropertyRange(:phonePrefix xsd:nonNegativeInteger)
Declaration(DataProperty(:phonePrefixLabel))
AnnotationAssertion(rdfs:label :phonePrefixLabel "phone prefix label of a settlement"@en)
DataPropertyDomain(:phonePrefixLabel :Settlement)
DataPropertyRange(:phonePrefixLabel xsd:string)
Declaration(DataProperty(:phonePrefixName))
AnnotationAssertion(rdfs:label :phonePrefixName "phone prefix name"@en)
DataPropertyDomain(:phonePrefixName :PopulatedPlace)
DataPropertyRange(:phonePrefixName xsd:string)
Declaration(DataProperty(:piercing))
AnnotationAssertion(rdfs:label :piercing "piercing"@pt)
AnnotationAssertion(rdfs:label :piercing "piercing"@en)
DataPropertyDomain(:piercing :Person)
DataPropertyRange(:piercing xsd:string)
Declaration(DataProperty(:pisciculturalPopulation))
AnnotationAssertion(rdfs:label :pisciculturalPopulation "piscicultural population"@en)
DataPropertyDomain(:pisciculturalPopulation :Place)
DataPropertyRange(:pisciculturalPopulation xsd:string)
Declaration(DataProperty(:pistonStroke))
AnnotationAssertion(rdfs:label :pistonStroke "piston stroke (μ)"@en)
DataPropertyDomain(:pistonStroke :AutomobileEngine)
DataPropertyRange(:pistonStroke xsd:double)
Declaration(DataProperty(:playingTime))
AnnotationAssertion(rdfs:label :playingTime "speeltijd (s)"@nl)
AnnotationAssertion(rdfs:label :playingTime "playing time (s)"@en)
DataPropertyRange(:playingTime xsd:double)
Declaration(DataProperty(:plays))
AnnotationAssertion(rdfs:label :plays "plays"@en)
AnnotationAssertion(rdfs:label :plays "slaghand"@nl)
DataPropertyDomain(:plays :TennisPlayer)
DataPropertyRange(:plays xsd:string)
Declaration(DataProperty(:pluviometry))
AnnotationAssertion(rdfs:label :pluviometry "pluviometry"@en)
DataPropertyDomain(:pluviometry :PopulatedPlace)
DataPropertyRange(:pluviometry xsd:string)
Declaration(DataProperty(:podiums))
AnnotationAssertion(rdfs:label :podiums "podiums"@en)
DataPropertyDomain(:podiums :FormulaOneRacer)
DataPropertyRange(:podiums xsd:nonNegativeInteger)
Declaration(DataProperty(:poles))
AnnotationAssertion(rdfs:label :poles "poles"@en)
AnnotationAssertion(rdfs:label :poles "pôle"@fr)
DataPropertyDomain(:poles :FormulaOneRacer)
DataPropertyRange(:poles xsd:nonNegativeInteger)
Declaration(DataProperty(:policeName))
AnnotationAssertion(rdfs:label :policeName "police name"@en)
DataPropertyDomain(:policeName :PopulatedPlace)
DataPropertyRange(:policeName xsd:string)
Declaration(DataProperty(:popularVote))
AnnotationAssertion(rdfs:label :popularVote "Number of votes given to candidate"@en)
DataPropertyDomain(:popularVote :Election)
DataPropertyRange(:popularVote xsd:nonNegativeInteger)
Declaration(DataProperty(:populationAsOf))
AnnotationAssertion(rdfs:label :populationAsOf "χρονιά_απογραφής"@el)
AnnotationAssertion(rdfs:label :populationAsOf "population as of"@en)
AnnotationAssertion(rdfs:label :populationAsOf "population en date de"@fr)
AnnotationAssertion(rdfs:label :populationAsOf "bevolking vanaf"@nl)
DataPropertyDomain(:populationAsOf :PopulatedPlace)
DataPropertyRange(:populationAsOf xsd:date)
Declaration(DataProperty(:populationDate))
AnnotationAssertion(rdfs:label :populationDate "population date"@en)
DataPropertyDomain(:populationDate :Place)
DataPropertyRange(:populationDate xsd:date)
Declaration(DataProperty(:populationDensity))
AnnotationAssertion(rdfs:label :populationDensity "Bevölkerungsdichte (/sqkm)"@de)
AnnotationAssertion(rdfs:label :populationDensity "πυκνότητα_πληθυσμού (/sqkm)"@el)
AnnotationAssertion(rdfs:label :populationDensity "bevolkingsdichtheid (/sqkm)"@nl)
AnnotationAssertion(rdfs:label :populationDensity "population density (/sqkm)"@en)
DataPropertyDomain(:populationDensity :PopulatedPlace)
DataPropertyRange(:populationDensity xsd:double)
Declaration(DataProperty(:populationMetro))
AnnotationAssertion(rdfs:label :populationMetro "population metro"@en)
DataPropertyDomain(:populationMetro :PopulatedPlace)
DataPropertyRange(:populationMetro xsd:nonNegativeInteger)
Declaration(DataProperty(:populationMetroDensity))
AnnotationAssertion(rdfs:label :populationMetroDensity "bevolkingsdichtheid (/sqkm)"@nl)
AnnotationAssertion(rdfs:label :populationMetroDensity "population metro density (/sqkm)"@en)
DataPropertyDomain(:populationMetroDensity :PopulatedPlace)
DataPropertyRange(:populationMetroDensity xsd:double)
Declaration(DataProperty(:populationQuote))
AnnotationAssertion(rdfs:label :populationQuote "population quote"@en)
DataPropertyDomain(:populationQuote :Place)
DataPropertyRange(:populationQuote xsd:string)
Declaration(DataProperty(:populationRural))
AnnotationAssertion(rdfs:label :populationRural "population rural"@en)
DataPropertyDomain(:populationRural :PopulatedPlace)
DataPropertyRange(:populationRural xsd:nonNegativeInteger)
Declaration(DataProperty(:populationRuralDensity))
AnnotationAssertion(rdfs:label :populationRuralDensity "population density rural (/sqkm)"@en)
DataPropertyDomain(:populationRuralDensity :PopulatedPlace)
DataPropertyRange(:populationRuralDensity xsd:double)
Declaration(DataProperty(:populationTotal))
AnnotationAssertion(rdfs:label :populationTotal "Einwohnerzahl"@de)
AnnotationAssertion(rdfs:label :populationTotal "population totale"@fr)
AnnotationAssertion(rdfs:label :populationTotal "população total"@pt)
AnnotationAssertion(rdfs:label :populationTotal "inwonersaantal"@nl)
AnnotationAssertion(rdfs:label :populationTotal "συνολικός_πληθυσμός"@el)
AnnotationAssertion(rdfs:label :populationTotal "population total"@en)
DataPropertyDomain(:populationTotal :PopulatedPlace)
DataPropertyRange(:populationTotal xsd:nonNegativeInteger)
Declaration(DataProperty(:populationTotalRanking))
AnnotationAssertion(rdfs:label :populationTotalRanking "posição no ranking do total da populacao"@pt)
AnnotationAssertion(rdfs:label :populationTotalRanking "total population ranking"@en)
DataPropertyDomain(:populationTotalRanking :PopulatedPlace)
DataPropertyRange(:populationTotalRanking xsd:positiveInteger)
Declaration(DataProperty(:populationUrban))
AnnotationAssertion(rdfs:label :populationUrban "population urban"@en)
DataPropertyDomain(:populationUrban :PopulatedPlace)
DataPropertyRange(:populationUrban xsd:nonNegativeInteger)
Declaration(DataProperty(:populationUrbanDensity))
AnnotationAssertion(rdfs:label :populationUrbanDensity "population urban density (/sqkm)"@en)
DataPropertyDomain(:populationUrbanDensity :PopulatedPlace)
DataPropertyRange(:populationUrbanDensity xsd:double)
Declaration(DataProperty(:populationYear))
AnnotationAssertion(rdfs:label :populationYear "population year"@en)
DataPropertyDomain(:populationYear :PopulatedPlace)
DataPropertyRange(:populationYear xsd:string)
Declaration(DataProperty(:port1DockedTime))
AnnotationAssertion(rdfs:label :port1DockedTime "port1 docked time (s)"@en)
DataPropertyDomain(:port1DockedTime :Spacecraft)
DataPropertyRange(:port1DockedTime xsd:double)
Declaration(DataProperty(:port1DockingDate))
AnnotationAssertion(rdfs:label :port1DockingDate "port1 docking date"@en)
DataPropertyDomain(:port1DockingDate :Spacecraft)
DataPropertyRange(:port1DockingDate xsd:date)
Declaration(DataProperty(:port1UndockingDate))
AnnotationAssertion(rdfs:label :port1UndockingDate "port1 undocking date"@en)
DataPropertyDomain(:port1UndockingDate :Spacecraft)
DataPropertyRange(:port1UndockingDate xsd:date)
Declaration(DataProperty(:port2DockedTime))
AnnotationAssertion(rdfs:label :port2DockedTime "port2 docked time (s)"@en)
DataPropertyDomain(:port2DockedTime :Spacecraft)
DataPropertyRange(:port2DockedTime xsd:double)
Declaration(DataProperty(:port2DockingDate))
AnnotationAssertion(rdfs:label :port2DockingDate "port2 docking date"@en)
DataPropertyDomain(:port2DockingDate :Spacecraft)
DataPropertyRange(:port2DockingDate xsd:date)
Declaration(DataProperty(:port2UndockingDate))
AnnotationAssertion(rdfs:label :port2UndockingDate "port2 undocking date"@en)
DataPropertyDomain(:port2UndockingDate :Spacecraft)
DataPropertyRange(:port2UndockingDate xsd:date)
Declaration(DataProperty(:portfolio))
AnnotationAssertion(rdfs:label :portfolio "portfolio"@en)
DataPropertyRange(:portfolio xsd:string)
Declaration(DataProperty(:position))
AnnotationAssertion(rdfs:label :position "position"@en)
AnnotationAssertion(rdfs:label :position "positie"@nl)
AnnotationAssertion(rdfs:label :position "Θέση"@el)
DataPropertyRange(:position xsd:string)
Declaration(DataProperty(:postalCode))
AnnotationAssertion(rdfs:comment :postalCode "A postal code (known in various countries as a post code, postcode, or ZIP code) is a series of letters and/or digits appended to a postal address for the purpose of sorting mail."@en)
AnnotationAssertion(rdfs:label :postalCode "postal code"@en)
AnnotationAssertion(rdfs:label :postalCode "código postal"@pt)
AnnotationAssertion(rdfs:label :postalCode "code postal"@fr)
AnnotationAssertion(rdfs:label :postalCode "postcode"@nl)
AnnotationAssertion(rdfs:label :postalCode "ταχυδρομικός κώδικας"@el)
AnnotationAssertion(rdfs:label :postalCode "Postleitzahl"@de)
DataPropertyDomain(:postalCode :PopulatedPlace)
DataPropertyRange(:postalCode xsd:string)
Declaration(DataProperty(:power))
AnnotationAssertion(rdfs:label :power "power"@en)
DataPropertyDomain(:power :FictionalCharacter)
DataPropertyRange(:power xsd:string)
Declaration(DataProperty(:powerOutput))
AnnotationAssertion(rdfs:label :powerOutput "power output (W)"@en)
FunctionalDataProperty(:powerOutput)
DataPropertyDomain(:powerOutput :AutomobileEngine)
DataPropertyRange(:powerOutput xsd:double)
Declaration(DataProperty(:prefectMandate))
AnnotationAssertion(rdfs:label :prefectMandate "mandate of a prefect of a romanian settlement"@en)
DataPropertyRange(:prefectMandate xsd:string)
Declaration(DataProperty(:prefix))
AnnotationAssertion(rdfs:label :prefix "prefix"@en)
DataPropertyRange(:prefix xsd:string)
Declaration(DataProperty(:premiereDate))
AnnotationAssertion(rdfs:label :premiereDate "premiere date"@en)
AnnotationAssertion(rdfs:comment :premiereDate "Date the play was first performed."@en)
DataPropertyDomain(:premiereDate :Play)
DataPropertyRange(:premiereDate xsd:date)
Declaration(DataProperty(:premiereYear))
AnnotationAssertion(rdfs:label :premiereYear "premiere year"@en)
AnnotationAssertion(rdfs:comment :premiereYear "Year the play was first performed."@en)
DataPropertyDomain(:premiereYear :Play)
DataPropertyRange(:premiereYear xsd:gYear)
Declaration(DataProperty(:presidentGeneralCouncilMandate))
AnnotationAssertion(rdfs:label :presidentGeneralCouncilMandate "mandate of the president of the general council"@en)
DataPropertyDomain(:presidentGeneralCouncilMandate :Place)
DataPropertyRange(:presidentGeneralCouncilMandate xsd:string)
Declaration(DataProperty(:presidentRegionalCouncilMandate))
AnnotationAssertion(rdfs:label :presidentRegionalCouncilMandate "mandate of the president council of the regional council"@en)
DataPropertyDomain(:presidentRegionalCouncilMandate :Place)
DataPropertyRange(:presidentRegionalCouncilMandate xsd:string)
Declaration(DataProperty(:previousPopulationTotal))
AnnotationAssertion(rdfs:label :previousPopulationTotal "previous population total"@en)
DataPropertyDomain(:previousPopulationTotal :PopulatedPlace)
DataPropertyRange(:previousPopulationTotal xsd:nonNegativeInteger)
Declaration(DataProperty(:priceMoney))
AnnotationAssertion(rdfs:label :priceMoney "Preisgeld ($)"@de)
AnnotationAssertion(rdfs:label :priceMoney "price money ($)"@en)
DataPropertyDomain(:priceMoney :SnookerPlayer)
DataPropertyRange(:priceMoney xsd:double)
Declaration(DataProperty(:primate))
AnnotationAssertion(rdfs:label :primate "Primite"@en)
DataPropertyDomain(:primate :ChristianDoctrine)
DataPropertyRange(:primate xsd:string)
Declaration(DataProperty(:procedure))
AnnotationAssertion(rdfs:comment :procedure "The name designating a formal collection of steps to be taken to complete the case"@en)
AnnotationAssertion(rdfs:label :procedure "procedure"@nl)
AnnotationAssertion(rdfs:label :procedure "procedure"@en)
AnnotationAssertion(rdfs:comment :procedure "De naam die verwijst naar de formele definitie van een verzameling stappen die in de juiste volgorde leiden tot de afronding van de zaak"@nl)
DataPropertyDomain(:procedure :Case)
DataPropertyRange(:procedure xsd:string)
Declaration(DataProperty(:production))
AnnotationAssertion(rdfs:label :production "production"@en)
DataPropertyDomain(:production :Company)
DataPropertyRange(:production xsd:nonNegativeInteger)
Declaration(DataProperty(:productionEndDate))
AnnotationAssertion(rdfs:label :productionEndDate "production end date"@en)
DataPropertyRange(:productionEndDate xsd:date)
Declaration(DataProperty(:productionEndYear))
AnnotationAssertion(rdfs:label :productionEndYear "productie eindjaar"@nl)
AnnotationAssertion(rdfs:label :productionEndYear "production end year"@en)
DataPropertyRange(:productionEndYear xsd:gYear)
Declaration(DataProperty(:productionStartDate))
AnnotationAssertion(rdfs:label :productionStartDate "production start date"@en)
DataPropertyRange(:productionStartDate xsd:date)
Declaration(DataProperty(:productionStartYear))
AnnotationAssertion(rdfs:label :productionStartYear "production start year"@en)
AnnotationAssertion(rdfs:label :productionStartYear "productie beginjaar"@nl)
DataPropertyRange(:productionStartYear xsd:gYear)
Declaration(DataProperty(:productionYears))
AnnotationAssertion(rdfs:label :productionYears "production years"@en)
DataPropertyDomain(:productionYears :Aircraft)
DataPropertyRange(:productionYears xsd:date)
Declaration(DataProperty(:programCost))
AnnotationAssertion(rdfs:label :programCost "program cost ($)"@en)
DataPropertyDomain(:programCost :Aircraft)
DataPropertyRange(:programCost xsd:double)
Declaration(DataProperty(:project))
AnnotationAssertion(rdfs:label :project "project"@en)
DataPropertyDomain(:project :Person)
DataPropertyRange(:project xsd:string)
Declaration(DataProperty(:projectBudgetFunding))
AnnotationAssertion(rdfs:label :projectBudgetFunding "project budget funding ($)"@en)
AnnotationAssertion(rdfs:comment :projectBudgetFunding "The part of the project budget that is funded by the Organistaions given in the \"FundedBy\" property."@en)
DataPropertyDomain(:projectBudgetFunding :ResearchProject)
DataPropertyRange(:projectBudgetFunding xsd:double)
Declaration(DataProperty(:projectBudgetTotal))
AnnotationAssertion(rdfs:comment :projectBudgetTotal "The total budget of the research project."@en)
AnnotationAssertion(rdfs:label :projectBudgetTotal "project budget total ($)"@en)
DataPropertyDomain(:projectBudgetTotal :ResearchProject)
DataPropertyRange(:projectBudgetTotal xsd:double)
Declaration(DataProperty(:projectEndDate))
AnnotationAssertion(rdfs:comment :projectEndDate "The end date of the project."@en)
AnnotationAssertion(rdfs:label :projectEndDate "project end date"@en)
DataPropertyDomain(:projectEndDate :Project)
DataPropertyRange(:projectEndDate xsd:date)
Declaration(DataProperty(:projectKeyword))
AnnotationAssertion(rdfs:label :projectKeyword "project keyword"@en)
AnnotationAssertion(rdfs:comment :projectKeyword "A key word of the project."@en)
DataPropertyDomain(:projectKeyword :Project)
DataPropertyRange(:projectKeyword xsd:string)
Declaration(DataProperty(:projectObjective))
AnnotationAssertion(rdfs:comment :projectObjective "A defined objective of the project."@en)
AnnotationAssertion(rdfs:label :projectObjective "Projektziel"@de)
AnnotationAssertion(rdfs:label :projectObjective "project objective"@en)
DataPropertyDomain(:projectObjective :Project)
DataPropertyRange(:projectObjective xsd:string)
Declaration(DataProperty(:projectReferenceID))
AnnotationAssertion(rdfs:label :projectReferenceID "project reference ID"@en)
AnnotationAssertion(rdfs:comment :projectReferenceID "The reference identification of the project."@en)
DataPropertyDomain(:projectReferenceID :ResearchProject)
DataPropertyRange(:projectReferenceID xsd:string)
Declaration(DataProperty(:projectStartDate))
AnnotationAssertion(rdfs:comment :projectStartDate "The start date of the project."@en)
AnnotationAssertion(rdfs:label :projectStartDate "project start date"@en)
DataPropertyDomain(:projectStartDate :Project)
DataPropertyRange(:projectStartDate xsd:date)
Declaration(DataProperty(:projectType))
AnnotationAssertion(rdfs:label :projectType "project type"@en)
AnnotationAssertion(rdfs:comment :projectType "The type of the research project. Mostly used for the funding schemes of the European Union, for instance: Specific Targeted Research Projects (STREP), Network of Excellence (NoE) or Integrated Project."@en)
DataPropertyDomain(:projectType :ResearchProject)
DataPropertyRange(:projectType xsd:string)
Declaration(DataProperty(:prominence))
AnnotationAssertion(rdfs:label :prominence "prominence (μ)"@en)
DataPropertyRange(:prominence xsd:double)
Declaration(DataProperty(:pronunciation))
AnnotationAssertion(rdfs:label :pronunciation "pronunciation"@en)
DataPropertyRange(:pronunciation xsd:string)
Declaration(DataProperty(:prospectLeague))
AnnotationAssertion(rdfs:label :prospectLeague "prospect league"@en)
DataPropertyDomain(:prospectLeague :IceHockeyPlayer)
DataPropertyRange(:prospectLeague xsd:string)
Declaration(DataProperty(:protectionStatus))
AnnotationAssertion(rdfs:comment :protectionStatus "Just 'Status' is too general. We should be able to distinguish status types since different statuses may require different treatment"@en)
AnnotationAssertion(rdfs:comment :protectionStatus "Alleen 'Status' is te algemeen. We moeten soorten statussen kunnen onderscheiden omdat een andere status andere consequenties kan hebben"@nl)
AnnotationAssertion(rdfs:label :protectionStatus "monumentStatus"@nl)
AnnotationAssertion(rdfs:label :protectionStatus "monument protection status"@en)
DataPropertyDomain(:protectionStatus :Place)
DataPropertyRange(:protectionStatus xsd:string)
Declaration(DataProperty(:protestantPercentage))
AnnotationAssertion(rdfs:label :protestantPercentage "protestant percentage"@en)
DataPropertyDomain(:protestantPercentage :PopulatedPlace)
DataPropertyRange(:protestantPercentage xsd:string)
Declaration(DataProperty(:provinceIsoCode))
AnnotationAssertion(rdfs:label :provinceIsoCode "iso code of a province"@en)
DataPropertyDomain(:provinceIsoCode :PopulatedPlace)
DataPropertyRange(:provinceIsoCode xsd:string)
Declaration(DataProperty(:pseudonym))
AnnotationAssertion(rdfs:label :pseudonym "pseudonym"@en)
AnnotationAssertion(rdfs:label :pseudonym "pseudoniem"@nl)
AnnotationAssertion(rdfs:label :pseudonym "Pseudonym"@de)
DataPropertyDomain(:pseudonym :Person)
DataPropertyRange(:pseudonym xsd:string)
Declaration(DataProperty(:pubchem))
AnnotationAssertion(rdfs:label :pubchem "PubChem"@en)
AnnotationAssertion(rdfs:label :pubchem "PubChem"@fr)
AnnotationAssertion(rdfs:label :pubchem "PubChem"@ja)
DataPropertyRange(:pubchem xsd:string)
Declaration(DataProperty(:publicationDate))
AnnotationAssertion(rdfs:label :publicationDate "publication date"@en)
AnnotationAssertion(rdfs:label :publicationDate "publicatiedatum"@nl)
DataPropertyRange(:publicationDate xsd:date)
Declaration(DataProperty(:publiclyAccessible))
AnnotationAssertion(rdfs:label :publiclyAccessible "publicly accessible"@en)
AnnotationAssertion(rdfs:comment :publiclyAccessible "describes in what way this site is accessible for public"@en)
DataPropertyRange(:publiclyAccessible xsd:string)
Declaration(DataProperty(:purchasingPowerParity))
AnnotationAssertion(rdfs:label :purchasingPowerParity "purchasing power parity"@en)
DataPropertyDomain(:purchasingPowerParity :PopulatedPlace)
DataPropertyRange(:purchasingPowerParity xsd:string)
Declaration(DataProperty(:purchasingPowerParityRank))
AnnotationAssertion(rdfs:label :purchasingPowerParityRank "purchasing power parity rank"@en)
DataPropertyDomain(:purchasingPowerParityRank :PopulatedPlace)
DataPropertyRange(:purchasingPowerParityRank xsd:string)
Declaration(DataProperty(:purchasingPowerParityYear))
AnnotationAssertion(rdfs:label :purchasingPowerParityYear "purchasing power parity year"@en)
DataPropertyDomain(:purchasingPowerParityYear :PopulatedPlace)
DataPropertyRange(:purchasingPowerParityYear xsd:string)
Declaration(DataProperty(:purpose))
AnnotationAssertion(rdfs:label :purpose "objectif"@fr)
AnnotationAssertion(rdfs:label :purpose "purpose"@en)
AnnotationAssertion(rdfs:label :purpose "doel"@nl)
DataPropertyRange(:purpose xsd:string)
Declaration(DataProperty(:quotation))
AnnotationAssertion(rdfs:label :quotation "quotation"@en)
AnnotationAssertion(rdfs:comment :quotation "En su acepción más amplia, una cita es un recurso retórico que consiste en reproducir un fragmento de una expresión humana respetando su formulación original."@es)
AnnotationAssertion(rdfs:label :quotation "cita"@es)
AnnotationAssertion(rdfs:comment :quotation "Une citation est la reproduction d'un court extrait d'un propos ou d'un écrit antérieur dans la rédaction d'un texte ou dans une forme d'expression orale."@fr)
AnnotationAssertion(rdfs:comment :quotation "A quotation is the repetition of one expression as part of another one, particularly when the quoted expression is well-known or explicitly attributed by citation to its original source."@en)
AnnotationAssertion(rdfs:label :quotation "citation"@fr)
DataPropertyRange(:quotation xsd:string)
Declaration(DataProperty(:quote))
AnnotationAssertion(rdfs:label :quote "quote"@en)
DataPropertyDomain(:quote :Place)
DataPropertyRange(:quote xsd:string)
Declaration(DataProperty(:ra))
AnnotationAssertion(rdfs:label :ra "ra"@en)
DataPropertyRange(:ra xsd:string)
Declaration(DataProperty(:raceLength))
AnnotationAssertion(rdfs:label :raceLength "race length (μ)"@en)
DataPropertyDomain(:raceLength :FormulaOneRacing)
DataPropertyRange(:raceLength xsd:double)
Declaration(DataProperty(:races))
AnnotationAssertion(rdfs:label :races "αγώνας"@el)
AnnotationAssertion(rdfs:label :races "races"@en)
DataPropertyDomain(:races :FormulaOneRacer)
DataPropertyRange(:races xsd:nonNegativeInteger)
Declaration(DataProperty(:radius_ly))
AnnotationAssertion(rdfs:label :radius_ly "Radius_ly"@en)
DataPropertyDomain(:radius_ly :Globularswarm)
DataPropertyRange(:radius_ly xsd:integer)
Declaration(DataProperty(:railGauge))
AnnotationAssertion(rdfs:label :railGauge "Spurweite Eisenbahn (μ)"@de)
AnnotationAssertion(rdfs:label :railGauge "rail gauge (μ)"@en)
DataPropertyDomain(:railGauge :RouteOfTransportation)
DataPropertyRange(:railGauge xsd:double)
Declaration(DataProperty(:railwayPlatforms))
AnnotationAssertion(rdfs:label :railwayPlatforms "perrons"@nl)
AnnotationAssertion(rdfs:label :railwayPlatforms "αποβάθρα"@el)
AnnotationAssertion(rdfs:label :railwayPlatforms "railway platforms"@en)
AnnotationAssertion(rdfs:comment :railwayPlatforms "Information on the type of platform(s) at the station."@en)
DataPropertyDomain(:railwayPlatforms :Station)
DataPropertyRange(:railwayPlatforms xsd:string)
Declaration(DataProperty(:range))
AnnotationAssertion(rdfs:label :range "bereik"@nl)
AnnotationAssertion(rdfs:label :range "range"@en)
DataPropertyRange(:range xsd:string)
Declaration(DataProperty(:rank))
AnnotationAssertion(rdfs:label :rank "rank"@en)
AnnotationAssertion(rdfs:label :rank "Platzierung"@de)
DataPropertyRange(:rank xsd:nonNegativeInteger)
Declaration(DataProperty(:rankAgreement))
AnnotationAssertion(rdfs:label :rankAgreement "rank of an agreement"@en)
DataPropertyDomain(:rankAgreement :Place)
DataPropertyRange(:rankAgreement xsd:nonNegativeInteger)
Declaration(DataProperty(:rankArea))
AnnotationAssertion(rdfs:label :rankArea "rank of an area"@en)
DataPropertyDomain(:rankArea :PopulatedPlace)
DataPropertyRange(:rankArea xsd:nonNegativeInteger)
Declaration(DataProperty(:rankInFinalMedalCount))
AnnotationAssertion(rdfs:label :rankInFinalMedalCount "rank in final medal count"@en)
DataPropertyDomain(:rankInFinalMedalCount :OlympicResult)
DataPropertyRange(:rankInFinalMedalCount xsd:positiveInteger)
Declaration(DataProperty(:rankPopulation))
AnnotationAssertion(rdfs:label :rankPopulation "rank of a population"@en)
DataPropertyDomain(:rankPopulation :PopulatedPlace)
DataPropertyRange(:rankPopulation xsd:nonNegativeInteger)
Declaration(DataProperty(:ranking))
AnnotationAssertion(rdfs:label :ranking "ranking"@en)
DataPropertyDomain(:ranking :School)
DataPropertyRange(:ranking xsd:positiveInteger)
Declaration(DataProperty(:rankingWins))
AnnotationAssertion(rdfs:label :rankingWins "Siege in Ranglistenturnieren"@de)
AnnotationAssertion(rdfs:label :rankingWins "ranking wins"@en)
DataPropertyDomain(:rankingWins :SnookerPlayer)
DataPropertyRange(:rankingWins xsd:nonNegativeInteger)
Declaration(DataProperty(:rankingsDoubles))
AnnotationAssertion(rdfs:label :rankingsDoubles "doubles rankings"@en)
DataPropertyDomain(:rankingsDoubles :TennisPlayer)
DataPropertyRange(:rankingsDoubles xsd:nonNegativeInteger)
Declaration(DataProperty(:rankingsSingles))
AnnotationAssertion(rdfs:label :rankingsSingles "single rankings"@en)
DataPropertyDomain(:rankingsSingles :TennisPlayer)
DataPropertyRange(:rankingsSingles xsd:nonNegativeInteger)
Declaration(DataProperty(:rating))
AnnotationAssertion(rdfs:label :rating "rating"@en)
AnnotationAssertion(rdfs:label :rating "cijfer"@nl)
DataPropertyRange(:rating xsd:float)
Declaration(DataProperty(:ratio))
AnnotationAssertion(rdfs:label :ratio "ratio"@en)
DataPropertyDomain(:ratio :School)
DataPropertyRange(:ratio xsd:string)
Declaration(DataProperty(:rebuildDate))
AnnotationAssertion(rdfs:label :rebuildDate "herbouw datum"@nl)
AnnotationAssertion(rdfs:label :rebuildDate "rebuild date"@en)
DataPropertyRange(:rebuildDate xsd:date)
Declaration(DataProperty(:rebuildingDate))
AnnotationAssertion(rdfs:label :rebuildingDate "rebuilding date"@en)
DataPropertyDomain(:rebuildingDate :ArchitecturalStructure)
DataPropertyRange(:rebuildingDate xsd:date)
Declaration(DataProperty(:rebuildingYear))
AnnotationAssertion(rdfs:label :rebuildingYear "rebuilding year"@en)
AnnotationAssertion(rdfs:label :rebuildingYear "herbouw jaar"@nl)
DataPropertyDomain(:rebuildingYear :ArchitecturalStructure)
DataPropertyRange(:rebuildingYear xsd:gYear)
Declaration(DataProperty(:recommissioningDate))
AnnotationAssertion(rdfs:label :recommissioningDate "recommissioning date"@en)
DataPropertyDomain(:recommissioningDate :Ship)
DataPropertyRange(:recommissioningDate xsd:date)
Declaration(DataProperty(:recordDate))
AnnotationAssertion(rdfs:label :recordDate "record date"@en)
AnnotationAssertion(rdfs:label :recordDate "opname datum"@nl)
AnnotationAssertion(rdfs:label :recordDate "ηχογράφηση"@el)
DataPropertyDomain(:recordDate :MusicalWork)
DataPropertyRange(:recordDate xsd:date)
Declaration(DataProperty(:redLongDistancePisteNumber))
AnnotationAssertion(rdfs:label :redLongDistancePisteNumber "red long distance piste number"@en)
DataPropertyDomain(:redLongDistancePisteNumber :Place)
DataPropertyRange(:redLongDistancePisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:redSkiPisteNumber))
AnnotationAssertion(rdfs:label :redSkiPisteNumber "red ski piste number"@en)
DataPropertyDomain(:redSkiPisteNumber :Place)
DataPropertyRange(:redSkiPisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:redline))
AnnotationAssertion(rdfs:label :redline "redline (kmh)"@en)
FunctionalDataProperty(:redline)
DataPropertyDomain(:redline :AutomobileEngine)
DataPropertyRange(:redline xsd:double)
Declaration(DataProperty(:refcul))
AnnotationAssertion(rdfs:label :refcul "reference for cultural data"@en)
DataPropertyDomain(:refcul :Place)
DataPropertyRange(:refcul xsd:string)
Declaration(DataProperty(:reference))
AnnotationAssertion(rdfs:label :reference "reference"@en)
DataPropertyDomain(:reference :Place)
DataPropertyRange(:reference xsd:string)
Declaration(DataProperty(:refgen))
AnnotationAssertion(rdfs:label :refgen "reference for general data"@en)
DataPropertyDomain(:refgen :Place)
DataPropertyRange(:refgen xsd:string)
Declaration(DataProperty(:refgeo))
AnnotationAssertion(rdfs:label :refgeo "reference for geographic data"@en)
DataPropertyDomain(:refgeo :Place)
DataPropertyRange(:refgeo xsd:string)
Declaration(DataProperty(:refpol))
AnnotationAssertion(rdfs:label :refpol "reference for politic data"@en)
DataPropertyDomain(:refpol :Place)
DataPropertyRange(:refpol xsd:string)
Declaration(DataProperty(:refseq))
AnnotationAssertion(rdfs:label :refseq "RefSeq"@en)
DataPropertyDomain(:refseq :Protein)
DataPropertyRange(:refseq xsd:string)
Declaration(DataProperty(:refseqmrna))
AnnotationAssertion(rdfs:label :refseqmrna "refseq mRNA"@ja)
AnnotationAssertion(rdfs:label :refseqmrna "refseq mRNA"@en)
DataPropertyDomain(:refseqmrna :Biomolecule)
DataPropertyRange(:refseqmrna xsd:string)
Declaration(DataProperty(:refseqprotein))
AnnotationAssertion(rdfs:label :refseqprotein "refseq protein"@ja)
AnnotationAssertion(rdfs:label :refseqprotein "refseq protein"@en)
DataPropertyDomain(:refseqprotein :Biomolecule)
DataPropertyRange(:refseqprotein xsd:string)
Declaration(DataProperty(:regime))
AnnotationAssertion(rdfs:label :regime "regime"@en)
DataPropertyDomain(:regime :Spacecraft)
DataPropertyRange(:regime xsd:string)
Declaration(DataProperty(:regionIsoCode))
AnnotationAssertion(rdfs:label :regionIsoCode "iso code of a region"@en)
DataPropertyDomain(:regionIsoCode :PopulatedPlace)
DataPropertyRange(:regionIsoCode xsd:string)
Declaration(DataProperty(:regionLink))
AnnotationAssertion(rdfs:label :regionLink "region link"@en)
DataPropertyDomain(:regionLink :Place)
DataPropertyRange(:regionLink xsd:string)
Declaration(DataProperty(:regionType))
AnnotationAssertion(rdfs:label :regionType "region type"@en)
AnnotationAssertion(rdfs:label :regionType "regio-type"@nl)
DataPropertyDomain(:regionType :Place)
DataPropertyRange(:regionType xsd:string)
Declaration(DataProperty(:regionalCouncil))
AnnotationAssertion(rdfs:label :regionalCouncil "regional council"@en)
DataPropertyDomain(:regionalCouncil :Place)
DataPropertyRange(:regionalCouncil xsd:string)
Declaration(DataProperty(:regionalPrefecture))
AnnotationAssertion(rdfs:label :regionalPrefecture "regional prefecture"@en)
DataPropertyDomain(:regionalPrefecture :Place)
DataPropertyRange(:regionalPrefecture xsd:string)
Declaration(DataProperty(:registration))
AnnotationAssertion(rdfs:label :registration "registration"@en)
DataPropertyDomain(:registration :Company)
DataPropertyRange(:registration xsd:string)
Declaration(DataProperty(:releaseDate))
AnnotationAssertion(rdfs:label :releaseDate "data wydania"@pl)
AnnotationAssertion(rdfs:label :releaseDate "release datum"@nl)
AnnotationAssertion(rdfs:label :releaseDate "release date"@en)
AnnotationAssertion(rdfs:label :releaseDate "ημερομηνία κυκλοφορίας"@el)
DataPropertyDomain(:releaseDate :Work)
DataPropertyRange(:releaseDate xsd:date)
Declaration(DataProperty(:relief))
AnnotationAssertion(rdfs:label :relief "relief"@en)
DataPropertyDomain(:relief :Place)
DataPropertyRange(:relief xsd:string)
Declaration(DataProperty(:reopened))
AnnotationAssertion(rdfs:label :reopened "reopened"@en)
DataPropertyDomain(:reopened :School)
DataPropertyRange(:reopened xsd:date)
Declaration(DataProperty(:reopeningDate))
AnnotationAssertion(rdfs:label :reopeningDate "reopening date"@en)
AnnotationAssertion(rdfs:comment :reopeningDate "Date of reopening the architectural structure."@en)
DataPropertyDomain(:reopeningDate :ArchitecturalStructure)
DataPropertyRange(:reopeningDate xsd:date)
Declaration(DataProperty(:reopeningYear))
AnnotationAssertion(rdfs:label :reopeningYear "reopening year"@en)
AnnotationAssertion(rdfs:label :reopeningYear "heropening jaar"@nl)
AnnotationAssertion(rdfs:comment :reopeningYear "Year of reopening the architectural structure."@en)
DataPropertyDomain(:reopeningYear :ArchitecturalStructure)
DataPropertyRange(:reopeningYear xsd:gYear)
Declaration(DataProperty(:reportingMark))
AnnotationAssertion(rdfs:label :reportingMark "reporting mark"@en)
AnnotationAssertion(rdfs:comment :reportingMark "A reporting mark is a two-, three-, or four-letter alphabetic code used to identify owners or lessees of rolling stock and other equipment used on the North American railroad network."@en)
DataPropertyDomain(:reportingMark :PublicTransitSystem)
DataPropertyRange(:reportingMark xsd:string)
Declaration(DataProperty(:representative))
AnnotationAssertion(rdfs:label :representative "number of representatives"@en)
DataPropertyDomain(:representative :Place)
DataPropertyRange(:representative xsd:nonNegativeInteger)
Declaration(DataProperty(:requirement))
AnnotationAssertion(rdfs:label :requirement "requirement"@en)
DataPropertyRange(:requirement xsd:string)
Declaration(DataProperty(:reservations))
AnnotationAssertion(rdfs:comment :reservations "Are reservations required for the establishment or event?"@en)
AnnotationAssertion(rdfs:label :reservations "reservations"@en)
DataPropertyDomain(:reservations :Restaurant)
DataPropertyRange(:reservations xsd:boolean)
Declaration(DataProperty(:restoreDate))
AnnotationAssertion(rdfs:label :restoreDate "restore date"@en)
AnnotationAssertion(rdfs:label :restoreDate "ημερομηνία ανακαίνισης"@el)
DataPropertyRange(:restoreDate xsd:date)
Declaration(DataProperty(:result))
AnnotationAssertion(rdfs:label :result "result"@en)
AnnotationAssertion(rdfs:label :result "αποτέλεσμα"@el)
DataPropertyDomain(:result :MilitaryConflict)
DataPropertyRange(:result xsd:string)
Declaration(DataProperty(:retentionTime))
AnnotationAssertion(rdfs:label :retentionTime "relation time"@en)
DataPropertyDomain(:retentionTime :Place)
DataPropertyRange(:retentionTime xsd:string)
Declaration(DataProperty(:retired))
AnnotationAssertion(rdfs:label :retired "retired"@en)
AnnotationAssertion(rdfs:label :retired "συνταξιούχος"@el)
DataPropertyRange(:retired xsd:date)
Declaration(DataProperty(:retirementDate))
AnnotationAssertion(rdfs:label :retirementDate "retirement date"@en)
AnnotationAssertion(rdfs:label :retirementDate "pensioendatum"@nl)
FunctionalDataProperty(:retirementDate)
DataPropertyDomain(:retirementDate :Person)
DataPropertyRange(:retirementDate xsd:date)
Declaration(DataProperty(:revenue))
AnnotationAssertion(rdfs:label :revenue "έσοδα ($)"@el)
AnnotationAssertion(rdfs:label :revenue "revenue ($)"@en)
DataPropertyDomain(:revenue :Organisation)
DataPropertyRange(:revenue xsd:double)
Declaration(DataProperty(:review))
AnnotationAssertion(rdfs:label :review "review"@en)
DataPropertyDomain(:review :Album)
DataPropertyRange(:review xsd:anyURI)
Declaration(DataProperty(:rgbCoordinateBlue))
AnnotationAssertion(rdfs:label :rgbCoordinateBlue "bluecoordinate in the RGB space"@en)
DataPropertyDomain(:rgbCoordinateBlue :Colour)
DataPropertyRange(:rgbCoordinateBlue xsd:nonNegativeInteger)
Declaration(DataProperty(:rgbCoordinateGreen))
AnnotationAssertion(rdfs:label :rgbCoordinateGreen "green coordinate in the RGB space"@en)
DataPropertyDomain(:rgbCoordinateGreen :Colour)
DataPropertyRange(:rgbCoordinateGreen xsd:nonNegativeInteger)
Declaration(DataProperty(:rgbCoordinateRed))
AnnotationAssertion(rdfs:label :rgbCoordinateRed "red coordinate in the RGB space"@en)
DataPropertyDomain(:rgbCoordinateRed :Colour)
DataPropertyRange(:rgbCoordinateRed xsd:nonNegativeInteger)
Declaration(DataProperty(:rightAscension))
AnnotationAssertion(rdfs:label :rightAscension "right ascension"@en)
DataPropertyDomain(:rightAscension :Constellation)
DataPropertyRange(:rightAscension xsd:nonNegativeInteger)
Declaration(DataProperty(:rocketStages))
AnnotationAssertion(rdfs:label :rocketStages "number of rocket stages"@en)
AnnotationAssertion(rdfs:comment :rocketStages "number of stages, not including boosters"@en)
DataPropertyDomain(:rocketStages :Rocket)
DataPropertyRange(:rocketStages xsd:nonNegativeInteger)
Declaration(DataProperty(:role))
AnnotationAssertion(rdfs:label :role "rôle"@fr)
AnnotationAssertion(rdfs:label :role "ρόλος"@el)
AnnotationAssertion(rdfs:label :role "role"@en)
DataPropertyDomain(:role :MilitaryUnit)
DataPropertyRange(:role xsd:string)
Declaration(DataProperty(:roofHeight))
AnnotationAssertion(rdfs:label :roofHeight "Höhe Dach"@de)
AnnotationAssertion(rdfs:label :roofHeight "roof height"@en)
DataPropertyDomain(:roofHeight :Skyscraper)
DataPropertyRange(:roofHeight xsd:nonNegativeInteger)
Declaration(DataProperty(:rotationPeriod))
AnnotationAssertion(rdfs:label :rotationPeriod "rotation period (s)"@en)
DataPropertyDomain(:rotationPeriod :Planet)
DataPropertyRange(:rotationPeriod xsd:double)
Declaration(DataProperty(:route))
AnnotationAssertion(rdfs:label :route "route"@en)
DataPropertyDomain(:route :Place)
DataPropertyRange(:route xsd:string)
Declaration(DataProperty(:routeDirection))
AnnotationAssertion(rdfs:comment :routeDirection "The general direction of the route (eg. North-South)."@en)
AnnotationAssertion(rdfs:label :routeDirection "route direction"@en)
AnnotationAssertion(rdfs:label :routeDirection "Himmelsrichtung des Verkehrsweges"@de)
AnnotationAssertion(rdfs:comment :routeDirection "Himmelsrichtung des Verkehrsweges (z.B. North-South)."@de)
DataPropertyDomain(:routeDirection :RouteOfTransportation)
DataPropertyRange(:routeDirection xsd:string)
Declaration(DataProperty(:routeEndDirection))
AnnotationAssertion(rdfs:comment :routeEndDirection "Himmelsrichtung des Endes des Verkehrsweges. Der Gegensatz zur OntologyProperty:routeStartDirection."@de)
AnnotationAssertion(rdfs:label :routeEndDirection "Himmelsrichtung des Wegendes"@de)
AnnotationAssertion(rdfs:label :routeEndDirection "road end direction"@en)
AnnotationAssertion(rdfs:comment :routeEndDirection "End of the route. The opposite of OntologyProperty:routeStartDirection."@en)
DataPropertyDomain(:routeEndDirection :RouteOfTransportation)
DataPropertyRange(:routeEndDirection xsd:string)
Declaration(DataProperty(:routeNumber))
AnnotationAssertion(rdfs:comment :routeNumber "The number of the route."@en)
AnnotationAssertion(rdfs:label :routeNumber "route number"@en)
DataPropertyDomain(:routeNumber :RouteOfTransportation)
DataPropertyRange(:routeNumber xsd:string)
Declaration(DataProperty(:routeStartDirection))
AnnotationAssertion(rdfs:label :routeStartDirection "Himmelsrichtung des Wegstarts"@de)
AnnotationAssertion(rdfs:comment :routeStartDirection "End of the route. For U.S. roads, this should be either \"South\" or \"West\" per the standards set by the U.S. Roads project."@en)
AnnotationAssertion(rdfs:comment :routeStartDirection "Himmelsrichtung des Anfangs des Verkehrsweges."@de)
AnnotationAssertion(rdfs:label :routeStartDirection "road start direction"@en)
DataPropertyDomain(:routeStartDirection :RouteOfTransportation)
DataPropertyRange(:routeStartDirection xsd:string)
Declaration(DataProperty(:routeTypeAbbreviation))
AnnotationAssertion(rdfs:comment :routeTypeAbbreviation "The route type abbreviation (eg.: I for Interstate, M for Motorway or NJ for New Jersey Route)."@en)
AnnotationAssertion(rdfs:label :routeTypeAbbreviation "route type abbreviation"@en)
DataPropertyDomain(:routeTypeAbbreviation :RouteOfTransportation)
DataPropertyRange(:routeTypeAbbreviation xsd:string)
Declaration(DataProperty(:ruling))
AnnotationAssertion(rdfs:comment :ruling "Ruling referred to in this legal case"@en)
AnnotationAssertion(rdfs:label :ruling "ruling"@en)
AnnotationAssertion(rdfs:label :ruling "relevante regelgeving"@nl)
DataPropertyDomain(:ruling :LegalCase)
DataPropertyRange(:ruling xsd:string)
Declaration(DataProperty(:runtime))
AnnotationAssertion(rdfs:label :runtime "διάρκεια (s)"@el)
AnnotationAssertion(rdfs:label :runtime "runtime (s)"@en)
AnnotationAssertion(rdfs:label :runtime "duur (s)"@nl)
AnnotationAssertion(rdfs:label :runtime "durée (s)"@fr)
DataPropertyDomain(:runtime :Work)
DataPropertyRange(:runtime xsd:double)
Declaration(DataProperty(:runwayDesignation))
AnnotationAssertion(rdfs:label :runwayDesignation "designation of runway"@en)
DataPropertyDomain(:runwayDesignation :Airport)
DataPropertyRange(:runwayDesignation xsd:string)
Declaration(DataProperty(:runwayLength))
AnnotationAssertion(rdfs:label :runwayLength "length of runway (μ)"@en)
AnnotationAssertion(rdfs:label :runwayLength "Start- und Landebahnlänge (μ)"@de)
DataPropertyDomain(:runwayLength :Airport)
DataPropertyRange(:runwayLength xsd:double)
Declaration(DataProperty(:runwaySurface))
AnnotationAssertion(rdfs:label :runwaySurface "surface of runway"@en)
DataPropertyDomain(:runwaySurface :Airport)
DataPropertyRange(:runwaySurface xsd:string)
Declaration(DataProperty(:runwayWidth))
AnnotationAssertion(rdfs:label :runwayWidth "width of runway (μ)"@en)
AnnotationAssertion(rdfs:label :runwayWidth "滑走路の全幅 (μ)"@ja)
DataPropertyDomain(:runwayWidth :Airport)
DataPropertyRange(:runwayWidth xsd:double)
Declaration(DataProperty(:salary))
AnnotationAssertion(rdfs:label :salary "μισθός ($)"@el)
AnnotationAssertion(rdfs:label :salary "salary ($)"@en)
AnnotationAssertion(rdfs:label :salary "Gehalt ($)"@de)
AnnotationAssertion(rdfs:label :salary "給料 ($)"@ja)
DataPropertyDomain(:salary :Person)
DataPropertyRange(:salary xsd:double)
Declaration(DataProperty(:sameName))
AnnotationAssertion(rdfs:label :sameName "same name of a sweden settlement"@en)
DataPropertyRange(:sameName xsd:string)
Declaration(DataProperty(:sardinianName))
AnnotationAssertion(rdfs:label :sardinianName "city sardinian name"@en)
DataPropertyDomain(:sardinianName :PopulatedPlace)
DataPropertyRange(:sardinianName xsd:string)
Declaration(DataProperty(:satellite))
AnnotationAssertion(rdfs:label :satellite "satellite"@en)
DataPropertyDomain(:satellite :Planet)
DataPropertyRange(:satellite xsd:string)
Declaration(DataProperty(:satellitesDeployed))
AnnotationAssertion(rdfs:label :satellitesDeployed "satellites deployed"@en)
DataPropertyDomain(:satellitesDeployed :SpaceShuttle)
DataPropertyRange(:satellitesDeployed xsd:nonNegativeInteger)
Declaration(DataProperty(:scale))
AnnotationAssertion(rdfs:label :scale "scale"@en)
DataPropertyDomain(:scale :Place)
DataPropertyRange(:scale xsd:string)
Declaration(DataProperty(:schoolCode))
AnnotationAssertion(rdfs:label :schoolCode "school code"@en)
DataPropertyDomain(:schoolCode :School)
DataPropertyRange(:schoolCode xsd:string)
Declaration(DataProperty(:schoolNumber))
AnnotationAssertion(rdfs:label :schoolNumber "school number"@en)
DataPropertyDomain(:schoolNumber :School)
DataPropertyRange(:schoolNumber xsd:string)
Declaration(DataProperty(:scotishName))
AnnotationAssertion(rdfs:label :scotishName "scotish name"@en)
DataPropertyDomain(:scotishName :PopulatedPlace)
DataPropertyRange(:scotishName xsd:string)
Declaration(DataProperty(:scotsName))
AnnotationAssertion(rdfs:label :scotsName "scots name"@en)
DataPropertyDomain(:scotsName :PopulatedPlace)
DataPropertyRange(:scotsName xsd:string)
Declaration(DataProperty(:scottishName))
AnnotationAssertion(rdfs:label :scottishName "scottish name"@en)
DataPropertyDomain(:scottishName :Settlement)
DataPropertyRange(:scottishName xsd:string)
Declaration(DataProperty(:seasonNumber))
AnnotationAssertion(rdfs:comment :seasonNumber "The season number to which the TelevisionEpisode belongs."@en)
AnnotationAssertion(rdfs:label :seasonNumber "season number"@en)
DataPropertyDomain(:seasonNumber :TelevisionEpisode)
DataPropertyRange(:seasonNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:seatNumber))
AnnotationAssertion(rdfs:label :seatNumber "number of seats in the land parlement"@en)
DataPropertyRange(:seatNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:seatingCapacity))
AnnotationAssertion(rdfs:label :seatingCapacity "seating capacity"@en)
AnnotationAssertion(rdfs:label :seatingCapacity "zitplaatsen"@nl)
DataPropertyDomain(:seatingCapacity :Building)
DataPropertyRange(:seatingCapacity xsd:nonNegativeInteger)
Declaration(DataProperty(:security))
AnnotationAssertion(rdfs:label :security "security"@en)
AnnotationAssertion(rdfs:comment :security "Sicherheitsmaßnahmen, die für das Gebäude getroffen wurden"@de)
AnnotationAssertion(rdfs:comment :security "Safety precautions that are used in the building"@en)
AnnotationAssertion(rdfs:label :security "SIcherheit"@de)
DataPropertyDomain(:security :Building)
DataPropertyRange(:security xsd:string)
Declaration(DataProperty(:senior))
AnnotationAssertion(rdfs:label :senior "senior"@en)
DataPropertyDomain(:senior :PopulatedPlace)
DataPropertyRange(:senior xsd:string)
Declaration(DataProperty(:seniority))
AnnotationAssertion(rdfs:label :seniority "seniority"@en)
DataPropertyRange(:seniority xsd:string)
Declaration(DataProperty(:seniunija))
AnnotationAssertion(rdfs:label :seniunija "seniunija"@en)
DataPropertyDomain(:seniunija :PopulatedPlace)
DataPropertyRange(:seniunija xsd:string)
Declaration(DataProperty(:sequenceNumber))
AnnotationAssertion(rdfs:label :sequenceNumber "sequence number"@en)
DataPropertyDomain(:sequenceNumber :Installment)
DataPropertyRange(:sequenceNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:serviceEndDate))
AnnotationAssertion(rdfs:label :serviceEndDate "service end date"@en)
DataPropertyDomain(:serviceEndDate :MilitaryPerson)
DataPropertyRange(:serviceEndDate xsd:date)
Declaration(DataProperty(:serviceEndYear))
AnnotationAssertion(rdfs:label :serviceEndYear "service end year"@en)
DataPropertyDomain(:serviceEndYear :MilitaryPerson)
DataPropertyRange(:serviceEndYear xsd:gYear)
Declaration(DataProperty(:serviceModule))
AnnotationAssertion(rdfs:label :serviceModule "service module"@en)
DataPropertyDomain(:serviceModule :SpaceMission)
DataPropertyRange(:serviceModule xsd:string)
Declaration(DataProperty(:serviceNumber))
AnnotationAssertion(rdfs:comment :serviceNumber "The service number held by the individual during military service."@en)
AnnotationAssertion(rdfs:label :serviceNumber "service number"@en)
DataPropertyDomain(:serviceNumber :MilitaryPerson)
DataPropertyRange(:serviceNumber xsd:string)
Declaration(DataProperty(:serviceStartDate))
AnnotationAssertion(rdfs:label :serviceStartDate "service start date"@en)
DataPropertyDomain(:serviceStartDate :MilitaryPerson)
DataPropertyRange(:serviceStartDate xsd:date)
Declaration(DataProperty(:serviceStartYear))
AnnotationAssertion(rdfs:label :serviceStartYear "service start year"@en)
DataPropertyDomain(:serviceStartYear :MilitaryPerson)
DataPropertyRange(:serviceStartYear xsd:gYear)
Declaration(DataProperty(:servingTemperature))
AnnotationAssertion(rdfs:comment :servingTemperature "Serving temperature for the food (e.g.: hot, cold, warm or room temperature)."@en)
AnnotationAssertion(rdfs:label :servingTemperature "serving temperature"@en)
DataPropertyDomain(:servingTemperature :Food)
DataPropertyRange(:servingTemperature xsd:string)
Declaration(DataProperty(:sessionNumber))
AnnotationAssertion(rdfs:label :sessionNumber "número da sessão"@pt)
AnnotationAssertion(rdfs:label :sessionNumber "session number"@en)
DataPropertyRange(:sessionNumber xsd:integer)
Declaration(DataProperty(:settingOfPlay))
AnnotationAssertion(rdfs:label :settingOfPlay "setting of play"@en)
AnnotationAssertion(rdfs:comment :settingOfPlay "The places and time where the play takes place."@en)
DataPropertyDomain(:settingOfPlay :Play)
DataPropertyRange(:settingOfPlay xsd:string)
Declaration(DataProperty(:setupTime))
AnnotationAssertion(rdfs:label :setupTime "setup time (s)"@en)
DataPropertyRange(:setupTime xsd:double)
Declaration(DataProperty(:sex))
AnnotationAssertion(rdfs:label :sex "Geschlecht"@de)
AnnotationAssertion(rdfs:label :sex "sex"@en)
AnnotationAssertion(rdfs:label :sex "φύλο"@el)
DataPropertyDomain(:sex :Person)
DataPropertyRange(:sex xsd:string)
Declaration(DataProperty(:shareDate))
AnnotationAssertion(rdfs:label :shareDate "share date"@en)
DataPropertyDomain(:shareDate :Broadcaster)
DataPropertyRange(:shareDate xsd:gYearMonth)
Declaration(DataProperty(:shareOfAudience))
AnnotationAssertion(rdfs:label :shareOfAudience "Anteil der Zuschauer/Zuhörer"@de)
AnnotationAssertion(rdfs:label :shareOfAudience "share of audience"@en)
DataPropertyDomain(:shareOfAudience :Broadcaster)
DataPropertyRange(:shareOfAudience xsd:float)
Declaration(DataProperty(:shareSource))
AnnotationAssertion(rdfs:label :shareSource "share source"@en)
DataPropertyDomain(:shareSource :Broadcaster)
DataPropertyRange(:shareSource xsd:string)
Declaration(DataProperty(:sharingOut))
AnnotationAssertion(rdfs:label :sharingOut "sharing out"@en)
DataPropertyDomain(:sharingOut :PopulatedPlace)
DataPropertyRange(:sharingOut xsd:string)
Declaration(DataProperty(:sharingOutArea))
AnnotationAssertion(rdfs:label :sharingOutArea "sharing out area"@en)
DataPropertyDomain(:sharingOutArea :PopulatedPlace)
DataPropertyRange(:sharingOutArea xsd:string)
Declaration(DataProperty(:sharingOutPopulation))
AnnotationAssertion(rdfs:label :sharingOutPopulation "sharing out population"@en)
DataPropertyDomain(:sharingOutPopulation :PopulatedPlace)
DataPropertyRange(:sharingOutPopulation xsd:nonNegativeInteger)
Declaration(DataProperty(:sharingOutPopulationName))
AnnotationAssertion(rdfs:label :sharingOutPopulationName "sharing out population name"@en)
DataPropertyDomain(:sharingOutPopulationName :PopulatedPlace)
DataPropertyRange(:sharingOutPopulationName xsd:string)
Declaration(DataProperty(:sharingOutPopulationYear))
AnnotationAssertion(rdfs:label :sharingOutPopulationYear "sharing out year"@en)
DataPropertyDomain(:sharingOutPopulationYear :PopulatedPlace)
DataPropertyRange(:sharingOutPopulationYear xsd:string)
Declaration(DataProperty(:shipBeam))
AnnotationAssertion(rdfs:comment :shipBeam "The beam of a ship is its width at the widest point."@en)
AnnotationAssertion(rdfs:label :shipBeam "ship beam (μ)"@en)
DataPropertyDomain(:shipBeam :Ship)
DataPropertyRange(:shipBeam xsd:double)
Declaration(DataProperty(:shipDisplacement))
AnnotationAssertion(rdfs:comment :shipDisplacement "A ship's displacement is its mass at any given time."@en)
AnnotationAssertion(rdfs:label :shipDisplacement "displacement (g)"@en)
DataPropertyDomain(:shipDisplacement :Ship)
DataPropertyRange(:shipDisplacement xsd:double)
Declaration(DataProperty(:shipDraft))
AnnotationAssertion(rdfs:label :shipDraft "ship draft (μ)"@en)
AnnotationAssertion(rdfs:comment :shipDraft "The draft (or draught) of a ship's hull is the vertical distance between the waterline and the bottom of the hull (keel), with the thickness of the hull included; in the case of not being included the draft outline would be obtained."@en)
DataPropertyDomain(:shipDraft :Ship)
DataPropertyRange(:shipDraft xsd:double)
Declaration(DataProperty(:shipLaunch))
AnnotationAssertion(rdfs:label :shipLaunch "ship launched"@en)
DataPropertyDomain(:shipLaunch :Ship)
DataPropertyRange(:shipLaunch xsd:date)
Declaration(DataProperty(:shoeNumber))
AnnotationAssertion(rdfs:label :shoeNumber "schoenmaat"@nl)
AnnotationAssertion(rdfs:label :shoeNumber "número do sapato"@pt)
AnnotationAssertion(rdfs:label :shoeNumber "shoe number"@en)
DataPropertyDomain(:shoeNumber :Person)
DataPropertyRange(:shoeNumber xsd:positiveInteger)
Declaration(DataProperty(:shoots))
AnnotationAssertion(rdfs:label :shoots "shoots"@en)
DataPropertyDomain(:shoots :IceHockeyPlayer)
DataPropertyRange(:shoots xsd:string)
Declaration(DataProperty(:shoreLength))
AnnotationAssertion(rdfs:label :shoreLength "μήκος_όχθης (μ)"@el)
AnnotationAssertion(rdfs:label :shoreLength "shore length (μ)"@en)
DataPropertyDomain(:shoreLength :Lake)
DataPropertyRange(:shoreLength xsd:double)
Declaration(DataProperty(:sicilianName))
AnnotationAssertion(rdfs:label :sicilianName "city sicilian name"@en)
DataPropertyDomain(:sicilianName :PopulatedPlace)
DataPropertyRange(:sicilianName xsd:string)
Declaration(DataProperty(:signName))
AnnotationAssertion(rdfs:label :signName "sign name of a hungarian settlement"@en)
DataPropertyRange(:signName xsd:string)
Declaration(DataProperty(:signature))
AnnotationAssertion(rdfs:label :signature "signature"@en)
DataPropertyDomain(:signature :Person)
DataPropertyRange(:signature xsd:string)
Declaration(DataProperty(:siren))
AnnotationAssertion(rdfs:label :siren "siren number"@en)
DataPropertyRange(:siren xsd:nonNegativeInteger)
Declaration(DataProperty(:sixthFormStudents))
AnnotationAssertion(rdfs:label :sixthFormStudents "sixth form students"@en)
DataPropertyDomain(:sixthFormStudents :School)
DataPropertyRange(:sixthFormStudents xsd:string)
Declaration(DataProperty(:sizeBlazon))
AnnotationAssertion(rdfs:label :sizeBlazon "size blazon"@en)
DataPropertyRange(:sizeBlazon xsd:string)
Declaration(DataProperty(:sizeLogo))
AnnotationAssertion(rdfs:label :sizeLogo "size logo"@en)
DataPropertyRange(:sizeLogo xsd:nonNegativeInteger)
Declaration(DataProperty(:sizeMap))
AnnotationAssertion(rdfs:label :sizeMap "size map"@en)
DataPropertyRange(:sizeMap xsd:string)
Declaration(DataProperty(:sizeThumbnail))
AnnotationAssertion(rdfs:label :sizeThumbnail "size of a thumbnail"@en)
DataPropertyDomain(:sizeThumbnail :Settlement)
DataPropertyRange(:sizeThumbnail xsd:string)
Declaration(DataProperty(:size_v))
AnnotationAssertion(rdfs:label :size_v "size_v"@en)
AnnotationAssertion(rdfs:label :size_v "μέγεθος"@el)
DataPropertyRange(:size_v xsd:integer)
Declaration(DataProperty(:skiLift))
AnnotationAssertion(rdfs:label :skiLift "ski lift"@en)
DataPropertyDomain(:skiLift :Place)
DataPropertyRange(:skiLift xsd:nonNegativeInteger)
Declaration(DataProperty(:skiPisteKilometre))
AnnotationAssertion(rdfs:label :skiPisteKilometre "ski piste kilometre (μ)"@en)
DataPropertyDomain(:skiPisteKilometre :Place)
DataPropertyRange(:skiPisteKilometre xsd:double)
Declaration(DataProperty(:skiPisteNumber))
AnnotationAssertion(rdfs:label :skiPisteNumber "ski piste number"@en)
DataPropertyDomain(:skiPisteNumber :Place)
DataPropertyRange(:skiPisteNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:skiTow))
AnnotationAssertion(rdfs:label :skiTow "ski tow"@en)
DataPropertyDomain(:skiTow :Place)
DataPropertyRange(:skiTow xsd:nonNegativeInteger)
Declaration(DataProperty(:slogan))
AnnotationAssertion(rdfs:label :slogan "slogan"@en)
AnnotationAssertion(rdfs:label :slogan "Slogan"@de)
AnnotationAssertion(rdfs:label :slogan "slogan"@nl)
DataPropertyDomain(:slogan :Organisation)
DataPropertyRange(:slogan xsd:string)
Declaration(DataProperty(:snowParkNumber))
AnnotationAssertion(rdfs:label :snowParkNumber "snow park number"@en)
DataPropertyDomain(:snowParkNumber :Place)
DataPropertyRange(:snowParkNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:sourceConfluenceElevation))
AnnotationAssertion(rdfs:label :sourceConfluenceElevation "source confluence elevation (μ)"@en)
DataPropertyRange(:sourceConfluenceElevation xsd:double)
Declaration(DataProperty(:sourceElevation))
AnnotationAssertion(rdfs:label :sourceElevation "source elevation (μ)"@en)
DataPropertyRange(:sourceElevation xsd:double)
Declaration(DataProperty(:space))
AnnotationAssertion(rdfs:label :space "space"@en)
AnnotationAssertion(rdfs:label :space "Raum"@de)
DataPropertyDomain(:space :Building)
DataPropertyRange(:space xsd:nonNegativeInteger)
Declaration(DataProperty(:spacewalkBegin))
AnnotationAssertion(rdfs:label :spacewalkBegin "spacewalk begin"@en)
DataPropertyDomain(:spacewalkBegin :SpaceMission)
DataPropertyRange(:spacewalkBegin xsd:date)
Declaration(DataProperty(:spacewalkEnd))
AnnotationAssertion(rdfs:label :spacewalkEnd "spacewalk end"@en)
DataPropertyDomain(:spacewalkEnd :SpaceMission)
DataPropertyRange(:spacewalkEnd xsd:date)
Declaration(DataProperty(:speaker))
AnnotationAssertion(rdfs:comment :speaker "number of office holder"@en)
AnnotationAssertion(rdfs:label :speaker "speaker"@en)
DataPropertyRange(:speaker xsd:integer)
Declaration(DataProperty(:specialist))
AnnotationAssertion(rdfs:label :specialist "specialist"@en)
DataPropertyDomain(:specialist :School)
DataPropertyRange(:specialist xsd:string)
Declaration(DataProperty(:speedLimit))
AnnotationAssertion(rdfs:label :speedLimit "Tempolimit (kmh)"@de)
AnnotationAssertion(rdfs:label :speedLimit "speed limit (kmh)"@en)
DataPropertyDomain(:speedLimit :RouteOfTransportation)
DataPropertyRange(:speedLimit xsd:double)
Declaration(DataProperty(:spike))
AnnotationAssertion(rdfs:label :spike "καρφί"@el)
AnnotationAssertion(rdfs:label :spike "spike"@en)
AnnotationAssertion(rdfs:label :spike "smaç"@tr)
DataPropertyDomain(:spike :VolleyballPlayer)
DataPropertyRange(:spike xsd:string)
Declaration(DataProperty(:squadNumber))
AnnotationAssertion(rdfs:comment :squadNumber "The number that an athlete wears in a team sport."@en)
AnnotationAssertion(rdfs:label :squadNumber "squad number"@en)
DataPropertyDomain(:squadNumber :SportsTeamMember)
DataPropertyRange(:squadNumber xsd:nonNegativeInteger)
Declaration(DataProperty(:staff))
AnnotationAssertion(rdfs:label :staff "προσωπικό"@el)
AnnotationAssertion(rdfs:label :staff "staff"@en)
DataPropertyDomain(:staff :EducationalInstitution)
DataPropertyRange(:staff xsd:nonNegativeInteger)
Declaration(DataProperty(:starRating))
AnnotationAssertion(rdfs:label :starRating "star rating"@en)
DataPropertyDomain(:starRating :Hotel)
DataPropertyRange(:starRating xsd:float)
Declaration(DataProperty(:startCareer))
AnnotationAssertion(rdfs:label :startCareer "start career"@en)
DataPropertyDomain(:startCareer :Person)
DataPropertyRange(:startCareer xsd:string)
Declaration(DataProperty(:startDate))
AnnotationAssertion(rdfs:comment :startDate "The start date of the event."@en)
AnnotationAssertion(rdfs:label :startDate "date de début"@fr)
AnnotationAssertion(rdfs:label :startDate "fecha de inicio"@es)
AnnotationAssertion(rdfs:label :startDate "startdatum"@nl)
AnnotationAssertion(rdfs:label :startDate "start date"@en)
DataPropertyDomain(:startDate :Event)
DataPropertyRange(:startDate xsd:date)
Declaration(DataProperty(:startReign))
AnnotationAssertion(rdfs:label :startReign "start reign"@en)
DataPropertyDomain(:startReign :Person)
DataPropertyRange(:startReign xsd:string)
Declaration(DataProperty(:startYear))
AnnotationAssertion(rdfs:label :startYear "start year"@en)
DataPropertyDomain(:startYear :Place)
DataPropertyRange(:startYear xsd:string)
Declaration(DataProperty(:startYearOfInsertion))
AnnotationAssertion(rdfs:label :startYearOfInsertion "start year of insertion"@en)
DataPropertyDomain(:startYearOfInsertion :AutomobileEngine)
DataPropertyRange(:startYearOfInsertion xsd:gYear)
Declaration(DataProperty(:startYearOfSales))
AnnotationAssertion(rdfs:label :startYearOfSales "start year of sales"@en)
DataPropertyDomain(:startYearOfSales :Sales)
DataPropertyRange(:startYearOfSales xsd:gYear)
Declaration(DataProperty(:stationEvaDuration))
AnnotationAssertion(rdfs:label :stationEvaDuration "station EVA duration (s)"@en)
DataPropertyDomain(:stationEvaDuration :SpaceMission)
DataPropertyRange(:stationEvaDuration xsd:double)
Declaration(DataProperty(:stationStructure))
AnnotationAssertion(rdfs:label :stationStructure "station structuur"@nl)
AnnotationAssertion(rdfs:label :stationStructure "station structure"@en)
AnnotationAssertion(rdfs:comment :stationStructure "Type of station structure (underground, at-grade, or elevated)."@en)
DataPropertyDomain(:stationStructure :Station)
DataPropertyRange(:stationStructure xsd:string)
Declaration(DataProperty(:stationVisitDuration))
AnnotationAssertion(rdfs:label :stationVisitDuration "station visit duration (s)"@en)
DataPropertyDomain(:stationVisitDuration :SpaceMission)
DataPropertyRange(:stationVisitDuration xsd:double)
Declaration(DataProperty(:statisticValue))
AnnotationAssertion(rdfs:label :statisticValue "statistic value"@en)
DataPropertyDomain(:statisticValue :BaseballPlayer)
DataPropertyRange(:statisticValue xsd:float)
Declaration(DataProperty(:statisticYear))
AnnotationAssertion(rdfs:label :statisticYear "statistic year"@en)
DataPropertyDomain(:statisticYear :BaseballPlayer)
DataPropertyRange(:statisticYear xsd:date)
Declaration(DataProperty(:status))
AnnotationAssertion(rdfs:label :status "estatus"@es)
AnnotationAssertion(rdfs:label :status "status"@nl)
AnnotationAssertion(rdfs:label :status "statut"@fr)
AnnotationAssertion(rdfs:label :status "status"@en)
DataPropertyRange(:status xsd:string)
Declaration(DataProperty(:statusYear))
AnnotationAssertion(rdfs:label :statusYear "status year"@en)
DataPropertyDomain(:statusYear :PopulatedPlace)
DataPropertyRange(:statusYear xsd:string)
Declaration(DataProperty(:strength))
AnnotationAssertion(rdfs:label :strength "strength"@en)
AnnotationAssertion(rdfs:label :strength "δύναμη"@el)
DataPropertyDomain(:strength :MilitaryConflict)
DataPropertyRange(:strength xsd:string)
Declaration(DataProperty(:style))
AnnotationAssertion(rdfs:label :style "estilo"@es)
AnnotationAssertion(rdfs:label :style "style"@en)
AnnotationAssertion(rdfs:label :style "stil"@de)
AnnotationAssertion(rdfs:label :style "stile"@it)
DataPropertyDomain(:style :Painting)
DataPropertyRange(:style xsd:string)
Declaration(DataProperty(:subMunicipalityType))
AnnotationAssertion(rdfs:label :subMunicipalityType "type gemeente"@nl)
AnnotationAssertion(rdfs:label :subMunicipalityType "type of municipality"@en)
DataPropertyDomain(:subMunicipalityType :SubMunicipality)
DataPropertyRange(:subMunicipalityType xsd:string)
Declaration(DataProperty(:subPrefecture))
AnnotationAssertion(rdfs:label :subPrefecture "subprefecture"@en)
DataPropertyDomain(:subPrefecture :Place)
DataPropertyRange(:subPrefecture xsd:string)
Declaration(DataProperty(:subdivision))
AnnotationAssertion(rdfs:label :subdivision "subdivision"@en)
DataPropertyDomain(:subdivision :Place)
DataPropertyRange(:subdivision xsd:string)
Declaration(DataProperty(:subdivisionLink))
AnnotationAssertion(rdfs:label :subdivisionLink "subdivision link"@en)
DataPropertyDomain(:subdivisionLink :Place)
DataPropertyRange(:subdivisionLink xsd:string)
Declaration(DataProperty(:subdivisions))
AnnotationAssertion(rdfs:label :subdivisions "subdivisions"@en)
DataPropertyDomain(:subdivisions :Place)
DataPropertyRange(:subdivisions xsd:nonNegativeInteger)
Declaration(DataProperty(:subjectOfPlay))
AnnotationAssertion(rdfs:comment :subjectOfPlay "The overall subject matter dealt with by the play."@en)
AnnotationAssertion(rdfs:label :subjectOfPlay "subject of play"@en)
DataPropertyDomain(:subjectOfPlay :Play)
DataPropertyRange(:subjectOfPlay xsd:string)
Declaration(DataProperty(:sublimationPoint))
AnnotationAssertion(rdfs:label :sublimationPoint "sublimation point (K)"@en)
DataPropertyRange(:sublimationPoint xsd:double)
Declaration(DataProperty(:suborbitalFlights))
AnnotationAssertion(rdfs:label :suborbitalFlights "suborbital flights"@en)
DataPropertyDomain(:suborbitalFlights :YearInSpaceflight)
DataPropertyRange(:suborbitalFlights xsd:nonNegativeInteger)
Declaration(DataProperty(:subsystem))
AnnotationAssertion(rdfs:label :subsystem "subsystem"@en)
DataPropertyDomain(:subsystem :Place)
DataPropertyRange(:subsystem xsd:string)
Declaration(DataProperty(:subsystemLink))
AnnotationAssertion(rdfs:label :subsystemLink "subsystem link"@en)
DataPropertyDomain(:subsystemLink :Place)
DataPropertyRange(:subsystemLink xsd:string)
Declaration(DataProperty(:subtitle))
AnnotationAssertion(rdfs:label :subtitle "legenda"@pt)
AnnotationAssertion(rdfs:label :subtitle "subtitle"@en)
AnnotationAssertion(rdfs:label :subtitle "Untertitel"@de)
AnnotationAssertion(rdfs:label :subtitle "onderschrift"@nl)
AnnotationAssertion(rdfs:label :subtitle "υπότιτλος"@el)
DataPropertyRange(:subtitle xsd:string)
Declaration(DataProperty(:successfulLaunches))
AnnotationAssertion(rdfs:label :successfulLaunches "successful launches"@en)
DataPropertyRange(:successfulLaunches xsd:nonNegativeInteger)
Declaration(DataProperty(:summerTemperature))
AnnotationAssertion(rdfs:label :summerTemperature "summer temperature (K)"@en)
DataPropertyDomain(:summerTemperature :Settlement)
DataPropertyRange(:summerTemperature xsd:double)
Declaration(DataProperty(:supplementalDraftRound))
AnnotationAssertion(rdfs:label :supplementalDraftRound "supplemental draft round"@en)
DataPropertyDomain(:supplementalDraftRound :Athlete)
DataPropertyRange(:supplementalDraftRound xsd:string)
Declaration(DataProperty(:supplementalDraftYear))
AnnotationAssertion(rdfs:label :supplementalDraftYear "supplemental draft year"@en)
DataPropertyDomain(:supplementalDraftYear :GridironFootballPlayer)
DataPropertyRange(:supplementalDraftYear xsd:gYear)
Declaration(DataProperty(:supply))
AnnotationAssertion(rdfs:label :supply "supply"@en)
DataPropertyDomain(:supply :Place)
DataPropertyRange(:supply xsd:string)
Declaration(DataProperty(:suppreddedDate))
AnnotationAssertion(rdfs:label :suppreddedDate "suppredded date"@en)
AnnotationAssertion(rdfs:label :suppreddedDate "oppressie datum"@nl)
DataPropertyDomain(:suppreddedDate :Saint)
DataPropertyRange(:suppreddedDate xsd:date)
Declaration(DataProperty(:surfaceArea))
AnnotationAssertion(rdfs:label :surfaceArea "έκταση (m2)"@el)
AnnotationAssertion(rdfs:label :surfaceArea "surface area (m2)"@en)
DataPropertyDomain(:surfaceArea :Planet)
DataPropertyRange(:surfaceArea xsd:double)
Declaration(DataProperty(:surfaceFormOccurrenceOffset))
AnnotationAssertion(rdfs:label :surfaceFormOccurrenceOffset "position in which a surface occurs in a text"@en)
DataPropertyRange(:surfaceFormOccurrenceOffset xsd:string)
Declaration(DataProperty(:surfaceGravity))
AnnotationAssertion(rdfs:label :surfaceGravity "surface gravity (g)"@en)
DataPropertyDomain(:surfaceGravity :Planet)
DataPropertyRange(:surfaceGravity xsd:double)
Declaration(DataProperty(:symbol))
AnnotationAssertion(rdfs:comment :symbol "HUGO Gene Symbol"@en)
AnnotationAssertion(rdfs:label :symbol "symbol"@en)
DataPropertyDomain(:symbol :Biomolecule)
DataPropertyRange(:symbol xsd:string)
Declaration(DataProperty(:synonym))
AnnotationAssertion(rdfs:label :synonym "シノニム"@ja)
AnnotationAssertion(rdfs:label :synonym "synonym"@en)
AnnotationAssertion(rdfs:label :synonym "συνώνυμο"@el)
DataPropertyRange(:synonym xsd:string)
Declaration(DataProperty(:systemRequirements))
AnnotationAssertion(rdfs:label :systemRequirements "minimum system requirements"@en)
DataPropertyRange(:systemRequirements xsd:string)
Declaration(DataProperty(:tag))
AnnotationAssertion(rdfs:label :tag "tag"@en)
DataPropertyRange(:tag xsd:date)
Declaration(DataProperty(:tamazightSettlementName))
AnnotationAssertion(rdfs:label :tamazightSettlementName "tamazight settlement name"@en)
DataPropertyRange(:tamazightSettlementName xsd:string)
Declaration(DataProperty(:tattoo))
AnnotationAssertion(rdfs:label :tattoo "Tätowierung"@de)
AnnotationAssertion(rdfs:label :tattoo "τατουάζ"@el)
AnnotationAssertion(rdfs:label :tattoo "tattoo"@en)
AnnotationAssertion(rdfs:label :tattoo "tatuagem"@pt)
DataPropertyDomain(:tattoo :Person)
DataPropertyRange(:tattoo xsd:string)
Declaration(DataProperty(:teamName))
AnnotationAssertion(rdfs:label :teamName "team name"@en)
AnnotationAssertion(rdfs:label :teamName "όνομα ομάδας"@el)
DataPropertyDomain(:teamName :School)
DataPropertyRange(:teamName xsd:string)
Declaration(DataProperty(:teamSize))
AnnotationAssertion(rdfs:label :teamSize "team size"@en)
DataPropertyRange(:teamSize xsd:nonNegativeInteger)
Declaration(DataProperty(:technique))
AnnotationAssertion(rdfs:label :technique "técnica"@es)
AnnotationAssertion(rdfs:label :technique "τεχνική"@el)
AnnotationAssertion(rdfs:label :technique "technique"@en)
DataPropertyDomain(:technique :Painting)
DataPropertyRange(:technique xsd:string)
Declaration(DataProperty(:temperature))
AnnotationAssertion(rdfs:label :temperature "température (K)"@fr)
AnnotationAssertion(rdfs:label :temperature "θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label :temperature "temperature (K)"@en)
DataPropertyRange(:temperature xsd:double)
Declaration(DataProperty(:tennisSurfaceType))
AnnotationAssertion(rdfs:label :tennisSurfaceType "type de surface (tennis)"@fr)
AnnotationAssertion(rdfs:label :tennisSurfaceType "type of tennis surface"@en)
AnnotationAssertion(rdfs:comment :tennisSurfaceType "There are five types of court surface used in professional play. Each surface is different in the speed and height of the bounce of the ball."@en)
AnnotationAssertion(rdfs:label :tennisSurfaceType "type speelgrond"@nl)
AnnotationAssertion(rdfs:label :tennisSurfaceType "tipo de surperficie(tennis"@es)
DataPropertyRange(:tennisSurfaceType xsd:string)
Declaration(DataProperty(:termOfOffice))
AnnotationAssertion(rdfs:label :termOfOffice "term of office"@en)
DataPropertyDomain(:termOfOffice :PopulatedPlace)
DataPropertyRange(:termOfOffice xsd:string)
Declaration(DataProperty(:testaverage))
AnnotationAssertion(rdfs:label :testaverage "testaverage"@en)
DataPropertyDomain(:testaverage :School)
DataPropertyRange(:testaverage xsd:float)
Declaration(DataProperty(:theology))
AnnotationAssertion(rdfs:label :theology "Θεολογία"@el)
AnnotationAssertion(rdfs:label :theology "Theology"@en)
DataPropertyDomain(:theology :ChristianDoctrine)
DataPropertyRange(:theology xsd:string)
Declaration(DataProperty(:throwingSide))
AnnotationAssertion(rdfs:label :throwingSide "throwing side"@en)
DataPropertyDomain(:throwingSide :BaseballPlayer)
DataPropertyRange(:throwingSide xsd:string)
Declaration(DataProperty(:thumbnailCaption))
AnnotationAssertion(rdfs:label :thumbnailCaption "thumbnailCaption"@en)
DataPropertyRange(:thumbnailCaption xsd:string)
Declaration(DataProperty(:timeInSpace))
AnnotationAssertion(rdfs:label :timeInSpace "time in space (s)"@en)
DataPropertyRange(:timeInSpace xsd:double)
Declaration(DataProperty(:timeshiftChannel))
AnnotationAssertion(rdfs:label :timeshiftChannel "timeshift channel"@en)
DataPropertyDomain(:timeshiftChannel :TelevisionStation)
DataPropertyRange(:timeshiftChannel xsd:string)
Declaration(DataProperty(:title))
AnnotationAssertion(rdfs:label :title "título"@es)
AnnotationAssertion(rdfs:label :title "Τίτλος"@el)
AnnotationAssertion(rdfs:label :title "Titel"@de)
AnnotationAssertion(rdfs:label :title "titel"@nl)
AnnotationAssertion(rdfs:label :title "タイトル"@ja)
AnnotationAssertion(rdfs:label :title "title"@en)
DataPropertyRange(:title xsd:string)
Declaration(DataProperty(:titleDate))
AnnotationAssertion(rdfs:label :titleDate "title date"@en)
AnnotationAssertion(rdfs:label :titleDate "titel datum"@nl)
AnnotationAssertion(rdfs:label :titleDate "data do titulo"@pt)
DataPropertyDomain(:titleDate :Person)
DataPropertyRange(:titleDate xsd:date)
Declaration(DataProperty(:toll))
AnnotationAssertion(rdfs:label :toll "Maut ($)"@de)
AnnotationAssertion(rdfs:label :toll "toll ($)"@en)
DataPropertyDomain(:toll :RouteOfTransportation)
DataPropertyRange(:toll xsd:double)
Declaration(DataProperty(:topFloorHeight))
AnnotationAssertion(rdfs:label :topFloorHeight "Höhe der höchsten Etage"@de)
AnnotationAssertion(rdfs:label :topFloorHeight "tor floor height"@en)
DataPropertyDomain(:topFloorHeight :Skyscraper)
DataPropertyRange(:topFloorHeight xsd:nonNegativeInteger)
Declaration(DataProperty(:topLevelDomain))
AnnotationAssertion(rdfs:label :topLevelDomain "domaine de premier niveau (tld)"@fr)
AnnotationAssertion(rdfs:label :topLevelDomain "domínio de topo (tld)"@pt)
AnnotationAssertion(rdfs:label :topLevelDomain "country top level (tld)"@en)
DataPropertyDomain(:topLevelDomain :Country)
DataPropertyRange(:topLevelDomain xsd:string)
Declaration(DataProperty(:topSpeed))
AnnotationAssertion(rdfs:label :topSpeed "top speed (kmh)"@en)
AnnotationAssertion(rdfs:label :topSpeed "Höchstgeschwindigkeit (kmh)"@de)
FunctionalDataProperty(:topSpeed)
DataPropertyRange(:topSpeed xsd:double)
Declaration(DataProperty(:topic))
AnnotationAssertion(rdfs:label :topic "topic"@en)
DataPropertyDomain(:topic :PopulatedPlace)
DataPropertyRange(:topic xsd:string)
Declaration(DataProperty(:torqueOutput))
AnnotationAssertion(rdfs:label :torqueOutput "torque output (Nm)"@en)
FunctionalDataProperty(:torqueOutput)
DataPropertyDomain(:torqueOutput :AutomobileEngine)
DataPropertyRange(:torqueOutput xsd:double)
Declaration(DataProperty(:totalCargo))
AnnotationAssertion(rdfs:label :totalCargo "total cargo (g)"@en)
DataPropertyDomain(:totalCargo :Spacecraft)
DataPropertyRange(:totalCargo xsd:double)
Declaration(DataProperty(:totalDiscs))
AnnotationAssertion(rdfs:label :totalDiscs "total discs"@en)
AnnotationAssertion(rdfs:comment :totalDiscs "the total number of discs contained in the album"@en)
DataPropertyDomain(:totalDiscs :Album)
DataPropertyRange(:totalDiscs xsd:integer)
Declaration(DataProperty(:totalLaunches))
AnnotationAssertion(rdfs:label :totalLaunches "total launches"@en)
DataPropertyRange(:totalLaunches xsd:nonNegativeInteger)
Declaration(DataProperty(:totalMass))
AnnotationAssertion(rdfs:label :totalMass "total mass (g)"@en)
DataPropertyDomain(:totalMass :Spacecraft)
DataPropertyRange(:totalMass xsd:double)
Declaration(DataProperty(:totalPopulation))
AnnotationAssertion(rdfs:label :totalPopulation "total population"@en)
DataPropertyDomain(:totalPopulation :EthnicGroup)
DataPropertyRange(:totalPopulation xsd:nonNegativeInteger)
Declaration(DataProperty(:totalTracks))
AnnotationAssertion(rdfs:label :totalTracks "total tracks"@en)
AnnotationAssertion(rdfs:comment :totalTracks "the total number of tracks contained in the album"@en)
DataPropertyDomain(:totalTracks :Album)
DataPropertyRange(:totalTracks xsd:integer)
Declaration(DataProperty(:totalTravellers))
AnnotationAssertion(rdfs:label :totalTravellers "total travellers"@en)
DataPropertyDomain(:totalTravellers :YearInSpaceflight)
DataPropertyRange(:totalTravellers xsd:nonNegativeInteger)
Declaration(DataProperty(:touaregSettlementName))
AnnotationAssertion(rdfs:label :touaregSettlementName "touareg settlement name"@en)
DataPropertyRange(:touaregSettlementName xsd:string)
Declaration(DataProperty(:tournamentRecord))
AnnotationAssertion(rdfs:label :tournamentRecord "tournament record"@en)
DataPropertyDomain(:tournamentRecord :CollegeCoach)
DataPropertyRange(:tournamentRecord xsd:string)
Declaration(DataProperty(:trackLength))
AnnotationAssertion(rdfs:label :trackLength "Streckenlänge (μ)"@de)
AnnotationAssertion(rdfs:label :trackLength "track length (μ)"@en)
AnnotationAssertion(rdfs:comment :trackLength "Length of the track. Wikipedians usually do not differentiate between track length and line lenght."@en)
DataPropertyDomain(:trackLength :RouteOfTransportation)
DataPropertyRange(:trackLength xsd:double)
Declaration(DataProperty(:trackNumber))
AnnotationAssertion(rdfs:label :trackNumber "track number"@en)
AnnotationAssertion(rdfs:label :trackNumber "νούμερο τραγουδιού"@el)
DataPropertyDomain(:trackNumber :Song)
DataPropertyRange(:trackNumber xsd:positiveInteger)
Declaration(DataProperty(:trainerYears))
AnnotationAssertion(rdfs:label :trainerYears "trainer years"@en)
AnnotationAssertion(rdfs:label :trainerYears "trainersjaren"@nl)
DataPropertyDomain(:trainerYears :SoccerPlayer)
DataPropertyRange(:trainerYears xsd:gYear)
Declaration(DataProperty(:translatedMotto))
AnnotationAssertion(rdfs:label :translatedMotto "translated motto"@en)
DataPropertyRange(:translatedMotto xsd:string)
Declaration(DataProperty(:transmission))
AnnotationAssertion(rdfs:label :transmission "μετάδοση"@el)
AnnotationAssertion(rdfs:label :transmission "transmission"@en)
DataPropertyDomain(:transmission :Automobile)
DataPropertyRange(:transmission xsd:string)
Declaration(DataProperty(:tree))
AnnotationAssertion(rdfs:label :tree "tree"@en)
DataPropertyRange(:tree xsd:string)
Declaration(DataProperty(:tu))
AnnotationAssertion(rdfs:label :tu "tu"@en)
DataPropertyDomain(:tu :Place)
DataPropertyRange(:tu xsd:string)
Declaration(DataProperty(:tuition))
AnnotationAssertion(rdfs:label :tuition "tuition ($)"@en)
DataPropertyDomain(:tuition :School)
DataPropertyRange(:tuition xsd:double)
Declaration(DataProperty(:tvComId))
AnnotationAssertion(rdfs:label :tvComId "tv.com id"@en)
DataPropertyDomain(:tvComId :TelevisionShow)
DataPropertyRange(:tvComId xsd:integer)
Declaration(DataProperty(:typeCoordinate))
AnnotationAssertion(rdfs:label :typeCoordinate "type coordinate"@en)
DataPropertyDomain(:typeCoordinate :Place)
DataPropertyRange(:typeCoordinate xsd:string)
Declaration(DataProperty(:uciCode))
AnnotationAssertion(rdfs:label :uciCode "UCI code"@en)
AnnotationAssertion(rdfs:label :uciCode "codice UCI"@it)
AnnotationAssertion(rdfs:comment :uciCode "Official UCI code for cycling teams"@en)
DataPropertyDomain(:uciCode :CyclingTeam)
DataPropertyRange(:uciCode xsd:string)
Declaration(DataProperty(:umbrellaTitle))
AnnotationAssertion(rdfs:label :umbrellaTitle "umbrella title"@en)
AnnotationAssertion(rdfs:label :umbrellaTitle "overkoepelende titel"@nl)
DataPropertyDomain(:umbrellaTitle :MultiVolumePublication)
DataPropertyRange(:umbrellaTitle xsd:string)
Declaration(DataProperty(:undraftedYear))
AnnotationAssertion(rdfs:label :undraftedYear "undrafted year"@en)
DataPropertyDomain(:undraftedYear :GridironFootballPlayer)
DataPropertyRange(:undraftedYear xsd:gYear)
Declaration(DataProperty(:unicode))
AnnotationAssertion(rdfs:label :unicode "unicode"@en)
DataPropertyDomain(:unicode :Letter)
DataPropertyRange(:unicode xsd:string)
Declaration(DataProperty(:uniprot))
AnnotationAssertion(rdfs:label :uniprot "UniProt"@ja)
AnnotationAssertion(rdfs:label :uniprot "UniProt"@en)
DataPropertyDomain(:uniprot :Biomolecule)
DataPropertyRange(:uniprot xsd:string)
Declaration(DataProperty(:unitCost))
AnnotationAssertion(rdfs:label :unitCost "unit cost ($)"@en)
DataPropertyDomain(:unitCost :Aircraft)
DataPropertyRange(:unitCost xsd:double)
Declaration(DataProperty(:unitedStatesNationalBridgeId))
AnnotationAssertion(rdfs:label :unitedStatesNationalBridgeId "United States National Bridge ID"@en)
DataPropertyDomain(:unitedStatesNationalBridgeId :Bridge)
DataPropertyRange(:unitedStatesNationalBridgeId xsd:string)
Declaration(DataProperty(:unknownOutcomes))
AnnotationAssertion(rdfs:label :unknownOutcomes "unknown outcomes"@en)
AnnotationAssertion(rdfs:comment :unknownOutcomes "number of launches with unknown outcomes (or in progress)"@en)
DataPropertyDomain(:unknownOutcomes :Rocket)
DataPropertyRange(:unknownOutcomes xsd:nonNegativeInteger)
Declaration(DataProperty(:unlcCode))
AnnotationAssertion(rdfs:label :unlcCode "unlc code"@en)
DataPropertyDomain(:unlcCode :PopulatedPlace)
DataPropertyRange(:unlcCode xsd:string)
Declaration(DataProperty(:unloCode))
AnnotationAssertion(rdfs:comment :unloCode "UN/LOCODE, the United Nations Code for Trade and Transport Locations, is a geographic coding scheme developed and maintained by United Nations Economic Commission for Europe (UNECE), a unit of the United Nations. UN/LOCODE assigns codes to locations used in trade and transport  with functions such as seaports, rail and road terminals, airports, post offices and border crossing points."@en)
AnnotationAssertion(rdfs:label :unloCode "UN/LOCODE"@en)
DataPropertyDomain(:unloCode :Place)
DataPropertyRange(:unloCode xsd:string)
Declaration(DataProperty(:updated))
AnnotationAssertion(rdfs:label :updated "updated"@en)
AnnotationAssertion(rdfs:comment :updated "The last update date of a resource"@en)
DataPropertyRange(:updated xsd:date)
Declaration(DataProperty(:upperAge))
AnnotationAssertion(rdfs:label :upperAge "upper age"@en)
DataPropertyDomain(:upperAge :School)
DataPropertyRange(:upperAge xsd:nonNegativeInteger)
Declaration(DataProperty(:urbanArea))
AnnotationAssertion(rdfs:label :urbanArea "urban area"@en)
DataPropertyRange(:urbanArea xsd:string)
Declaration(DataProperty(:usSales))
AnnotationAssertion(rdfs:label :usSales "US sales"@en)
DataPropertyDomain(:usSales :Sales)
DataPropertyRange(:usSales xsd:nonNegativeInteger)
Declaration(DataProperty(:usk))
AnnotationAssertion(rdfs:label :usk "approved rating of the Entertainment Software Self-Regulation Body in Germany"@en)
DataPropertyRange(:usk xsd:integer)
Declaration(DataProperty(:utcOffset))
AnnotationAssertion(rdfs:label :utcOffset "UTC offset"@en)
DataPropertyDomain(:utcOffset :Place)
DataPropertyRange(:utcOffset xsd:string)
Declaration(DataProperty(:v_hb))
AnnotationAssertion(rdfs:label :v_hb "V_hb"@en)
DataPropertyDomain(:v_hb :Globularswarm)
DataPropertyRange(:v_hb xsd:integer)
Declaration(DataProperty(:valvetrain))
AnnotationAssertion(rdfs:label :valvetrain "valvetrain"@en)
DataPropertyDomain(:valvetrain :AutomobileEngine)
Declaration(DataProperty(:vehicleCode))
AnnotationAssertion(rdfs:comment :vehicleCode "Region related vehicle code on the vehicle plates."@en)
AnnotationAssertion(rdfs:label :vehicleCode "voertuig code"@nl)
AnnotationAssertion(rdfs:label :vehicleCode "vehicle code"@en)
AnnotationAssertion(rdfs:label :vehicleCode "KFZ-Kennzeichen"@de)
DataPropertyDomain(:vehicleCode :Place)
DataPropertyRange(:vehicleCode xsd:string)
Declaration(DataProperty(:vehiclesPerDay))
AnnotationAssertion(rdfs:label :vehiclesPerDay "Fahrzeuge pro Tag"@de)
AnnotationAssertion(rdfs:label :vehiclesPerDay "vehicles per day"@en)
DataPropertyDomain(:vehiclesPerDay :RouteOfTransportation)
DataPropertyRange(:vehiclesPerDay xsd:nonNegativeInteger)
Declaration(DataProperty(:virtualChannel))
AnnotationAssertion(rdfs:label :virtualChannel "εικονικό κανάλι"@el)
AnnotationAssertion(rdfs:label :virtualChannel "virtual channel"@en)
DataPropertyDomain(:virtualChannel :Broadcaster)
DataPropertyRange(:virtualChannel xsd:string)
Declaration(DataProperty(:visitorStatisticsAsOf))
AnnotationAssertion(rdfs:comment :visitorStatisticsAsOf "Year visitor information was gathered."@en)
AnnotationAssertion(rdfs:label :visitorStatisticsAsOf "visitor statistics as of"@en)
DataPropertyDomain(:visitorStatisticsAsOf :ArchitecturalStructure)
DataPropertyRange(:visitorStatisticsAsOf xsd:gYear)
Declaration(DataProperty(:visitorsPerDay))
AnnotationAssertion(rdfs:label :visitorsPerDay "visitors per day"@en)
AnnotationAssertion(rdfs:label :visitorsPerDay "Besucher pro Tag"@de)
DataPropertyDomain(:visitorsPerDay :ArchitecturalStructure)
DataPropertyRange(:visitorsPerDay xsd:nonNegativeInteger)
Declaration(DataProperty(:visitorsPerYear))
AnnotationAssertion(rdfs:label :visitorsPerYear "visitors per year"@en)
AnnotationAssertion(rdfs:label :visitorsPerYear "bezoekers per jaar"@nl)
AnnotationAssertion(rdfs:label :visitorsPerYear "Besucher pro Jahr"@de)
DataPropertyDomain(:visitorsPerYear :ArchitecturalStructure)
DataPropertyRange(:visitorsPerYear xsd:nonNegativeInteger)
Declaration(DataProperty(:visitorsPercentageChange))
AnnotationAssertion(rdfs:label :visitorsPercentageChange "prozentuale Veränderung der Besucherzahl"@de)
AnnotationAssertion(rdfs:comment :visitorsPercentageChange "Percentage increase or decrease."@en)
AnnotationAssertion(rdfs:label :visitorsPercentageChange "visitor percentage change"@en)
DataPropertyDomain(:visitorsPercentageChange :ArchitecturalStructure)
DataPropertyRange(:visitorsPercentageChange xsd:double)
Declaration(DataProperty(:visitorsTotal))
AnnotationAssertion(rdfs:label :visitorsTotal "visitors total"@en)
AnnotationAssertion(rdfs:label :visitorsTotal "επιβατική κίνηση"@el)
DataPropertyDomain(:visitorsTotal :ArchitecturalStructure)
DataPropertyRange(:visitorsTotal xsd:nonNegativeInteger)
Declaration(DataProperty(:volcanicActivity))
AnnotationAssertion(rdfs:label :volcanicActivity "volcanic activity"@en)
DataPropertyDomain(:volcanicActivity :Island)
DataPropertyRange(:volcanicActivity xsd:string)
Declaration(DataProperty(:volcanicType))
AnnotationAssertion(rdfs:label :volcanicType "volcanic type"@en)
DataPropertyDomain(:volcanicType :Island)
DataPropertyRange(:volcanicType xsd:string)
Declaration(DataProperty(:volcanoId))
AnnotationAssertion(rdfs:label :volcanoId "volcano id"@en)
DataPropertyDomain(:volcanoId :Island)
DataPropertyRange(:volcanoId xsd:string)
Declaration(DataProperty(:voltageOfElectrification))
AnnotationAssertion(rdfs:comment :voltageOfElectrification "Voltage of the electrification system."@en)
AnnotationAssertion(rdfs:label :voltageOfElectrification "Voltzahl der Elektrifizierung (V)"@de)
AnnotationAssertion(rdfs:label :voltageOfElectrification "voltage of electrification (V)"@en)
DataPropertyDomain(:voltageOfElectrification :RouteOfTransportation)
DataPropertyRange(:voltageOfElectrification xsd:double)
Declaration(DataProperty(:volume))
AnnotationAssertion(rdfs:label :volume "όγκος (μ³)"@el)
AnnotationAssertion(rdfs:label :volume "volume (μ³)"@fr)
AnnotationAssertion(rdfs:label :volume "volume (μ³)"@nl)
AnnotationAssertion(rdfs:label :volume "volume (μ³)"@en)
DataPropertyRange(:volume xsd:double)
Declaration(DataProperty(:volumeQuote))
AnnotationAssertion(rdfs:label :volumeQuote "volume quote"@en)
DataPropertyDomain(:volumeQuote :Place)
DataPropertyRange(:volumeQuote xsd:string)
Declaration(DataProperty(:waistSize))
AnnotationAssertion(rdfs:label :waistSize "Taillenumfang (μ)"@de)
AnnotationAssertion(rdfs:label :waistSize "waist size (μ)"@en)
AnnotationAssertion(rdfs:label :waistSize "ウエスト (μ)"@ja)
DataPropertyDomain(:waistSize :Person)
DataPropertyRange(:waistSize xsd:double)
Declaration(DataProperty(:war))
AnnotationAssertion(rdfs:label :war "wars"@en)
AnnotationAssertion(rdfs:label :war "πολέμους"@el)
DataPropertyDomain(:war :MilitaryPerson)
DataPropertyRange(:war xsd:string)
Declaration(DataProperty(:ward))
AnnotationAssertion(rdfs:label :ward "ward of a liechtenstein settlement"@en)
DataPropertyRange(:ward xsd:string)
Declaration(DataProperty(:water))
AnnotationAssertion(rdfs:label :water "water"@en)
DataPropertyDomain(:water :Place)
DataPropertyRange(:water xsd:string)
Declaration(DataProperty(:waterArea))
AnnotationAssertion(rdfs:label :waterArea "area of water (m2)"@en)
EquivalentDataProperties(:waterArea :area)
DataPropertyDomain(:waterArea :Place)
DataPropertyRange(:waterArea xsd:double)
Declaration(DataProperty(:waterPercentage))
AnnotationAssertion(rdfs:label :waterPercentage "water percentage of a place"@en)
DataPropertyDomain(:waterPercentage :Place)
DataPropertyRange(:waterPercentage xsd:float)
Declaration(DataProperty(:watercourse))
AnnotationAssertion(rdfs:label :watercourse "watercourse"@en)
DataPropertyDomain(:watercourse :PopulatedPlace)
DataPropertyRange(:watercourse xsd:string)
Declaration(DataProperty(:watershed))
AnnotationAssertion(rdfs:label :watershed "watershed (m2)"@en)
AnnotationAssertion(rdfs:label :watershed "waterscheiding (m2)"@nl)
AnnotationAssertion(rdfs:label :watershed "λεκάνη_απορροής (m2)"@el)
AnnotationAssertion(rdfs:label :watershed "cuenca hidrográfica (m2)"@es)
DataPropertyDomain(:watershed :Stream)
DataPropertyRange(:watershed xsd:double)
Declaration(DataProperty(:wavelength))
AnnotationAssertion(rdfs:label :wavelength "wavelength (μ)"@en)
AnnotationAssertion(rdfs:label :wavelength "longueur d'onde (μ)"@fr)
DataPropertyDomain(:wavelength :Colour)
DataPropertyRange(:wavelength xsd:double)
Declaration(DataProperty(:weapon))
AnnotationAssertion(rdfs:label :weapon "weapon"@en)
AnnotationAssertion(rdfs:label :weapon "wapen"@nl)
DataPropertyDomain(:weapon :FictionalCharacter)
DataPropertyRange(:weapon xsd:string)
Declaration(DataProperty(:websiteLabel))
AnnotationAssertion(rdfs:label :websiteLabel "label of a website"@en)
DataPropertyRange(:websiteLabel xsd:string)
Declaration(DataProperty(:weddingParentsDate))
AnnotationAssertion(rdfs:label :weddingParentsDate "Hochzeitstag der Eltern"@de)
AnnotationAssertion(rdfs:label :weddingParentsDate "Parents Wedding Date"@en)
AnnotationAssertion(rdfs:label :weddingParentsDate "data do casamento dos pais"@pt)
DataPropertyDomain(:weddingParentsDate :Person)
DataPropertyRange(:weddingParentsDate xsd:date)
Declaration(DataProperty(:weight))
AnnotationAssertion(rdfs:label :weight "gewicht (g)"@nl)
AnnotationAssertion(rdfs:label :weight "体重 (g)"@ja)
AnnotationAssertion(rdfs:label :weight "peso (g)"@pt)
AnnotationAssertion(rdfs:label :weight "poids (g)"@fr)
AnnotationAssertion(rdfs:label :weight "weight (g)"@en)
AnnotationAssertion(rdfs:label :weight "βάρος (g)"@el)
AnnotationAssertion(rdfs:label :weight "Gewicht (g)"@de)
FunctionalDataProperty(:weight)
DataPropertyRange(:weight xsd:double)
Declaration(DataProperty(:welshName))
AnnotationAssertion(rdfs:label :welshName "welsh name"@en)
DataPropertyDomain(:welshName :Settlement)
DataPropertyRange(:welshName xsd:string)
Declaration(DataProperty(:whaDraft))
AnnotationAssertion(rdfs:label :whaDraft "wha draft"@en)
DataPropertyDomain(:whaDraft :IceHockeyPlayer)
DataPropertyRange(:whaDraft xsd:string)
Declaration(DataProperty(:whaDraftYear))
AnnotationAssertion(rdfs:label :whaDraftYear "wha draft year"@en)
DataPropertyDomain(:whaDraftYear :IceHockeyPlayer)
DataPropertyRange(:whaDraftYear xsd:date)
Declaration(DataProperty(:wheelbase))
AnnotationAssertion(rdfs:label :wheelbase "wheelbase (μ)"@en)
FunctionalDataProperty(:wheelbase)
DataPropertyDomain(:wheelbase :Automobile)
DataPropertyRange(:wheelbase xsd:double)
Declaration(DataProperty(:width))
AnnotationAssertion(rdfs:label :width "πλάτος (μ)"@el)
AnnotationAssertion(rdfs:label :width "breedte (μ)"@nl)
AnnotationAssertion(rdfs:label :width "width (μ)"@en)
AnnotationAssertion(rdfs:label :width "Breite (μ)"@de)
FunctionalDataProperty(:width)
DataPropertyRange(:width xsd:double)
Declaration(DataProperty(:widthQuote))
AnnotationAssertion(rdfs:label :widthQuote "width quote"@en)
DataPropertyDomain(:widthQuote :Place)
DataPropertyRange(:widthQuote xsd:string)
Declaration(DataProperty(:wikiPageID))
AnnotationAssertion(rdfs:label :wikiPageID "Wikipage page ID"@en)
AnnotationAssertion(rdfs:comment :wikiPageID "Reserved for DBpedia."@en)
DataPropertyRange(:wikiPageID xsd:integer)
Declaration(DataProperty(:wikiPageRevisionID))
AnnotationAssertion(rdfs:label :wikiPageRevisionID "Wikipage revision ID"@en)
AnnotationAssertion(rdfs:comment :wikiPageRevisionID "Reserved for DBpedia."@en)
DataPropertyRange(:wikiPageRevisionID xsd:integer)
Declaration(DataProperty(:wineYear))
AnnotationAssertion(rdfs:label :wineYear "wine year"@en)
DataPropertyDomain(:wineYear :WineRegion)
DataPropertyRange(:wineYear xsd:date)
Declaration(DataProperty(:wingArea))
AnnotationAssertion(rdfs:label :wingArea "wing area (m2)"@en)
DataPropertyDomain(:wingArea :Aircraft)
DataPropertyRange(:wingArea xsd:double)
Declaration(DataProperty(:wingspan))
AnnotationAssertion(rdfs:label :wingspan "wingspan (μ)"@en)
DataPropertyDomain(:wingspan :Aircraft)
DataPropertyRange(:wingspan xsd:double)
Declaration(DataProperty(:wins))
AnnotationAssertion(rdfs:label :wins "νίκες"@el)
AnnotationAssertion(rdfs:label :wins "zeges"@nl)
AnnotationAssertion(rdfs:label :wins "wins"@en)
DataPropertyDomain(:wins :Athlete)
DataPropertyRange(:wins xsd:nonNegativeInteger)
Declaration(DataProperty(:winterTemperature))
AnnotationAssertion(rdfs:label :winterTemperature "winter temperature (K)"@en)
DataPropertyDomain(:winterTemperature :Settlement)
DataPropertyRange(:winterTemperature xsd:double)
Declaration(DataProperty(:wordBefore))
AnnotationAssertion(rdfs:label :wordBefore "word before the country"@en)
DataPropertyDomain(:wordBefore :Country)
DataPropertyRange(:wordBefore xsd:string)
Declaration(DataProperty(:work))
AnnotationAssertion(rdfs:label :work "work"@en)
DataPropertyDomain(:work :FictionalCharacter)
DataPropertyRange(:work xsd:string)
Declaration(DataProperty(:workArea))
AnnotationAssertion(rdfs:label :workArea "Arbeitsplätze (m2)"@de)
AnnotationAssertion(rdfs:label :workArea "work area (m2)"@en)
DataPropertyDomain(:workArea :Building)
DataPropertyRange(:workArea xsd:double)
Declaration(DataProperty(:worldChampionTitleYear))
AnnotationAssertion(rdfs:label :worldChampionTitleYear "jaar van wereldkampioen titel"@nl)
AnnotationAssertion(rdfs:label :worldChampionTitleYear "année d'obtention du titre de champion du monde"@fr)
AnnotationAssertion(rdfs:comment :worldChampionTitleYear "il peut s'agir d'une ou de plusieurs années"@fr)
AnnotationAssertion(rdfs:comment :worldChampionTitleYear "can be one or several years"@en)
AnnotationAssertion(rdfs:label :worldChampionTitleYear "year of world champion title"@en)
DataPropertyDomain(:worldChampionTitleYear :Athlete)
DataPropertyRange(:worldChampionTitleYear xsd:gYear)
Declaration(DataProperty(:worstDefeat))
AnnotationAssertion(rdfs:label :worstDefeat "worst defeat"@en)
DataPropertyDomain(:worstDefeat :SoccerClub)
DataPropertyRange(:worstDefeat xsd:string)
Declaration(DataProperty(:year))
AnnotationAssertion(rdfs:label :year "año"@es)
AnnotationAssertion(rdfs:label :year "anno"@it)
AnnotationAssertion(rdfs:label :year "έτος"@el)
AnnotationAssertion(rdfs:label :year "year"@en)
AnnotationAssertion(rdfs:label :year "Jahr"@de)
AnnotationAssertion(rdfs:label :year "jaar"@nl)
AnnotationAssertion(rdfs:label :year "année"@fr)
DataPropertyDomain(:year :Sales)
DataPropertyRange(:year xsd:gYear)
Declaration(DataProperty(:yearOfConstruction))
AnnotationAssertion(rdfs:label :yearOfConstruction "year of construction"@en)
AnnotationAssertion(rdfs:comment :yearOfConstruction "Το έτος στο οποίο ολοκληρώθηκε η κατασκευή ενός μέρους."@el)
AnnotationAssertion(rdfs:label :yearOfConstruction "Baujahr"@de)
AnnotationAssertion(rdfs:label :yearOfConstruction "έτος κατασκευής"@el)
AnnotationAssertion(rdfs:comment :yearOfConstruction "The year in which construction of the Place was finished."@en)
AnnotationAssertion(rdfs:label :yearOfConstruction "bouwjaar"@nl)
DataPropertyDomain(:yearOfConstruction :Place)
DataPropertyRange(:yearOfConstruction xsd:gYear)
Declaration(DataProperty(:yearOfElectrification))
AnnotationAssertion(rdfs:comment :yearOfElectrification "Year station was electrified, if not previously at date of opening."@en)
AnnotationAssertion(rdfs:label :yearOfElectrification "Jahr der Elektrifizierung"@de)
AnnotationAssertion(rdfs:label :yearOfElectrification "year of electrification"@en)
DataPropertyDomain(:yearOfElectrification :Station)
DataPropertyRange(:yearOfElectrification xsd:gYear)
Declaration(DataProperty(:years))
AnnotationAssertion(rdfs:label :years "years"@en)
AnnotationAssertion(rdfs:label :years "seizoen"@nl)
DataPropertyDomain(:years :SoccerPlayer)
DataPropertyRange(:years xsd:gYear)
Declaration(DataProperty(:youthYears))
AnnotationAssertion(rdfs:label :youthYears "youth years"@en)
DataPropertyDomain(:youthYears :SoccerPlayer)
DataPropertyRange(:youthYears xsd:gYear)
Declaration(DataProperty(:zdb))
AnnotationAssertion(rdfs:comment :zdb "Identifier for serial titles. More precise than issn"@en)
AnnotationAssertion(rdfs:label :zdb "zdb"@en)
DataPropertyDomain(:zdb :PeriodicalLiterature)
DataPropertyRange(:zdb xsd:string)
Declaration(DataProperty(:zipCode))
AnnotationAssertion(rdfs:label :zipCode "postcode"@nl)
AnnotationAssertion(rdfs:label :zipCode "zip code"@en)
FunctionalDataProperty(:zipCode)
DataPropertyDomain(:zipCode :PopulatedPlace)
DataPropertyRange(:zipCode xsd:string)
Declaration(DataProperty(<http://dbpedia.org/ontology/Astronaut/timeInSpace>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Astronaut/timeInSpace> "time in space (m)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Astronaut/timeInSpace> :Astronaut)
Declaration(DataProperty(<http://dbpedia.org/ontology/Automobile/fuelCapacity>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Automobile/fuelCapacity> "fuel capacity (l)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Automobile/fuelCapacity> :Automobile)
Declaration(DataProperty(<http://dbpedia.org/ontology/Automobile/wheelbase>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Automobile/wheelbase> "wheelbase (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Automobile/wheelbase> :Automobile)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/acceleration>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "acceleration (s)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "Beschleunigung (s)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/acceleration> "επιτάχυνση (s)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/acceleration> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/co2Emission>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/co2Emission> "CO2 emission (g/km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/co2Emission> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/cylinderBore>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/cylinderBore> "cylinder bore (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/cylinderBore> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/diameter>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diamètre (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diameter (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "diameter (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/diameter> "διάμετρος (mm)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/diameter> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/displacement>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/displacement> "displacement (cc)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/displacement> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/height>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "Höhe (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/height> "altura (mm)"@pt)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/height> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/length>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "longueur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "Länge (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/length> "length (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/length> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/pistonStroke>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/pistonStroke> "piston stroke (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/pistonStroke> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/powerOutput>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/powerOutput> "power output (kW)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/powerOutput> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/topSpeed>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/topSpeed> "top speed (kmh)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/topSpeed> "Höchstgeschwindigkeit (kmh)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/topSpeed> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/torqueOutput>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/torqueOutput> "torque output (Nm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/torqueOutput> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/weight>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/weight> "poids (kg)"@fr)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/weight> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/AutomobileEngine/width>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "Breite (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/AutomobileEngine/width> "width (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/AutomobileEngine/width> :AutomobileEngine)
Declaration(DataProperty(<http://dbpedia.org/ontology/Building/floorArea>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "floor area (m2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "περιοχή ορόφων (m2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Building/floorArea> "vloeroppervlak (m2)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/Building/floorArea> :Building)
Declaration(DataProperty(<http://dbpedia.org/ontology/Canal/maximumBoatBeam>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatBeam> "μέγιστο_πλάτος_πλοίου (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatBeam> "maximum boat beam (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Canal/maximumBoatBeam> :Canal)
Declaration(DataProperty(<http://dbpedia.org/ontology/Canal/maximumBoatLength>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatLength> "maximum boat length (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/maximumBoatLength> "μέγιστο_μήκος_πλοίου (μ)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Canal/maximumBoatLength> :Canal)
Declaration(DataProperty(<http://dbpedia.org/ontology/Canal/originalMaximumBoatBeam>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/originalMaximumBoatBeam> "original maximum boat beam (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Canal/originalMaximumBoatBeam> :Canal)
Declaration(DataProperty(<http://dbpedia.org/ontology/Canal/originalMaximumBoatLength>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Canal/originalMaximumBoatLength> "original maximum boat length (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Canal/originalMaximumBoatLength> :Canal)
Declaration(DataProperty(<http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "沸点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "point d'ébullition (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "Siedepunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "boiling point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "σημείο βρασμού (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> "kookpunt (K)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/ChemicalSubstance/boilingPoint> :ChemicalSubstance)
Declaration(DataProperty(<http://dbpedia.org/ontology/ChemicalSubstance/density>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "Dichte (μ3)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "density (μ3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/density> "πυκνότητα (μ3)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/ChemicalSubstance/density> :ChemicalSubstance)
Declaration(DataProperty(<http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "Schmelzpunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "point de fusion (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "melting point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> "融点 (K)"@ja)
DataPropertyDomain(<http://dbpedia.org/ontology/ChemicalSubstance/meltingPoint> :ChemicalSubstance)
Declaration(DataProperty(<http://dbpedia.org/ontology/Drug/boilingPoint>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "Siedepunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "point d'ébullition (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "boiling point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "kookpunt (K)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "沸点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/boilingPoint> "σημείο βρασμού (K)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Drug/boilingPoint> :Drug)
Declaration(DataProperty(<http://dbpedia.org/ontology/Drug/meltingPoint>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "Schmelzpunkt (K)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "融点 (K)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "melting point (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Drug/meltingPoint> "point de fusion (K)"@fr)
DataPropertyDomain(<http://dbpedia.org/ontology/Drug/meltingPoint> :Drug)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/apoapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/apoapsis> "apoapsis (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/apoapsis> "απόαψης (km)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/apoapsis> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/averageSpeed>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "average speed (km/s)"@en)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Galaxy/averageSpeed> "Η μέση ταχύτητα ενός πράγματος."@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "μέση ταχύτητα (km/s)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/averageSpeed> "Durchschnittsgeschwindigkeit (km/s)"@de)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Galaxy/averageSpeed> "The average speed of a thing."@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/averageSpeed> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/density>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "Dichte (μ3)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "πυκνότητα (μ3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/density> "density (μ3)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/density> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/mass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/mass> "μάζα (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/mass> "mass (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/mass> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/maximumTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/maximumTemperature> "maximum temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/maximumTemperature> "μέγιστη θερμοκρασία (K)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/maximumTemperature> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/meanRadius>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanRadius> "mean radius (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanRadius> "μέση ακτίνα (km)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/meanRadius> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/meanTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanTemperature> "mean temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/meanTemperature> "μέση θερμοκρασία (K)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/meanTemperature> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/minimumTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/minimumTemperature> "ελάχιστη θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/minimumTemperature> "minimum temperature (K)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/minimumTemperature> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/orbitalPeriod>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/orbitalPeriod> "orbital period (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/orbitalPeriod> "Περίοδος περιφοράς (μ)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/orbitalPeriod> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/periapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/periapsis> "periapsis (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/periapsis> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/surfaceArea>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/surfaceArea> "έκταση (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/surfaceArea> "surface area (km2)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/surfaceArea> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/temperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "température (K)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/temperature> "temperature (K)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/temperature> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/Galaxy/volume>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "volume (km3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Galaxy/volume> "όγκος (km3)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Galaxy/volume> :Galaxy)
Declaration(DataProperty(<http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> "area metro (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> "περιοχή μετρό (km2)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/GeopoliticalOrganisation/areaMetro> :GeopoliticalOrganisation)
Declaration(DataProperty(<http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "Bevölkerungsdichte (/sqkm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "πυκνότητα_πληθυσμού (/sqkm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "population density (/sqkm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> "bevolkingsdichtheid (/sqkm)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/GeopoliticalOrganisation/populationDensity> :GeopoliticalOrganisation)
Declaration(DataProperty(<http://dbpedia.org/ontology/GrandPrix/course>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/course> "course (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/GrandPrix/course> :GrandPrix)
Declaration(DataProperty(<http://dbpedia.org/ontology/GrandPrix/distance>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/distance> "distance (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/GrandPrix/distance> "Entfernung (km)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/GrandPrix/distance> :GrandPrix)
Declaration(DataProperty(<http://dbpedia.org/ontology/Infrastructure/length>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "lengte (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "longueur (km)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "Länge (km)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "length (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Infrastructure/length> "μήκος (km)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Infrastructure/length> :Infrastructure)
Declaration(DataProperty(<http://dbpedia.org/ontology/Lake/areaOfCatchment>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/areaOfCatchment> "area of catchment (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/areaOfCatchment> "λίμνη (km2)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Lake/areaOfCatchment> :Lake)
Declaration(DataProperty(<http://dbpedia.org/ontology/Lake/shoreLength>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/shoreLength> "μήκος_όχθης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/shoreLength> "shore length (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Lake/shoreLength> :Lake)
Declaration(DataProperty(<http://dbpedia.org/ontology/Lake/volume>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "όγκος (μ³)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Lake/volume> "volume (μ³)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/Lake/volume> :Lake)
Declaration(DataProperty(<http://dbpedia.org/ontology/LunarCrater/diameter>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diameter (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diamètre (km)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "diameter (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/LunarCrater/diameter> "διάμετρος (km)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/LunarCrater/diameter> :LunarCrater)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/diameter>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diamètre (μ)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "διάμετρος (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diameter (μ)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/diameter> "diameter (μ)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/diameter> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/height>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "Höhe (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/height> "altura (mm)"@pt)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/height> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/length>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "length (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "longueur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/length> "Länge (mm)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/length> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/mass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/mass> "μάζα (kg)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/mass> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/weight>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/weight> "体重 (kg)"@ja)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/weight> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/MeanOfTransportation/width>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "width (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/MeanOfTransportation/width> "Breite (mm)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/MeanOfTransportation/width> :MeanOfTransportation)
Declaration(DataProperty(<http://dbpedia.org/ontology/Person/height>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "višina (cm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "身長 (cm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "altura (cm)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "ύψος (cm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "hoogte (cm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "height (cm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "Höhe (cm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/height> "hauteur (cm)"@fr)
DataPropertyDomain(<http://dbpedia.org/ontology/Person/height> :Person)
Declaration(DataProperty(<http://dbpedia.org/ontology/Person/weight>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "weight (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Person/weight> "peso (kg)"@pt)
DataPropertyDomain(<http://dbpedia.org/ontology/Person/weight> :Person)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/apoapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/apoapsis> "απόαψης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/apoapsis> "apoapsis (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/apoapsis> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/averageSpeed>))
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Planet/averageSpeed> "The average speed of a thing."@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "μέση ταχύτητα (km/s)"@el)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Planet/averageSpeed> "Η μέση ταχύτητα ενός πράγματος."@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "Durchschnittsgeschwindigkeit (km/s)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/averageSpeed> "average speed (km/s)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/averageSpeed> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/density>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "density (μ3)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "densité (μ3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "密度 (μ3)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "πυκνότητα (μ3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "densidade (μ3)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/density> "Dichte (μ3)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/density> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/mass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/mass> "μάζα (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/mass> "mass (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/mass> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/maximumTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/maximumTemperature> "μέγιστη θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/maximumTemperature> "maximum temperature (K)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/maximumTemperature> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/meanRadius>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanRadius> "mean radius (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanRadius> "μέση ακτίνα (km)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/meanRadius> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/meanTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanTemperature> "mean temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/meanTemperature> "μέση θερμοκρασία (K)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/meanTemperature> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/minimumTemperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/minimumTemperature> "minimum temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/minimumTemperature> "ελάχιστη θερμοκρασία (K)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/minimumTemperature> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/orbitalPeriod>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/orbitalPeriod> "Περίοδος περιφοράς (μ)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/orbitalPeriod> "orbital period (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/orbitalPeriod> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/periapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/periapsis> "periapsis (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/periapsis> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/surfaceArea>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/surfaceArea> "surface area (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/surfaceArea> "έκταση (km2)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/surfaceArea> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/temperature>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "temperature (K)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "θερμοκρασία (K)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/temperature> "température (K)"@fr)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/temperature> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/Planet/volume>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "όγκος (km3)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Planet/volume> "volume (km3)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Planet/volume> :Planet)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/area>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "έκταση (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "Fläche (km2)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "área (km2)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "oppervlakte (km2)"@nl)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/PopulatedPlace/area> "The area of a owl:Thing in square metre."@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "superficie (km2)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/area> "area (km2)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/area> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/areaMetro>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaMetro> "area metro (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaMetro> "περιοχή μετρό (km2)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/areaMetro> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/areaTotal>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "έκταση περιοχής (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "Fläche (km2)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "superficie (km2)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "oppervlakte (km2)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaTotal> "area total (km2)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/areaTotal> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/areaUrban>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaUrban> "αστική περιοχή (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/areaUrban> "area urban (km2)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/areaUrban> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/populationDensity>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "bevolkingsdichtheid (/sqkm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "Bevölkerungsdichte (/sqkm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "πυκνότητα_πληθυσμού (/sqkm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationDensity> "population density (/sqkm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/populationDensity> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> "population metro density (/sqkm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> "bevolkingsdichtheid (/sqkm)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/populationMetroDensity> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/PopulatedPlace/populationUrbanDensity>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/PopulatedPlace/populationUrbanDensity> "population urban density (/sqkm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/PopulatedPlace/populationUrbanDensity> :PopulatedPlace)
Declaration(DataProperty(<http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload>))
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> "Payload mass in a typical Low Earth orbit"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> "lower earth orbit payload (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload> :Rocket)
Declaration(DataProperty(<http://dbpedia.org/ontology/Rocket/mass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Rocket/mass> "μάζα (kg)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/Rocket/mass> :Rocket)
Declaration(DataProperty(<http://dbpedia.org/ontology/School/campusSize>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/School/campusSize> "campus size (km2)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/School/campusSize> :School)
Declaration(DataProperty(<http://dbpedia.org/ontology/Software/fileSize>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Software/fileSize> "size (MB)"@en)
AnnotationAssertion(rdfs:comment <http://dbpedia.org/ontology/Software/fileSize> "size of a file or software"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Software/fileSize> "Dateigröße (MB)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/Software/fileSize> :Software)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/cmpEvaDuration>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/cmpEvaDuration> "CMP EVA duration (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/cmpEvaDuration> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/distanceTraveled>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/distanceTraveled> "afgelegde afstand (km)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/distanceTraveled> "distance traveled (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/distanceTraveled> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/lunarEvaTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarEvaTime> "lunar EVA time (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/lunarEvaTime> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/lunarOrbitTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarOrbitTime> "lunar orbit time (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/lunarOrbitTime> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/lunarSampleMass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarSampleMass> "lunar sample mass (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/lunarSampleMass> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/lunarSurfaceTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/lunarSurfaceTime> "lunar surface time (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/lunarSurfaceTime> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/mass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/mass> "mass (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/mass> "μάζα (kg)"@el)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/mass> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/missionDuration>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/missionDuration> "mission duration (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/missionDuration> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/stationEvaDuration>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/stationEvaDuration> "station EVA duration (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/stationEvaDuration> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceMission/stationVisitDuration>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceMission/stationVisitDuration> "station visit duration (ω)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceMission/stationVisitDuration> :SpaceMission)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceShuttle/distance>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/distance> "distance (km)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/distance> "Entfernung (km)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceShuttle/distance> :SpaceShuttle)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceShuttle/timeInSpace>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceShuttle/timeInSpace> "time in space (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceShuttle/timeInSpace> :SpaceShuttle)
Declaration(DataProperty(<http://dbpedia.org/ontology/SpaceStation/volume>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "όγκος (μ³)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/SpaceStation/volume> "volume (μ³)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/SpaceStation/volume> :SpaceStation)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/apoapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/apoapsis> "απόαψης (km)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/apoapsis> "apoapsis (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/apoapsis> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/cargoFuel>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoFuel> "cargo fuel (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/cargoFuel> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/cargoGas>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoGas> "cargo gas (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/cargoGas> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/cargoWater>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/cargoWater> "cargo water (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/cargoWater> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/dockedTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dockedTime> "docked time (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/dockedTime> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/dryCargo>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dryCargo> "dry cargo (kg)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/dryCargo> "droge last (kg)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/dryCargo> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/freeFlightTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/freeFlightTime> "free flight time (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/freeFlightTime> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/periapsis>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/periapsis> "periapsis (km)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/periapsis> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/port1DockedTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/port1DockedTime> "port1 docked time (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/port1DockedTime> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/port2DockedTime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/port2DockedTime> "port2 docked time (μ)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/port2DockedTime> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/totalCargo>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/totalCargo> "total cargo (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/totalCargo> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Spacecraft/totalMass>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Spacecraft/totalMass> "total mass (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Spacecraft/totalMass> :Spacecraft)
Declaration(DataProperty(<http://dbpedia.org/ontology/Stream/discharge>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "εκροή (m³/s)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "uitstoot (m³/s)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/discharge> "discharge (m³/s)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Stream/discharge> :Stream)
Declaration(DataProperty(<http://dbpedia.org/ontology/Stream/dischargeAverage>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/dischargeAverage> "discharge average (m³/s)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Stream/dischargeAverage> :Stream)
Declaration(DataProperty(<http://dbpedia.org/ontology/Stream/maximumDischarge>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/maximumDischarge> "maximum discharge (m³/s)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Stream/maximumDischarge> :Stream)
Declaration(DataProperty(<http://dbpedia.org/ontology/Stream/minimumDischarge>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/minimumDischarge> "minimum discharge (m³/s)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Stream/minimumDischarge> :Stream)
Declaration(DataProperty(<http://dbpedia.org/ontology/Stream/watershed>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "λεκάνη_απορροής (km2)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "watershed (km2)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "waterscheiding (km2)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Stream/watershed> "cuenca hidrográfica (km2)"@es)
DataPropertyDomain(<http://dbpedia.org/ontology/Stream/watershed> :Stream)
Declaration(DataProperty(<http://dbpedia.org/ontology/Weapon/diameter>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "διάμετρος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diamètre (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diameter (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/diameter> "diameter (mm)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/Weapon/diameter> :Weapon)
Declaration(DataProperty(<http://dbpedia.org/ontology/Weapon/height>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "altura (mm)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "višina (mm)"@sl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "ύψος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "height (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "hauteur (mm)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "身長 (mm)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "hoogte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/height> "Höhe (mm)"@de)
DataPropertyDomain(<http://dbpedia.org/ontology/Weapon/height> :Weapon)
Declaration(DataProperty(<http://dbpedia.org/ontology/Weapon/length>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "lengte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "μήκος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "length (mm)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "Länge (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/length> "longueur (mm)"@fr)
DataPropertyDomain(<http://dbpedia.org/ontology/Weapon/length> :Weapon)
Declaration(DataProperty(<http://dbpedia.org/ontology/Weapon/weight>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "βάρος (kg)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "Gewicht (kg)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "体重 (kg)"@ja)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "poids (kg)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "peso (kg)"@pt)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "gewicht (kg)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/weight> "weight (kg)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Weapon/weight> :Weapon)
Declaration(DataProperty(<http://dbpedia.org/ontology/Weapon/width>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "Breite (mm)"@de)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "πλάτος (mm)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "breedte (mm)"@nl)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Weapon/width> "width (mm)"@en)
DataPropertyDomain(<http://dbpedia.org/ontology/Weapon/width> :Weapon)
Declaration(DataProperty(<http://dbpedia.org/ontology/Work/runtime>))
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "runtime (m)"@en)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "διάρκεια (m)"@el)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "durée (m)"@fr)
AnnotationAssertion(rdfs:label <http://dbpedia.org/ontology/Work/runtime> "duur (m)"@nl)
DataPropertyDomain(<http://dbpedia.org/ontology/Work/runtime> :Work)
AnnotationAssertion(rdfs:label :adjacentSettlement "adjacent settlement of a switzerland settlement"@en)
AnnotationPropertyDomain(:adjacentSettlement :SwitzerlandSettlement)
AnnotationAssertion(rdfs:label :administrativeCenter "administrative center"@en)
AnnotationPropertyDomain(:administrativeCenter :AlgerianSettlement)
AnnotationAssertion(rdfs:label :algerianSettlementName "algerian settlement name"@en)
AnnotationPropertyDomain(:algerianSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :apcPresident "apc president"@en)
AnnotationPropertyDomain(:apcPresident :AlgerianSettlement)
AnnotationAssertion(rdfs:label :appmag_v "appmag_v"@en)
AnnotationPropertyDomain(:appmag_v :openswarm)
AnnotationAssertion(rdfs:label :arabicName "arabic name of a lebanon settlement"@en)
AnnotationPropertyDomain(:arabicName :LebanonSettlement)
AnnotationAssertion(rdfs:label :austrianLand "austrian land"@en)
AnnotationPropertyDomain(:austrianLand :AustrianSettlement)
AnnotationAssertion(rdfs:label :authorityTitle "authority title of a romanian settlement"@en)
AnnotationPropertyDomain(:authorityTitle :RomaniaSettlement)
AnnotationAssertion(rdfs:label :belgiumMergedSettlement "belgium merged settlement"@en)
AnnotationPropertyDomain(:belgiumMergedSettlement :BelgiumSettlement)
AnnotationAssertion(rdfs:label :belgiumPoliticalMajority "belgium political majority"@en)
AnnotationPropertyDomain(:belgiumPoliticalMajority :BelgiumSettlement)
AnnotationAssertion(rdfs:label :belgiumPoliticalSeats "belgium political seats"@en)
AnnotationPropertyDomain(:belgiumPoliticalSeats :BelgiumSettlement)
AnnotationAssertion(rdfs:label :belgiumReffBourgmestre "referent bourgmestre"@en)
AnnotationPropertyDomain(:belgiumReffBourgmestre :BelgiumSettlement)
AnnotationAssertion(rdfs:label :bird "bird"@en)
AnnotationPropertyDomain(:bird :JapanPrefecture)
AnnotationAssertion(rdfs:label :center "norwegian center"@en)
AnnotationPropertyDomain(:center :NorwaySettlement)
AnnotationAssertion(rdfs:label :chaouiSettlementName "chaoui settlement name"@en)
AnnotationPropertyDomain(:chaouiSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :comitat "comitat of a settlement"@en)
AnnotationPropertyDomain(:comitat :HungarySettlement)
AnnotationAssertion(rdfs:label :council "council of a liechtenstein settlement"@en)
AnnotationPropertyDomain(:council :LiechtensteinSettlement)
AnnotationAssertion(rdfs:label :credit "credit"@en)
AnnotationPropertyDomain(:credit :openswarm)
AnnotationAssertion(rdfs:label :daira "daira"@en)
AnnotationPropertyDomain(:daira :AlgerianSettlement)
AnnotationAssertion(rdfs:label :dateLastUpdated "Date Last Updated"@en)
AnnotationPropertyDomain(:dateLastUpdated :Document)
AnnotationAssertion(rdfs:label :dec "dec"@en)
AnnotationPropertyDomain(:dec :openswarm)
AnnotationAssertion(rdfs:label :dist_ly "dist_ly"@en)
AnnotationPropertyDomain(:dist_ly :openswarm)
AnnotationAssertion(rdfs:label :dist_pc "dist_pc"@en)
AnnotationPropertyDomain(:dist_pc :openswarm)
AnnotationAssertion(rdfs:label :dutchMIPCode "monumentcode voor het Monumenten Inventarisatie Project"@nl)
AnnotationAssertion(rdfs:comment :dutchMIPCode "The Dutch MIP project was meant to take stock of all kinds of monuments"@en)
AnnotationAssertion(rdfs:label :dutchMIPCode "monument code for the Monuments Inventory Project"@en)
AnnotationAssertion(rdfs:comment :dutchMIPCode "Code voor alle soorten monumenten gebezigd door het MI-project"@nl)
AnnotationPropertyDomain(:dutchMIPCode <http://dbpedia.org/ontology/ArchitecturalStructure,_Monument>)
AnnotationAssertion(rdfs:label :dutchName "city dutch name"@en)
AnnotationPropertyDomain(:dutchName :BelgiumSettlement)
AnnotationAssertion(rdfs:label :employersCelebration "employer's celebration"@en)
AnnotationPropertyDomain(:employersCelebration :AlgerianSettlement)
AnnotationAssertion(rdfs:label :finnishName "finnish name of a sweden settlement"@en)
AnnotationPropertyDomain(:finnishName :SwedenSettlement)
AnnotationAssertion(rdfs:label :flower "flower"@en)
AnnotationPropertyDomain(:flower :JapanPrefecture)
AnnotationAssertion(rdfs:label :highestPoint "highest point of a norwegian settlement"@en)
AnnotationPropertyDomain(:highestPoint :NorwaySettlement)
AnnotationAssertion(rdfs:label :inseeCode "INSEE-code"@nl)
AnnotationAssertion(rdfs:comment :inseeCode "numerical indexing code used by the French National Institute for Statistics and Economic Studies (INSEE) to identify various entities"@en)
AnnotationAssertion(rdfs:label :inseeCode "INSEE code"@en)
AnnotationPropertyDomain(:inseeCode :FrenchSettlement)
AnnotationAssertion(rdfs:label :isCityState "is a city state"@en)
AnnotationPropertyDomain(:isCityState :AustrianSettlement)
AnnotationAssertion(rdfs:label :kabyleSettlementName "kabyle settlement name"@en)
AnnotationPropertyDomain(:kabyleSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :landRegistryCode "land registry code"@en)
AnnotationPropertyDomain(:landRegistryCode :AlgerianSettlement)
AnnotationAssertion(rdfs:label :landeshauptmann "landeshauptmann"@en)
AnnotationPropertyDomain(:landeshauptmann :AustrianAdministrativeRegion)
AnnotationAssertion(rdfs:label :landskap "norwegian landskap"@en)
AnnotationPropertyDomain(:landskap :NorwaySettlement)
AnnotationAssertion(rdfs:label :landtag "austrian land tag"@en)
AnnotationPropertyDomain(:landtag :AustrianAdministrativeRegion)
AnnotationAssertion(rdfs:label :landtagMandate "austrian land tag mandate"@en)
AnnotationPropertyDomain(:landtagMandate :AustrianAdministrativeRegion)
AnnotationAssertion(rdfs:label :legalArrondissement "legal arrondissement"@en)
AnnotationPropertyDomain(:legalArrondissement :BelgiumSettlement)
AnnotationAssertion(rdfs:label :licenceLetter "licence letter of a german settlement"@en)
AnnotationPropertyDomain(:licenceLetter :GermanSettlement)
AnnotationAssertion(rdfs:label :locality "locality of a switzerland settlement"@en)
AnnotationPropertyDomain(:locality :SwitzerlandSettlement)
AnnotationAssertion(rdfs:label :mayorCouncillor "councillor of an austrian mayor"@en)
AnnotationPropertyDomain(:mayorCouncillor :AustrianSettlement)
AnnotationAssertion(rdfs:label :mayorFunction "mayor function of a switzerland settlement"@en)
AnnotationPropertyDomain(:mayorFunction :SwitzerlandSettlement)
AnnotationAssertion(rdfs:label :mayorTitle "mayor title of a hungarian settlement"@en)
AnnotationPropertyDomain(:mayorTitle :HungarySettlement)
AnnotationAssertion(rdfs:label :membershipAsOf "date membership established"@en)
AnnotationAssertion(rdfs:label :membershipAsOf "datum vaststellen ledental"@nl)
AnnotationPropertyDomain(:membershipAsOf <http://dbpedia.org/ontology/Organisation,_Parish>)
AnnotationAssertion(rdfs:label :mostDownPoint "most down point of a norwegian settlement"@en)
AnnotationPropertyDomain(:mostDownPoint :NorwaySettlement)
AnnotationAssertion(rdfs:label :mozabiteSettlementName "mozabite settlement name"@en)
AnnotationPropertyDomain(:mozabiteSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :mukhtar "mukthar of a lebanon settlement"@en)
AnnotationPropertyDomain(:mukhtar :LebanonSettlement)
AnnotationAssertion(rdfs:label :names "names"@en)
AnnotationPropertyDomain(:names :openswarm)
AnnotationAssertion(rdfs:label :neighbourhood "neighbourhood of a hungarian settlement"@en)
AnnotationPropertyDomain(:neighbourhood :HungarySettlement)
AnnotationAssertion(rdfs:label :numberOfNeighbourhood "number of neighbourhood"@en)
AnnotationPropertyDomain(:numberOfNeighbourhood :GermanSettlement)
AnnotationAssertion(rdfs:label :officialName "official name of a switzerland settlement"@en)
AnnotationPropertyDomain(:officialName :SwitzerlandSettlement)
AnnotationAssertion(rdfs:label :ons "ons"@en)
AnnotationPropertyDomain(:ons :AlgerianSettlement)
AnnotationAssertion(rdfs:label :prefect "prefect of a romanian settlement"@en)
AnnotationPropertyDomain(:prefect :RomaniaSettlement)
AnnotationAssertion(rdfs:label :prefectMandate "mandate of a prefect of a romanian settlement"@en)
AnnotationPropertyDomain(:prefectMandate :RomaniaSettlement)
AnnotationAssertion(rdfs:label :ra "ra"@en)
AnnotationPropertyDomain(:ra :openswarm)
AnnotationAssertion(rdfs:label :sameName "same name of a sweden settlement"@en)
AnnotationPropertyDomain(:sameName :SwedenSettlement)
AnnotationAssertion(rdfs:label :seatNumber "number of seats in the land parlement"@en)
AnnotationPropertyDomain(:seatNumber :AustrianAdministrativeRegion)
AnnotationAssertion(rdfs:label :settlementAttached "settlement attached"@en)
AnnotationPropertyDomain(:settlementAttached :AlgerianSettlement)
AnnotationAssertion(rdfs:label :signName "sign name of a hungarian settlement"@en)
AnnotationPropertyDomain(:signName :HungarySettlement)
AnnotationAssertion(rdfs:label :size_v "size_v"@en)
AnnotationAssertion(rdfs:label :size_v "μέγεθος"@el)
AnnotationPropertyDomain(:size_v :openswarm)
AnnotationAssertion(rdfs:label :tamazightSettlementName "tamazight settlement name"@en)
AnnotationPropertyDomain(:tamazightSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :touaregSettlementName "touareg settlement name"@en)
AnnotationPropertyDomain(:touaregSettlementName :AlgerianSettlement)
AnnotationAssertion(rdfs:label :tree "tree"@en)
AnnotationPropertyDomain(:tree :JapanPrefecture)
AnnotationAssertion(rdfs:label :urbanArea "urban area"@en)
AnnotationPropertyDomain(:urbanArea :AlgerianSettlement)
AnnotationAssertion(rdfs:label :ward "ward of a liechtenstein settlement"@en)
AnnotationPropertyDomain(:ward :LiechtensteinSettlement)
AnnotationAssertion(rdfs:label :wilaya "wilaya"@en)
AnnotationPropertyDomain(:wilaya :AlgerianSettlement)
)
